05:07:32.348 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding
05:07:32.354 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing
05:07:32.850 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors
05:07:32.852 INFO [NodeOptions.discoverDrivers] - Looking for existing drivers on the PATH.
05:07:32.852 INFO [NodeOptions.discoverDrivers] - Add '--selenium-manager true' to the startup command to setup drivers automatically.
05:07:32.865 DEBUG [SeleniumManager.getBinary] - Selenium Manager binary found at: /home/ubuntu/.cache/selenium/manager/0.4.16/selenium-manager
05:07:32.866 DEBUG [SeleniumManager.runCommand] - Executing Process: [--browser, chrome, --output, json, --debug, --offline]
05:07:32.913 DEBUG [ExternalProcess$Builder.lambda$start$0] - completed to copy the output of process 42568
05:07:32.922 DEBUG [SeleniumManager.lambda$runCommand$1] - Offline flag set, but also asked not to avoid browser downloads. Honouring offline flag
05:07:32.923 DEBUG [SeleniumManager.lambda$runCommand$1] - Using Selenium Manager in offline mode
05:07:32.923 DEBUG [SeleniumManager.lambda$runCommand$1] - Found chromedriver 131.0.6778.204 in PATH: /usr/local/bin/chromedriver
05:07:32.923 DEBUG [SeleniumManager.lambda$runCommand$1] - Found chromium-browser in PATH: /usr/bin/chromium-browser
05:07:32.923 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: /usr/bin/chromium-browser --version
05:07:32.923 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:32.924 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: "/usr/bin/chromium-browser" --version
05:07:32.924 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:32.924 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: '/usr/bin/chromium-browser' --version
05:07:32.924 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:32.924 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: /usr/bin/chromium-browser --version
05:07:32.925 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:32.925 DEBUG [SeleniumManager.lambda$runCommand$1] - chrome not found in the system
05:07:32.925 WARN [SeleniumManager.lambda$runCommand$1] - Exception managing chrome: Unable to discover proper chromedriver version in offline mode
05:07:32.925 WARN [SeleniumManager.lambda$runCommand$1] - The chromedriver version (131.0.6778.204) detected in PATH at /usr/local/bin/chromedriver might not be compatible with the detected chrome version (); currently, chromedriver  is recommended for chrome .*, so it is advised to delete the driver in PATH and retry
05:07:32.925 DEBUG [SeleniumManager.lambda$runCommand$1] - Driver path: /usr/local/bin/chromedriver
05:07:32.926 DEBUG [SeleniumManager.lambda$runCommand$1] - Browser path: /usr/bin/chromium-browser
05:07:32.926 DEBUG [SeleniumManager.getDriverPath] - Using driver at location: /usr/local/bin/chromedriver, browser at location /usr/bin/chromium-browser
05:07:32.927 DEBUG [SeleniumManager.getBinary] - Selenium Manager binary found at: /home/ubuntu/.cache/selenium/manager/0.4.16/selenium-manager
05:07:32.927 DEBUG [SeleniumManager.runCommand] - Executing Process: [--browser, MicrosoftEdge, --output, json, --debug, --offline]
05:07:32.943 DEBUG [ExternalProcess$Builder.lambda$start$0] - completed to copy the output of process 42592
05:07:32.945 DEBUG [SeleniumManager.lambda$runCommand$1] - Offline flag set, but also asked not to avoid browser downloads. Honouring offline flag
05:07:32.945 DEBUG [SeleniumManager.lambda$runCommand$1] - Using Selenium Manager in offline mode
05:07:32.945 DEBUG [SeleniumManager.lambda$runCommand$1] - msedgedriver not found in PATH
05:07:32.945 DEBUG [SeleniumManager.lambda$runCommand$1] - MicrosoftEdge not found in PATH
05:07:32.945 DEBUG [SeleniumManager.lambda$runCommand$1] - MicrosoftEdge not found in the system
05:07:32.945 WARN [SeleniumManager.lambda$runCommand$1] - Unable to discover proper msedgedriver version in offline mode
05:07:32.945 DEBUG [SeleniumManager.getDriverPath] - Using driver at location: , browser at location 
05:07:32.947 DEBUG [SeleniumManager.getBinary] - Selenium Manager binary found at: /home/ubuntu/.cache/selenium/manager/0.4.16/selenium-manager
05:07:32.947 DEBUG [SeleniumManager.runCommand] - Executing Process: [--browser, firefox, --output, json, --debug, --offline]
05:07:32.963 DEBUG [ExternalProcess$Builder.lambda$start$0] - completed to copy the output of process 42601
05:07:32.964 DEBUG [SeleniumManager.lambda$runCommand$1] - Offline flag set, but also asked not to avoid browser downloads. Honouring offline flag
05:07:32.965 DEBUG [SeleniumManager.lambda$runCommand$1] - Using Selenium Manager in offline mode
05:07:32.965 DEBUG [SeleniumManager.lambda$runCommand$1] - geckodriver not found in PATH
05:07:32.965 DEBUG [SeleniumManager.lambda$runCommand$1] - firefox not found in PATH
05:07:32.965 DEBUG [SeleniumManager.lambda$runCommand$1] - firefox not found in the system
05:07:32.965 WARN [SeleniumManager.lambda$runCommand$1] - Unable to discover proper geckodriver version in offline mode
05:07:32.965 DEBUG [SeleniumManager.getDriverPath] - Using driver at location: , browser at location 
05:07:32.980 INFO [NodeOptions.report] - Adding Chrome for {"browserName": "chrome","platformName": "linux"} 8 times
05:07:33.004 INFO [Node.<init>] - Binding additional locator mechanisms: relative
05:07:33.019 DEBUG [GridModel.add] - Adding node with id 4ff950e6-4ba5-4ddb-969c-ef4cbc87a2a7 and URI http://172.16.4.2:4444
05:07:33.019 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://172.16.4.2:4444 was UP
05:07:33.020 INFO [GridModel.setAvailability] - Switching Node 4ff950e6-4ba5-4ddb-969c-ef4cbc87a2a7 (uri: http://172.16.4.2:4444) from DOWN to UP
05:07:33.020 INFO [LocalDistributor.add] - Added node 4ff950e6-4ba5-4ddb-969c-ef4cbc87a2a7 at http://172.16.4.2:4444. Health check every 120s
05:07:33.031 DEBUG [MultithreadEventLoopGroup.<clinit>] - -Dio.netty.eventLoopThreads: 16
05:07:33.036 DEBUG [GlobalEventExecutor.<clinit>] - -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
05:07:33.041 DEBUG [InternalThreadLocalMap.<clinit>] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
05:07:33.041 DEBUG [InternalThreadLocalMap.<clinit>] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
05:07:33.053 DEBUG [PlatformDependent0.explicitNoUnsafeCause0] - -Dio.netty.noUnsafe: false
05:07:33.053 DEBUG [PlatformDependent0.javaVersion0] - Java version: 17
05:07:33.053 DEBUG [PlatformDependent0.<clinit>] - sun.misc.Unsafe.theUnsafe: available
05:07:33.054 DEBUG [PlatformDependent0.<clinit>] - sun.misc.Unsafe.copyMemory: available
05:07:33.054 DEBUG [PlatformDependent0.<clinit>] - sun.misc.Unsafe.storeFence: available
05:07:33.055 DEBUG [PlatformDependent0.<clinit>] - java.nio.Buffer.address: available
05:07:33.055 DEBUG [PlatformDependent0.<clinit>] - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
05:07:33.056 DEBUG [PlatformDependent0.<clinit>] - java.nio.Bits.unaligned: available, true
05:07:33.056 DEBUG [PlatformDependent0.<clinit>] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @7a6c61fc
05:07:33.057 DEBUG [PlatformDependent0.<clinit>] - java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable
05:07:33.057 DEBUG [PlatformDependent.unsafeUnavailabilityCause0] - sun.misc.Unsafe: available
05:07:33.057 DEBUG [PlatformDependent.tmpdir0] - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
05:07:33.058 DEBUG [PlatformDependent.bitMode0] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
05:07:33.058 DEBUG [PlatformDependent.<clinit>] - -Dio.netty.maxDirectMemory: -1 bytes
05:07:33.058 DEBUG [PlatformDependent.<clinit>] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
05:07:33.059 DEBUG [CleanerJava9.<clinit>] - java.nio.ByteBuffer.cleaner(): available
05:07:33.059 DEBUG [PlatformDependent.<clinit>] - -Dio.netty.noPreferDirect: false
05:07:33.060 DEBUG [NioEventLoop.<clinit>] - -Dio.netty.noKeySetOptimization: false
05:07:33.060 DEBUG [NioEventLoop.<clinit>] - -Dio.netty.selectorAutoRebuildThreshold: 512
05:07:33.064 DEBUG [PlatformDependent$Mpsc.<clinit>] - org.jctools-core.MpscChunkedArrayQueue: available
05:07:33.078 DEBUG [DefaultChannelId.<clinit>] - -Dio.netty.processId: 42522 (auto-detected)
05:07:33.080 DEBUG [NetUtil.<clinit>] - -Djava.net.preferIPv4Stack: false
05:07:33.081 DEBUG [NetUtil.<clinit>] - -Djava.net.preferIPv6Addresses: false
05:07:33.082 DEBUG [NetUtilInitializations.determineLoopback] - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo)
05:07:33.082 DEBUG [NetUtil$SoMaxConnAction.run] - /proc/sys/net/core/somaxconn: 4096
05:07:33.083 DEBUG [DefaultChannelId.<clinit>] - -Dio.netty.machineId: 02:42:e7:ff:fe:07:e3:00 (auto-detected)
05:07:33.089 DEBUG [ResourceLeakDetector.<clinit>] - -Dio.netty.leakDetection.level: simple
05:07:33.089 DEBUG [ResourceLeakDetector.<clinit>] - -Dio.netty.leakDetection.targetRecords: 4
05:07:33.102 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.numHeapArenas: 16
05:07:33.102 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.numDirectArenas: 16
05:07:33.102 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.pageSize: 8192
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.maxOrder: 9
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.chunkSize: 4194304
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.smallCacheSize: 256
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.normalCacheSize: 64
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.cacheTrimInterval: 8192
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.useCacheForAllThreads: false
05:07:33.103 DEBUG [PooledByteBufAllocator.<clinit>] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
05:07:33.112 DEBUG [ByteBufUtil.<clinit>] - -Dio.netty.allocator.type: pooled
05:07:33.112 DEBUG [ByteBufUtil.<clinit>] - -Dio.netty.threadLocalDirectBufferSize: 0
05:07:33.112 DEBUG [ByteBufUtil.<clinit>] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
05:07:33.123 DEBUG [LoggingHandler.channelRegistered] - [id: 0xb678b955] REGISTERED
05:07:33.124 DEBUG [LoggingHandler.bind] - [id: 0xb678b955] BIND: /0.0.0.0:4444
05:07:33.126 INFO [Standalone.execute] - Started Selenium Standalone 4.16.1 (revision 9b4c83354e): http://172.16.4.2:4444
05:07:33.126 DEBUG [LoggingHandler.channelActive] - [id: 0xb678b955, L:/[0:0:0:0:0:0:0:0]:4444] ACTIVE
05:07:42.083 DEBUG [LoggingHandler.channelRead] - [id: 0xb678b955, L:/[0:0:0:0:0:0:0:0]:4444] READ: [id: 0x4346f478, L:/127.0.0.1:4444 - R:/127.0.0.1:51616]
05:07:42.084 DEBUG [LoggingHandler.channelReadComplete] - [id: 0xb678b955, L:/[0:0:0:0:0:0:0:0]:4444] READ COMPLETE
05:07:42.096 DEBUG [AbstractByteBuf.<clinit>] - -Dio.netty.buffer.checkAccessible: true
05:07:42.096 DEBUG [AbstractByteBuf.<clinit>] - -Dio.netty.buffer.checkBounds: true
05:07:42.096 DEBUG [ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3c70f308
05:07:42.105 DEBUG [ZlibCodecFactory.<clinit>] - -Dio.netty.noJdkZlibDecoder: false
05:07:42.105 DEBUG [ZlibCodecFactory.<clinit>] - -Dio.netty.noJdkZlibEncoder: false
05:07:42.113 DEBUG [Recycler.<clinit>] - -Dio.netty.recycler.maxCapacityPerThread: 4096
05:07:42.114 DEBUG [Recycler.<clinit>] - -Dio.netty.recycler.ratio: 8
05:07:42.114 DEBUG [Recycler.<clinit>] - -Dio.netty.recycler.chunkSize: 32
05:07:42.114 DEBUG [Recycler.<clinit>] - -Dio.netty.recycler.blocking: false
05:07:42.114 DEBUG [Recycler.<clinit>] - -Dio.netty.recycler.batchFastThreadLocalOnly: true
05:07:42.129 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
HEAD / HTTP/1.1
Host: localhost:4444
Accept: */*
05:07:42.130 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
HEAD / HTTP/1.1
Host: localhost:4444
Accept: */*
05:07:42.132 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:42.132 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:42.150 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
HEAD /ui HTTP/1.1
Host: localhost:4444
Accept: */*
05:07:42.150 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
HEAD /ui HTTP/1.1
Host: localhost:4444
Accept: */*
05:07:42.150 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:42.150 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:42.170 DEBUG [RequestConverter.channelInactive] - Channel became inactive.
05:07:42.174 DEBUG [LoggingHandler.channelRead] - [id: 0xb678b955, L:/[0:0:0:0:0:0:0:0]:4444] READ: [id: 0x8c175fdd, L:/127.0.0.1:4444 - R:/127.0.0.1:51622]
05:07:42.174 DEBUG [LoggingHandler.channelReadComplete] - [id: 0xb678b955, L:/[0:0:0:0:0:0:0:0]:4444] READ COMPLETE
05:07:42.179 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 378
05:07:42.180 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 378
05:07:42.182 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 378, cap: 378/378, unwrapped: PooledUnsafeDirectByteBuf(ridx: 526, widx: 526, cap: 2048)), decoderResult: success)
05:07:42.184 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 378, widx: 378, cap: 378/378, unwrapped: PooledUnsafeDirectByteBuf(ridx: 526, widx: 526, cap: 2048)), decoderResult: success)
05:07:42.204 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={}, span id=0000000000000000, trace id=00000000000000000000000000000000} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e42bc706cdba6f2a, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, name=session_queue, kind=INTERNAL, attributes=AttributesMap{data={random.key=9bae8133-e264-4886-a17e-1a659cf9cbbf}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189662200000000, endEpochNanos=0}}, span id=e42bc706cdba6f2a, trace id=da12c2ed49dd098f99a53ebda4ba2bc8}
05:07:42.206 DEBUG [HttpTracing.inject] - Injecting (POST) /session into OpenTelemetrySpan{traceId=da12c2ed49dd098f99a53ebda4ba2bc8,spanId=e42bc706cdba6f2a} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:42.242 INFO [LocalDistributor.newSession] - Session request received by the Distributor: 
 [Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --disable-gpu, --no-sandbox, --disable-dev-shm-usage, --window-size=1920,1080]}}]
05:07:42.257 DEBUG [SeleniumManager.getBinary] - Selenium Manager binary found at: /home/ubuntu/.cache/selenium/manager/0.4.16/selenium-manager
05:07:42.257 DEBUG [SeleniumManager.runCommand] - Executing Process: [--browser, chrome, --output, json, --debug]
05:07:42.297 DEBUG [ExternalProcess$Builder.lambda$start$0] - completed to copy the output of process 42675
05:07:42.298 DEBUG [SeleniumManager.lambda$runCommand$1] - Found chromedriver 131.0.6778.204 in PATH: /usr/local/bin/chromedriver
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Found chromium-browser in PATH: /usr/bin/chromium-browser
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: /usr/bin/chromium-browser --version
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: "/usr/bin/chromium-browser" --version
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: '/usr/bin/chromium-browser' --version
05:07:42.299 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Running command: /usr/bin/chromium-browser --version
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Output: ""
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - chrome not found in the system
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Required browser: chrome 131.0.6778.204
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - chrome 131.0.6778.204 already exists
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - chrome 131.0.6778.204 is available at /home/ubuntu/.cache/selenium/chrome/linux64/131.0.6778.204/chrome
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Required driver: chromedriver 131.0.6778.204
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Driver path: /usr/local/bin/chromedriver
05:07:42.300 DEBUG [SeleniumManager.lambda$runCommand$1] - Browser path: /home/ubuntu/.cache/selenium/chrome/linux64/131.0.6778.204/chrome
05:07:42.301 DEBUG [SeleniumManager.getDriverPath] - Using driver at location: /usr/local/bin/chromedriver, browser at location /home/ubuntu/.cache/selenium/chrome/linux64/131.0.6778.204/chrome
05:07:42.302 DEBUG [DriverService.start] - Starting driver at /usr/local/bin/chromedriver with [--port=22314, --log-level=ALL]
05:07:42.305 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:22314/status]
05:07:42.306 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:22314/status
05:07:42.311 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@1fa51a415 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/17.0.13}{Host: localhost:22314}{Accept: */*}{Connection: keep-alive}
05:07:42.313 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@3d43a504 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 244}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache}
05:07:42.385 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:4fd22b8ff564c8339e4f345866237060, Subject:CN=UCA Extended Validation Root, O=UniTrust, C=CN, Issuer:CN=UCA Extended Validation Root, O=UniTrust, C=CN, Key type:RSA, Length:4096, Cert Id:649181271, Valid from:3/13/15, 12:00 AM, Valid until:12/31/38, 12:00 AM
05:07:42.387 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:92b888dbb08ac163, Subject:CN=CA Disig Root R2, O=Disig a.s., L=Bratislava, C=SK, Issuer:CN=CA Disig Root R2, O=Disig a.s., L=Bratislava, C=SK, Key type:RSA, Length:4096, Cert Id:747175721, Valid from:7/19/12, 9:15 AM, Valid until:7/19/42, 9:15 AM
05:07:42.388 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:6d8c1446b1a60aee, Subject:CN=AffirmTrust Premium, O=AffirmTrust, C=US, Issuer:CN=AffirmTrust Premium, O=AffirmTrust, C=US, Key type:RSA, Length:4096, Cert Id:-2130283955, Valid from:1/29/10, 2:10 PM, Valid until:12/31/40, 2:10 PM
05:07:42.389 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:212a560caeda0cab4045bf2ba22d3aea, Subject:CN=OISTE WISeKey Global Root GC CA, OU=OISTE Foundation Endorsed, O=WISeKey, C=CH, Issuer:CN=OISTE WISeKey Global Root GC CA, OU=OISTE Foundation Endorsed, O=WISeKey, C=CH, Key type:EC, Length:384, Cert Id:-1513165457, Valid from:5/9/17, 9:48 AM, Valid until:5/9/42, 9:58 AM
05:07:42.391 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:d9b5437fafa9390f000000005565ad58, Subject:CN=Entrust Root Certification Authority - G4, OU="(c) 2015 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Issuer:CN=Entrust Root Certification Authority - G4, OU="(c) 2015 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Key type:RSA, Length:4096, Cert Id:1368037548, Valid from:5/27/15, 11:11 AM, Valid until:12/27/37, 11:41 AM
05:07:42.394 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5416bf3b7e3995718dd1aa00a5860d2b8f7a054e, Subject:CN=CommScope Public Trust RSA Root-02, O=CommScope, C=US, Issuer:CN=CommScope Public Trust RSA Root-02, O=CommScope, C=US, Key type:RSA, Length:4096, Cert Id:1341146455, Valid from:4/28/21, 5:16 PM, Valid until:4/28/46, 5:16 PM
05:07:42.398 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:5ec3b7a6437fa4e0, Subject:C=ES, O=ACCV, OU=PKIACCV, CN=ACCVRAIZ1, Issuer:C=ES, O=ACCV, OU=PKIACCV, CN=ACCVRAIZ1, Key type:RSA, Length:4096, Cert Id:-592111236, Valid from:5/5/11, 9:37 AM, Valid until:12/31/30, 9:37 AM
05:07:42.399 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:0, Subject:OU=Security Communication RootCA2, O="SECOM Trust Systems CO.,LTD.", C=JP, Issuer:OU=Security Communication RootCA2, O="SECOM Trust Systems CO.,LTD.", C=JP, Key type:RSA, Length:2048, Cert Id:1521072570, Valid from:5/29/09, 5:00 AM, Valid until:5/29/29, 5:00 AM
05:07:42.400 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:8e0ff94b907168653354f4d44439b7e0, Subject:CN=Certainly Root R1, O=Certainly, C=US, Issuer:CN=Certainly Root R1, O=Certainly, C=US, Key type:RSA, Length:4096, Cert Id:-2039008761, Valid from:4/1/21, 12:00 AM, Valid until:4/1/46, 12:00 AM
05:07:42.401 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:75622a4e8d48a894df413c8f0f8eaa5, Subject:CN=Secure Global CA, O=SecureTrust Corporation, C=US, Issuer:CN=Secure Global CA, O=SecureTrust Corporation, C=US, Key type:RSA, Length:2048, Cert Id:-1476772975, Valid from:11/7/06, 7:42 PM, Valid until:12/31/29, 7:52 PM
05:07:42.402 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:50946cec18ead59c4dd597ef758fa0ad, Subject:CN=XRamp Global Certification Authority, O=XRamp Security Services Inc, OU=www.xrampsecurity.com, C=US, Issuer:CN=XRamp Global Certification Authority, O=XRamp Security Services Inc, OU=www.xrampsecurity.com, C=US, Key type:RSA, Length:2048, Cert Id:-952474086, Valid from:11/1/04, 5:14 PM, Valid until:1/1/35, 5:37 AM
05:07:42.403 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:8f9b478a8fa7eda6a333789de7ccf8a, Subject:CN=DigiCert TLS RSA4096 Root G5, O="DigiCert, Inc.", C=US, Issuer:CN=DigiCert TLS RSA4096 Root G5, O="DigiCert, Inc.", C=US, Key type:RSA, Length:4096, Cert Id:165956757, Valid from:1/15/21, 12:00 AM, Valid until:1/14/46, 11:59 PM
05:07:42.405 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:203e5aec58d04251aab1125aa, Subject:CN=GTS Root R2, O=Google Trust Services LLC, C=US, Issuer:CN=GTS Root R2, O=Google Trust Services LLC, C=US, Key type:RSA, Length:4096, Cert Id:948387669, Valid from:6/22/16, 12:00 AM, Valid until:6/22/36, 12:00 AM
05:07:42.406 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:66f23daf87de8bb14aea0c573101c2ec, Subject:CN=Microsoft ECC Root Certificate Authority 2017, O=Microsoft Corporation, C=US, Issuer:CN=Microsoft ECC Root Certificate Authority 2017, O=Microsoft Corporation, C=US, Key type:EC, Length:384, Cert Id:-1054206011, Valid from:12/18/19, 11:06 PM, Valid until:7/18/42, 11:16 PM
05:07:42.406 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:200605167002, Subject:OU=certSIGN ROOT CA, O=certSIGN, C=RO, Issuer:OU=certSIGN ROOT CA, O=certSIGN, C=RO, Key type:RSA, Length:2048, Cert Id:-289960676, Valid from:7/4/06, 5:20 PM, Valid until:7/4/31, 5:20 PM
05:07:42.408 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:194301ea20bddf5c5332ab1434471f8d6504d0d, Subject:CN=NAVER Global Root Certification Authority, O=NAVER BUSINESS PLATFORM Corp., C=KR, Issuer:CN=NAVER Global Root Certification Authority, O=NAVER BUSINESS PLATFORM Corp., C=KR, Key type:RSA, Length:4096, Cert Id:1777546867, Valid from:8/18/17, 8:58 AM, Valid until:8/18/37, 11:59 PM
05:07:42.409 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:0, Subject:CN=Go Daddy Root Certificate Authority - G2, O="GoDaddy.com, Inc.", L=Scottsdale, ST=Arizona, C=US, Issuer:CN=Go Daddy Root Certificate Authority - G2, O="GoDaddy.com, Inc.", L=Scottsdale, ST=Arizona, C=US, Key type:RSA, Length:2048, Cert Id:439600313, Valid from:9/1/09, 12:00 AM, Valid until:12/31/37, 11:59 PM
05:07:42.410 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:11d2bbba336ed4bce62468c50d841d98e843, Subject:CN=GlobalSign Root E46, O=GlobalSign nv-sa, C=BE, Issuer:CN=GlobalSign Root E46, O=GlobalSign nv-sa, C=BE, Key type:EC, Length:384, Cert Id:-889363391, Valid from:3/20/19, 12:00 AM, Valid until:3/20/46, 12:00 AM
05:07:42.411 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:5f0241d77a877c4c03a3ac968dfbffd0, Subject:CN=D-TRUST EV Root CA 1 2020, O=D-Trust GmbH, C=DE, Issuer:CN=D-TRUST EV Root CA 1 2020, O=D-Trust GmbH, C=DE, Key type:EC, Length:384, Cert Id:238735896, Valid from:2/11/20, 10:00 AM, Valid until:2/11/35, 9:59 AM
05:07:42.412 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:2ef59b0228a7db7affd5a3a9eebd03a0cf126a1d, Subject:CN=QuoVadis Root CA 3 G3, O=QuoVadis Limited, C=BM, Issuer:CN=QuoVadis Root CA 3 G3, O=QuoVadis Limited, C=BM, Key type:RSA, Length:4096, Cert Id:-705622991, Valid from:1/12/12, 8:26 PM, Valid until:1/12/42, 8:26 PM
05:07:42.413 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1, Subject:CN=TUBITAK Kamu SM SSL Kok Sertifikasi - Surum 1, OU=Kamu Sertifikasyon Merkezi - Kamu SM, O=Turkiye Bilimsel ve Teknolojik Arastirma Kurumu - TUBITAK, L=Gebze - Kocaeli, C=TR, Issuer:CN=TUBITAK Kamu SM SSL Kok Sertifikasi - Surum 1, OU=Kamu Sertifikasyon Merkezi - Kamu SM, O=Turkiye Bilimsel ve Teknolojik Arastirma Kurumu - TUBITAK, L=Gebze - Kocaeli, C=TR, Key type:RSA, Length:2048, Cert Id:1093603654, Valid from:11/25/13, 8:25 AM, Valid until:10/25/43, 8:25 AM
05:07:42.414 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:cae91b89f155030da3e6416dc4e3a6e1, Subject:CN=Certigna Root CA, OU=0002 48146308100036, O=Dhimyotis, C=FR, Issuer:CN=Certigna Root CA, OU=0002 48146308100036, O=Dhimyotis, C=FR, Key type:RSA, Length:4096, Cert Id:356684591, Valid from:10/1/13, 8:32 AM, Valid until:10/1/33, 8:32 AM
05:07:42.415 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:dd3e3bc6cf96bb1, Subject:CN=ANF Secure Server Root CA, OU=ANF CA Raiz, O=ANF Autoridad de Certificacion, C=ES, SERIALNUMBER=G63287510, Issuer:CN=ANF Secure Server Root CA, OU=ANF CA Raiz, O=ANF Autoridad de Certificacion, C=ES, SERIALNUMBER=G63287510, Key type:RSA, Length:4096, Cert Id:-841649695, Valid from:9/4/19, 10:00 AM, Valid until:8/30/39, 10:00 AM
05:07:42.416 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:59b1b579e8e2132e23907bda777755c, Subject:CN=DigiCert Trusted Root G4, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Trusted Root G4, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:4096, Cert Id:1057369358, Valid from:8/1/13, 12:00 PM, Valid until:1/15/38, 12:00 PM
05:07:42.416 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:67749d8d77d83b6adb22f4ff59e2bfce, Subject:CN=HARICA TLS ECC Root CA 2021, O=Hellenic Academic and Research Institutions CA, C=GR, Issuer:CN=HARICA TLS ECC Root CA 2021, O=Hellenic Academic and Research Institutions CA, C=GR, Key type:EC, Length:384, Cert Id:-693932344, Valid from:2/19/21, 11:01 AM, Valid until:2/13/45, 11:01 AM
05:07:42.417 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:33af1e6a711a9a0bb2864b11d09fae5, Subject:CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:2048, Cert Id:1136084297, Valid from:8/1/13, 12:00 PM, Valid until:1/15/38, 12:00 PM
05:07:42.418 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:1, Subject:CN=AAA Certificate Services, O=Comodo CA Limited, L=Salford, ST=Greater Manchester, C=GB, Issuer:CN=AAA Certificate Services, O=Comodo CA Limited, L=Salford, ST=Greater Manchester, C=GB, Key type:RSA, Length:2048, Cert Id:-1197580894, Valid from:1/1/04, 12:00 AM, Valid until:12/31/28, 11:59 PM
05:07:42.419 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:4000000000121585308a2, Subject:CN=GlobalSign, O=GlobalSign, OU=GlobalSign Root CA - R3, Issuer:CN=GlobalSign, O=GlobalSign, OU=GlobalSign Root CA - R3, Key type:RSA, Length:2048, Cert Id:733875591, Valid from:3/18/09, 10:00 AM, Valid until:3/18/29, 10:00 AM
05:07:42.420 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:6e6abc59aa53be983967a2d26ba43be66d1cd6da, Subject:CN=vTrus ECC Root CA, O="iTrusChina Co.,Ltd.", C=CN, Issuer:CN=vTrus ECC Root CA, O="iTrusChina Co.,Ltd.", C=CN, Key type:EC, Length:384, Cert Id:268503342, Valid from:7/31/18, 7:26 AM, Valid until:7/31/43, 7:26 AM
05:07:42.420 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:2, Subject:CN=Buypass Class 3 Root CA, O=Buypass AS-983163327, C=NO, Issuer:CN=Buypass Class 3 Root CA, O=Buypass AS-983163327, C=NO, Key type:RSA, Length:4096, Cert Id:1264269967, Valid from:10/26/10, 8:28 AM, Valid until:10/26/40, 8:28 AM
05:07:42.421 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:788f275c81125220a504d02dddba73f4, Subject:CN=Certum EC-384 CA, OU=Certum Certification Authority, O=Asseco Data Systems S.A., C=PL, Issuer:CN=Certum EC-384 CA, OU=Certum Certification Authority, O=Asseco Data Systems S.A., C=PL, Key type:EC, Length:384, Cert Id:994586241, Valid from:3/26/18, 7:24 AM, Valid until:3/26/43, 7:24 AM
05:07:42.422 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:2c17087d642ac0fe85185906cfb44aeb, Subject:CN=BJCA Global Root CA2, O=BEIJING CERTIFICATE AUTHORITY, C=CN, Issuer:CN=BJCA Global Root CA2, O=BEIJING CERTIFICATE AUTHORITY, C=CN, Key type:EC, Length:384, Cert Id:1781225575, Valid from:12/19/19, 3:18 AM, Valid until:12/12/44, 3:18 AM
05:07:42.423 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:4e812d8a8265e00b02ee3e350246e53d, Subject:CN=COMODO Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Issuer:CN=COMODO Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Key type:RSA, Length:2048, Cert Id:904304908, Valid from:12/1/06, 12:00 AM, Valid until:12/31/29, 11:59 PM
05:07:42.424 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:41d29dd172eaeea780c12c6ce92f8752, Subject:CN=ISRG Root X2, O=Internet Security Research Group, C=US, Issuer:CN=ISRG Root X2, O=Internet Security Research Group, C=US, Key type:EC, Length:384, Cert Id:-896325052, Valid from:9/4/20, 12:00 AM, Valid until:9/17/40, 4:00 PM
05:07:42.424 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1675f27d6fe7ae3e4acbe095b059e, Subject:CN=Telia Root CA v2, O=Telia Finland Oyj, C=FI, Issuer:CN=Telia Root CA v2, O=Telia Finland Oyj, C=FI, Key type:RSA, Length:4096, Cert Id:-821903320, Valid from:11/29/18, 11:55 AM, Valid until:11/29/43, 11:55 AM
05:07:42.425 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:444c0, Subject:CN=Certum Trusted Network CA, OU=Certum Certification Authority, O=Unizeto Technologies S.A., C=PL, Issuer:CN=Certum Trusted Network CA, OU=Certum Certification Authority, O=Unizeto Technologies S.A., C=PL, Key type:RSA, Length:2048, Cert Id:2014002193, Valid from:10/22/08, 12:07 PM, Valid until:12/31/29, 12:07 PM
05:07:42.426 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:39ca931cef43f3c68e93c7f46489387e, Subject:CN=HARICA TLS RSA Root CA 2021, O=Hellenic Academic and Research Institutions CA, C=GR, Issuer:CN=HARICA TLS RSA Root CA 2021, O=Hellenic Academic and Research Institutions CA, C=GR, Key type:RSA, Length:4096, Cert Id:1709624614, Valid from:2/19/21, 10:55 AM, Valid until:2/13/45, 10:55 AM
05:07:42.427 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:66c9fcf99bf8c0a39e2f0788a43e696365bca, Subject:CN=Amazon Root CA 1, O=Amazon, C=US, Issuer:CN=Amazon Root CA 1, O=Amazon, C=US, Key type:RSA, Length:2048, Cert Id:-1472444962, Valid from:5/26/15, 12:00 AM, Valid until:1/17/38, 12:00 AM
05:07:42.428 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:20000b9, Subject:CN=Baltimore CyberTrust Root, OU=CyberTrust, O=Baltimore, C=IE, Issuer:CN=Baltimore CyberTrust Root, OU=CyberTrust, O=Baltimore, C=IE, Key type:RSA, Length:2048, Cert Id:1425294543, Valid from:5/12/00, 6:46 PM, Valid until:5/12/25, 11:59 PM
05:07:42.429 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1302d5e2404c92468616675db4bbbbb26b3efc13, Subject:CN=TunTrust Root CA, O=Agence Nationale de Certification Electronique, C=TN, Issuer:CN=TunTrust Root CA, O=Agence Nationale de Certification Electronique, C=TN, Key type:RSA, Length:4096, Cert Id:1973181427, Valid from:4/26/19, 8:57 AM, Valid until:4/26/44, 8:57 AM
05:07:42.429 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:cf08e5c0816a5ad427ff0eb271859d0, Subject:CN=SecureTrust CA, O=SecureTrust Corporation, C=US, Issuer:CN=SecureTrust CA, O=SecureTrust Corporation, C=US, Key type:RSA, Length:2048, Cert Id:2034155325, Valid from:11/7/06, 7:31 PM, Valid until:12/31/29, 7:40 PM
05:07:42.430 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:5c6, Subject:CN=QuoVadis Root CA 3, O=QuoVadis Limited, C=BM, Issuer:CN=QuoVadis Root CA 3, O=QuoVadis Limited, C=BM, Key type:RSA, Length:4096, Cert Id:1470392860, Valid from:11/24/06, 7:11 PM, Valid until:11/24/31, 7:06 PM
05:07:42.431 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:7b71b68256b8127c9ca8, Subject:CN=emSign ECC Root CA - C3, O=eMudhra Inc, OU=emSign PKI, C=US, Issuer:CN=emSign ECC Root CA - C3, O=eMudhra Inc, OU=emSign PKI, C=US, Key type:EC, Length:384, Cert Id:-948456756, Valid from:2/18/18, 6:30 PM, Valid until:2/18/43, 6:30 PM
05:07:42.432 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:3e034981751674318e4cabd5c5902996c53910dd, Subject:CN=CommScope Public Trust RSA Root-01, O=CommScope, C=US, Issuer:CN=CommScope Public Trust RSA Root-01, O=CommScope, C=US, Key type:RSA, Length:4096, Cert Id:-1020105141, Valid from:4/28/21, 4:45 PM, Valid until:4/28/46, 4:45 PM
05:07:42.433 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:45e6bb038333c3856548e6ff4551, Subject:CN=GlobalSign, O=GlobalSign, OU=GlobalSign Root CA - R6, Issuer:CN=GlobalSign, O=GlobalSign, OU=GlobalSign Root CA - R6, Key type:RSA, Length:4096, Cert Id:-506627753, Valid from:12/10/14, 12:00 AM, Valid until:12/10/34, 12:00 AM
05:07:42.433 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:a0142800000014523c844b500000002, Subject:CN=IdenTrust Commercial Root CA 1, O=IdenTrust, C=US, Issuer:CN=IdenTrust Commercial Root CA 1, O=IdenTrust, C=US, Key type:RSA, Length:4096, Cert Id:1232565210, Valid from:1/16/14, 6:12 PM, Valid until:1/16/34, 6:12 PM
05:07:42.434 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:8165f8a4ca5ec00c99340dfc4c6ae23b81c5aa4, Subject:CN=Hongkong Post Root CA 3, O=Hongkong Post, L=Hong Kong, ST=Hong Kong, C=HK, Issuer:CN=Hongkong Post Root CA 3, O=Hongkong Post, L=Hong Kong, ST=Hong Kong, C=HK, Key type:RSA, Length:4096, Cert Id:-901951080, Valid from:6/3/17, 2:29 AM, Valid until:6/3/42, 2:29 AM
05:07:42.435 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:ce7e0e517d846fe8fe560fc1bf03039, Subject:CN=DigiCert Assured ID Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Assured ID Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:2048, Cert Id:-860404528, Valid from:11/10/06, 12:00 AM, Valid until:11/10/31, 12:00 AM
05:07:42.436 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:ba15afa1ddfa0b54944afcd24a06cec, Subject:CN=DigiCert Assured ID Root G3, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Assured ID Root G3, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:EC, Length:384, Cert Id:-645537245, Valid from:8/1/13, 12:00 PM, Valid until:1/15/38, 12:00 PM
05:07:42.436 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:15c8bd65475cafb897005ee406d2bc9d, Subject:OU=ePKI Root Certification Authority, O="Chunghwa Telecom Co., Ltd.", C=TW, Issuer:OU=ePKI Root Certification Authority, O="Chunghwa Telecom Co., Ltd.", C=TW, Key type:RSA, Length:4096, Cert Id:-662636137, Valid from:12/20/04, 2:31 AM, Valid until:12/20/34, 2:31 AM
05:07:42.437 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:0, Subject:OU=Security Communication RootCA1, O=SECOM Trust.net, C=JP, Issuer:OU=Security Communication RootCA1, O=SECOM Trust.net, C=JP, Key type:RSA, Length:2048, Cert Id:1802358121, Valid from:9/30/03, 4:20 AM, Valid until:9/30/23, 4:20 AM
05:07:42.438 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:75e6dfcbc1685ba8, Subject:CN=SSL.com Root Certification Authority ECC, O=SSL Corporation, L=Houston, ST=Texas, C=US, Issuer:CN=SSL.com Root Certification Authority ECC, O=SSL Corporation, L=Houston, ST=Texas, C=US, Key type:EC, Length:384, Cert Id:-1368293613, Valid from:2/12/16, 6:14 PM, Valid until:2/12/41, 6:14 PM
05:07:42.439 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:3cf607a968700eda8b84, Subject:CN=emSign ECC Root CA - G3, O=eMudhra Technologies Limited, OU=emSign PKI, C=IN, Issuer:CN=emSign ECC Root CA - G3, O=eMudhra Technologies Limited, OU=emSign PKI, C=IN, Key type:EC, Length:384, Cert Id:-462931589, Valid from:2/18/18, 6:30 PM, Valid until:2/18/43, 6:30 PM
05:07:42.440 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:56b629cd34bc78f6, Subject:CN=SSL.com EV Root Certification Authority RSA R2, O=SSL Corporation, L=Houston, ST=Texas, C=US, Issuer:CN=SSL.com EV Root Certification Authority RSA R2, O=SSL Corporation, L=Houston, ST=Texas, C=US, Key type:RSA, Length:4096, Cert Id:1381862403, Valid from:5/31/17, 6:14 PM, Valid until:5/30/42, 6:14 PM
05:07:42.440 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5a4bbd5afb4f8a5bfa65e5, Subject:CN=GLOBALTRUST 2020, O=e-commerce monitoring GmbH, C=AT, Issuer:CN=GLOBALTRUST 2020, O=e-commerce monitoring GmbH, C=AT, Key type:RSA, Length:4096, Cert Id:-522246883, Valid from:2/10/20, 12:00 AM, Valid until:6/10/40, 12:00 AM
05:07:42.441 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:758dfd8bae7c0700faa925a7e1c7ad14, Subject:CN=Sectigo Public Server Authentication Root R46, O=Sectigo Limited, C=GB, Issuer:CN=Sectigo Public Server Authentication Root R46, O=Sectigo Limited, C=GB, Key type:RSA, Length:4096, Cert Id:-488315127, Valid from:3/22/21, 12:00 AM, Valid until:3/21/46, 11:59 PM
05:07:42.442 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:203e5936f31b01349886ba217, Subject:CN=GTS Root R1, O=Google Trust Services LLC, C=US, Issuer:CN=GTS Root R1, O=Google Trust Services LLC, C=US, Key type:RSA, Length:4096, Cert Id:657172038, Valid from:6/22/16, 12:00 AM, Valid until:6/22/36, 12:00 AM
05:07:42.442 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:66c9fd7c1bb104c2943e5717b7b2cc81ac10e, Subject:CN=Amazon Root CA 4, O=Amazon, C=US, Issuer:CN=Amazon Root CA 4, O=Amazon, C=US, Key type:EC, Length:384, Cert Id:-1654272513, Valid from:5/26/15, 12:00 AM, Valid until:5/26/40, 12:00 AM
05:07:42.443 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:605949e0262ebb55f90a778a71f94ad86c, Subject:CN=GlobalSign, O=GlobalSign, OU=GlobalSign ECC Root CA - R5, Issuer:CN=GlobalSign, O=GlobalSign, OU=GlobalSign ECC Root CA - R5, Key type:EC, Length:384, Cert Id:1997048439, Valid from:11/13/12, 12:00 AM, Valid until:1/19/38, 3:14 AM
05:07:42.444 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:3d983ba6663d9063f77e26573804ef00, Subject:C=DE, O=Atos, CN=Atos TrustedRoot Root CA ECC TLS 2021, Issuer:C=DE, O=Atos, CN=Atos TrustedRoot Root CA ECC TLS 2021, Key type:EC, Length:384, Cert Id:-1147749653, Valid from:4/22/21, 9:26 AM, Valid until:4/17/41, 9:26 AM
05:07:42.445 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:d6a5f083f285c3e5195df5d, Subject:CN=Trustwave Global ECC P256 Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Issuer:CN=Trustwave Global ECC P256 Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Key type:EC, Length:256, Cert Id:948272517, Valid from:8/23/17, 7:35 PM, Valid until:8/23/42, 7:35 PM
05:07:42.445 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:28fd99604147a6013aca147b1feff96808835d7d, Subject:CN=CommScope Public Trust ECC Root-02, O=CommScope, C=US, Issuer:CN=CommScope Public Trust ECC Root-02, O=CommScope, C=US, Key type:EC, Length:384, Cert Id:1468864844, Valid from:4/28/21, 5:44 PM, Valid until:4/28/46, 5:44 PM
05:07:42.446 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:0, Subject:OU=Go Daddy Class 2 Certification Authority, O="The Go Daddy Group, Inc.", C=US, Issuer:OU=Go Daddy Class 2 Certification Authority, O="The Go Daddy Group, Inc.", C=US, Key type:RSA, Length:2048, Cert Id:-271444299, Valid from:6/29/04, 5:06 PM, Valid until:6/29/34, 5:06 PM
05:07:42.447 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:983f3, Subject:CN=D-TRUST Root Class 3 CA 2 2009, O=D-Trust GmbH, C=DE, Issuer:CN=D-TRUST Root Class 3 CA 2 2009, O=D-Trust GmbH, C=DE, Key type:RSA, Length:2048, Cert Id:1430153102, Valid from:11/5/09, 8:35 AM, Valid until:11/5/29, 8:35 AM
05:07:42.447 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:4f1bd42f54bb2f4b, Subject:CN=SwissSign Silver CA - G2, O=SwissSign AG, C=CH, Issuer:CN=SwissSign Silver CA - G2, O=SwissSign AG, C=CH, Key type:RSA, Length:4096, Cert Id:126726124, Valid from:10/25/06, 8:32 AM, Valid until:10/25/36, 8:32 AM
05:07:42.448 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA512withRSA, Serial:1ebf5950b8c980374c06f7eb554fb5ed, Subject:CN=Certum Trusted Root CA, OU=Certum Certification Authority, O=Asseco Data Systems S.A., C=PL, Issuer:CN=Certum Trusted Root CA, OU=Certum Certification Authority, O=Asseco Data Systems S.A., C=PL, Key type:RSA, Length:4096, Cert Id:-774327051, Valid from:3/16/18, 12:10 PM, Valid until:3/16/43, 12:10 PM
05:07:42.448 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:7777062726a9b17c, Subject:CN=AffirmTrust Commercial, O=AffirmTrust, C=US, Issuer:CN=AffirmTrust Commercial, O=AffirmTrust, C=US, Key type:RSA, Length:2048, Cert Id:630485644, Valid from:1/29/10, 2:06 PM, Valid until:12/31/30, 2:06 PM
05:07:42.449 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:0, Subject:CN=Hellenic Academic and Research Institutions ECC RootCA 2015, O=Hellenic Academic and Research Institutions Cert. Authority, L=Athens, C=GR, Issuer:CN=Hellenic Academic and Research Institutions ECC RootCA 2015, O=Hellenic Academic and Research Institutions Cert. Authority, L=Athens, C=GR, Key type:EC, Length:384, Cert Id:513613456, Valid from:7/7/15, 10:37 AM, Valid until:6/30/40, 10:37 AM
05:07:42.450 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:78585f2ead2c194be3370735341328b596d46593, Subject:CN=QuoVadis Root CA 1 G3, O=QuoVadis Limited, C=BM, Issuer:CN=QuoVadis Root CA 1 G3, O=QuoVadis Limited, C=BM, Key type:RSA, Length:4096, Cert Id:-762436034, Valid from:1/12/12, 5:27 PM, Valid until:1/12/42, 5:27 PM
05:07:42.450 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:556f65e3b4d9906a1b09d16c3ec06c20, Subject:CN=BJCA Global Root CA1, O=BEIJING CERTIFICATE AUTHORITY, C=CN, Issuer:CN=BJCA Global Root CA1, O=BEIJING CERTIFICATE AUTHORITY, C=CN, Key type:RSA, Length:4096, Cert Id:-1889263367, Valid from:12/19/19, 3:16 AM, Valid until:12/12/44, 3:16 AM
05:07:42.451 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:8210cfb0d240e3594463e0bb63828b00, Subject:CN=ISRG Root X1, O=Internet Security Research Group, C=US, Issuer:CN=ISRG Root X1, O=Internet Security Research Group, C=US, Key type:RSA, Length:4096, Cert Id:1521974916, Valid from:6/4/15, 11:04 AM, Valid until:6/4/35, 11:04 AM
05:07:42.452 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:7cc98f2b84d7dfea0fc9659ad34b4d96, Subject:CN=D-TRUST BR Root CA 1 2020, O=D-Trust GmbH, C=DE, Issuer:CN=D-TRUST BR Root CA 1 2020, O=D-Trust GmbH, C=DE, Key type:EC, Length:384, Cert Id:-83817738, Valid from:2/11/20, 9:45 AM, Valid until:2/11/35, 9:44 AM
05:07:42.452 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:b0b75a16485fbfe1cbf58bd719e67d, Subject:CN=Izenpe.com, O=IZENPE S.A., C=ES, Issuer:CN=Izenpe.com, O=IZENPE S.A., C=ES, Key type:RSA, Length:4096, Cert Id:-1845580984, Valid from:12/13/07, 1:08 PM, Valid until:12/13/37, 8:27 AM
05:07:42.453 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:1, Subject:CN=SecureSign RootCA11, O="Japan Certification Services, Inc.", C=JP, Issuer:CN=SecureSign RootCA11, O="Japan Certification Services, Inc.", C=JP, Key type:RSA, Length:2048, Cert Id:2079057034, Valid from:4/8/09, 4:56 AM, Valid until:4/8/29, 4:56 AM
05:07:42.453 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1, Subject:CN=T-TeleSec GlobalRoot Class 3, OU=T-Systems Trust Center, O=T-Systems Enterprise Services GmbH, C=DE, Issuer:CN=T-TeleSec GlobalRoot Class 3, OU=T-Systems Trust Center, O=T-Systems Enterprise Services GmbH, C=DE, Key type:RSA, Length:2048, Cert Id:1894096264, Valid from:10/1/08, 10:29 AM, Valid until:10/1/33, 11:59 PM
05:07:42.454 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:1ed397095fd8b4b347701eaabe7f45b3, Subject:CN=Microsoft RSA Root Certificate Authority 2017, O=Microsoft Corporation, C=US, Issuer:CN=Microsoft RSA Root Certificate Authority 2017, O=Microsoft Corporation, C=US, Key type:RSA, Length:4096, Cert Id:-1446618248, Valid from:12/18/19, 10:51 PM, Valid until:7/18/42, 11:00 PM
05:07:42.454 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:203e5c068ef631a9c72905052, Subject:CN=GTS Root R4, O=Google Trust Services LLC, C=US, Issuer:CN=GTS Root R4, O=Google Trust Services LLC, C=US, Key type:EC, Length:384, Cert Id:1326433111, Valid from:6/22/16, 12:00 AM, Valid until:6/22/36, 12:00 AM
05:07:42.455 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:d65d9bb378812eeb, Subject:CN=Security Communication ECC RootCA1, O="SECOM Trust Systems CO.,LTD.", C=JP, Issuer:CN=Security Communication ECC RootCA1, O="SECOM Trust Systems CO.,LTD.", C=JP, Key type:EC, Length:384, Cert Id:2131361491, Valid from:6/16/16, 5:15 AM, Valid until:1/18/38, 5:15 AM
05:07:42.456 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:a0142800000014523cf467c00000002, Subject:CN=IdenTrust Public Sector Root CA 1, O=IdenTrust, C=US, Issuer:CN=IdenTrust Public Sector Root CA 1, O=IdenTrust, C=US, Key type:RSA, Length:4096, Cert Id:2123370772, Valid from:1/16/14, 5:53 PM, Valid until:1/16/34, 5:53 PM
05:07:42.456 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:53d5cfe619930bfb2b0512d8c22aa2a4, Subject:C=DE, O=Atos, CN=Atos TrustedRoot Root CA RSA TLS 2021, Issuer:C=DE, O=Atos, CN=Atos TrustedRoot Root CA RSA TLS 2021, Key type:RSA, Length:4096, Cert Id:-1322384443, Valid from:4/22/21, 9:21 AM, Valid until:4/17/41, 9:21 AM
05:07:42.457 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:4f2364b88e97639ec65381c1764ecb2a7415d6d7, Subject:CN=TrustAsia Global Root CA G4, O="TrustAsia Technologies, Inc.", C=CN, Issuer:CN=TrustAsia Global Root CA G4, O="TrustAsia Technologies, Inc.", C=CN, Key type:EC, Length:384, Cert Id:-1127247637, Valid from:5/20/21, 2:10 AM, Valid until:5/19/46, 2:10 AM
05:07:42.457 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:3e8a5d07ec55d232d5b7e3b65f01eb2ddce4d6e4, Subject:CN=SZAFIR ROOT CA2, O=Krajowa Izba Rozliczeniowa S.A., C=PL, Issuer:CN=SZAFIR ROOT CA2, O=Krajowa Izba Rozliczeniowa S.A., C=PL, Key type:RSA, Length:2048, Cert Id:381279303, Valid from:10/19/15, 7:43 AM, Valid until:10/19/35, 7:43 AM
05:07:42.458 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:aecf00bac4cf32f843b2, Subject:CN=emSign Root CA - C1, O=eMudhra Inc, OU=emSign PKI, C=US, Issuer:CN=emSign Root CA - C1, O=eMudhra Inc, OU=emSign PKI, C=US, Key type:RSA, Length:2048, Cert Id:-1268863356, Valid from:2/18/18, 6:30 PM, Valid until:2/18/43, 6:30 PM
05:07:42.459 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:15448ef21fd97590df5040a, Subject:CN=e-Szigno Root CA 2017, OID.2.5.4.97=VATHU-23584497, O=Microsec Ltd., L=Budapest, C=HU, Issuer:CN=e-Szigno Root CA 2017, OID.2.5.4.97=VATHU-23584497, O=Microsec Ltd., L=Budapest, C=HU, Key type:EC, Length:256, Cert Id:-991173715, Valid from:8/22/17, 12:07 PM, Valid until:8/22/42, 12:07 PM
05:07:42.460 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:184accd6, Subject:CN=CFCA EV ROOT, O=China Financial Certification Authority, C=CN, Issuer:CN=CFCA EV ROOT, O=China Financial Certification Authority, C=CN, Key type:RSA, Length:4096, Cert Id:551407782, Valid from:8/8/12, 3:07 AM, Valid until:12/31/29, 3:07 AM
05:07:42.460 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:2dddacce629794a143e8b0cd766a5e60, Subject:CN=HiPKI Root CA - G1, O="Chunghwa Telecom Co., Ltd.", C=TW, Issuer:CN=HiPKI Root CA - G1, O="Chunghwa Telecom Co., Ltd.", C=TW, Key type:RSA, Length:4096, Cert Id:-2016358144, Valid from:2/22/19, 9:46 AM, Valid until:12/31/37, 3:59 PM
05:07:42.461 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:4a538c28, Subject:CN=Entrust Root Certification Authority - G2, OU="(c) 2009 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Issuer:CN=Entrust Root Certification Authority - G2, OU="(c) 2009 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Key type:RSA, Length:2048, Cert Id:1936920337, Valid from:7/7/09, 5:25 PM, Valid until:12/7/30, 5:55 PM
05:07:42.462 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:509, Subject:CN=QuoVadis Root CA 2, O=QuoVadis Limited, C=BM, Issuer:CN=QuoVadis Root CA 2, O=QuoVadis Limited, C=BM, Key type:RSA, Length:4096, Cert Id:338250116, Valid from:11/24/06, 6:27 PM, Valid until:11/24/31, 6:23 PM
05:07:42.462 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:31f5e4620c6c58edd6d8, Subject:CN=emSign Root CA - G1, O=eMudhra Technologies Limited, OU=emSign PKI, C=IN, Issuer:CN=emSign Root CA - G1, O=eMudhra Technologies Limited, OU=emSign PKI, C=IN, Key type:RSA, Length:2048, Cert Id:392709196, Valid from:2/18/18, 6:30 PM, Valid until:2/18/43, 6:30 PM
05:07:42.463 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5c33cb622c5fb332, Subject:C=DE, O=Atos, CN=Atos TrustedRoot 2011, Issuer:C=DE, O=Atos, CN=Atos TrustedRoot 2011, Key type:RSA, Length:2048, Cert Id:-28528624, Valid from:7/7/11, 2:58 PM, Valid until:12/31/30, 11:59 PM
05:07:42.463 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:2ac5c266a0b409b8f0b79f2ae462577, Subject:CN=DigiCert High Assurance EV Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert High Assurance EV Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:2048, Cert Id:-1410680354, Valid from:11/10/06, 12:00 AM, Valid until:11/10/31, 12:00 AM
05:07:42.464 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:0, Subject:CN=Starfield Root Certificate Authority - G2, O="Starfield Technologies, Inc.", L=Scottsdale, ST=Arizona, C=US, Issuer:CN=Starfield Root Certificate Authority - G2, O="Starfield Technologies, Inc.", L=Scottsdale, ST=Arizona, C=US, Key type:RSA, Length:2048, Cert Id:-1026641587, Valid from:9/1/09, 12:00 AM, Valid until:12/31/37, 11:59 PM
05:07:42.464 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:b931c3ad63967ea6723bfc3af9af44b, Subject:CN=DigiCert Assured ID Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Assured ID Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:2048, Cert Id:-385398383, Valid from:8/1/13, 12:00 PM, Valid until:1/15/38, 12:00 PM
05:07:42.465 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:62f6326ce5c4e3685c1b62dd9c2e9d95, Subject:CN=AC RAIZ FNMT-RCM SERVIDORES SEGUROS, OID.2.5.4.97=VATES-Q2826004J, OU=Ceres, O=FNMT-RCM, C=ES, Issuer:CN=AC RAIZ FNMT-RCM SERVIDORES SEGUROS, OID.2.5.4.97=VATES-Q2826004J, OU=Ceres, O=FNMT-RCM, C=ES, Key type:EC, Length:384, Cert Id:246315697, Valid from:12/20/18, 9:37 AM, Valid until:12/20/43, 9:37 AM
05:07:42.466 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:983f4, Subject:CN=D-TRUST Root Class 3 CA 2 EV 2009, O=D-Trust GmbH, C=DE, Issuer:CN=D-TRUST Root Class 3 CA 2 EV 2009, O=D-Trust GmbH, C=DE, Key type:RSA, Length:2048, Cert Id:971313728, Valid from:11/5/09, 8:50 AM, Valid until:11/5/29, 8:50 AM
05:07:42.466 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:0, Subject:CN=Starfield Services Root Certificate Authority - G2, O="Starfield Technologies, Inc.", L=Scottsdale, ST=Arizona, C=US, Issuer:CN=Starfield Services Root Certificate Authority - G2, O="Starfield Technologies, Inc.", L=Scottsdale, ST=Arizona, C=US, Key type:RSA, Length:2048, Cert Id:1964785574, Valid from:9/1/09, 12:00 AM, Valid until:12/31/37, 11:59 PM
05:07:42.467 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:1f47afaa62007050544c019e9b63992a, Subject:CN=COMODO ECC Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Issuer:CN=COMODO ECC Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Key type:EC, Length:384, Cert Id:1146488932, Valid from:3/6/08, 12:00 AM, Valid until:1/18/38, 11:59 PM
05:07:42.468 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:7497258ac73f7a54, Subject:CN=AffirmTrust Premium ECC, O=AffirmTrust, C=US, Issuer:CN=AffirmTrust Premium ECC, O=AffirmTrust, C=US, Key type:EC, Length:384, Cert Id:-2080363786, Valid from:1/29/10, 2:20 PM, Valid until:12/31/40, 2:20 PM
05:07:42.468 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:a68b79290000000050d091f9, Subject:CN=Entrust Root Certification Authority - EC1, OU="(c) 2012 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Issuer:CN=Entrust Root Certification Authority - EC1, OU="(c) 2012 Entrust, Inc. - for authorized use only", OU=See www.entrust.net/legal-terms, O="Entrust, Inc.", C=US, Key type:EC, Length:384, Cert Id:924514073, Valid from:12/18/12, 3:25 PM, Valid until:12/18/37, 3:55 PM
05:07:42.469 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:0, Subject:OU=Starfield Class 2 Certification Authority, O="Starfield Technologies, Inc.", C=US, Issuer:OU=Starfield Class 2 Certification Authority, O="Starfield Technologies, Inc.", C=US, Key type:RSA, Length:2048, Cert Id:1825617644, Valid from:6/29/04, 5:39 PM, Valid until:6/29/34, 5:39 PM
05:07:42.470 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:66c9fd5749736663f3b0b9ad9e89e7603f24a, Subject:CN=Amazon Root CA 3, O=Amazon, C=US, Issuer:CN=Amazon Root CA 3, O=Amazon, C=US, Key type:EC, Length:256, Cert Id:-1562287523, Valid from:5/26/15, 12:00 AM, Valid until:5/26/40, 12:00 AM
05:07:42.470 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:0, Subject:CN=Hellenic Academic and Research Institutions RootCA 2015, O=Hellenic Academic and Research Institutions Cert. Authority, L=Athens, C=GR, Issuer:CN=Hellenic Academic and Research Institutions RootCA 2015, O=Hellenic Academic and Research Institutions Cert. Authority, L=Athens, C=GR, Key type:RSA, Length:4096, Cert Id:-802976731, Valid from:7/7/15, 10:11 AM, Valid until:6/30/40, 10:11 AM
05:07:42.471 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:95be16a0f72e46f17b398272fa8bcd96, Subject:CN=TeliaSonera Root CA v1, O=TeliaSonera, Issuer:CN=TeliaSonera Root CA v1, O=TeliaSonera, Key type:RSA, Length:4096, Cert Id:1495358374, Valid from:10/18/07, 12:00 PM, Valid until:10/18/32, 12:00 PM
05:07:42.471 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1b70e9d2ffae6c71, Subject:CN=Autoridad de Certificacion Firmaprofesional CIF A62634068, C=ES, Issuer:CN=Autoridad de Certificacion Firmaprofesional CIF A62634068, C=ES, Key type:RSA, Length:4096, Cert Id:-1766730314, Valid from:9/23/14, 3:22 PM, Valid until:5/5/36, 3:22 PM
05:07:42.472 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:cbe, Subject:CN=TWCA Global Root CA, OU=Root CA, O=TAIWAN-CA, C=TW, Issuer:CN=TWCA Global Root CA, OU=Root CA, O=TAIWAN-CA, C=TW, Key type:RSA, Length:4096, Cert Id:861175838, Valid from:6/27/12, 6:28 AM, Valid until:12/31/30, 3:59 PM
05:07:42.472 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:203e57ef53f93fda50921b2a6, Subject:CN=GlobalSign, O=GlobalSign, OU=GlobalSign ECC Root CA - R4, Issuer:CN=GlobalSign, O=GlobalSign, OU=GlobalSign ECC Root CA - R4, Key type:EC, Length:256, Cert Id:-516970517, Valid from:11/13/12, 12:00 AM, Valid until:1/19/38, 3:14 AM
05:07:42.473 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:62533b1470333275cf98d9ab9bfccf8, Subject:CN=Certainly Root E1, O=Certainly, C=US, Issuer:CN=Certainly Root E1, O=Certainly, C=US, Key type:EC, Length:384, Cert Id:792571453, Valid from:4/1/21, 12:00 AM, Valid until:4/1/46, 12:00 AM
05:07:42.473 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:5c8b99c55a94c5d27156decd8980cc26, Subject:CN=USERTrust ECC Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US, Issuer:CN=USERTrust ECC Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US, Key type:EC, Length:384, Cert Id:-965679910, Valid from:2/1/10, 12:00 AM, Valid until:1/18/38, 11:59 PM
05:07:42.474 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withECDSA, Serial:2c299c5b16ed0595, Subject:CN=SSL.com EV Root Certification Authority ECC, O=SSL Corporation, L=Houston, ST=Texas, C=US, Issuer:CN=SSL.com EV Root Certification Authority ECC, O=SSL Corporation, L=Houston, ST=Texas, C=US, Key type:EC, Length:384, Cert Id:1789254518, Valid from:2/12/16, 6:15 PM, Valid until:2/12/41, 6:15 PM
05:07:42.474 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:43708277cf4d5d34f1caae322f37f7f47f75a09e, Subject:CN=CommScope Public Trust ECC Root-01, O=CommScope, C=US, Issuer:CN=CommScope Public Trust ECC Root-01, O=CommScope, C=US, Key type:EC, Length:384, Cert Id:-1762588238, Valid from:4/28/21, 5:35 PM, Valid until:4/28/46, 5:35 PM
05:07:42.475 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:9e09365acf7d9c8b93e1c0b042a2ef3, Subject:CN=DigiCert TLS ECC P384 Root G5, O="DigiCert, Inc.", C=US, Issuer:CN=DigiCert TLS ECC P384 Root G5, O="DigiCert, Inc.", C=US, Key type:EC, Length:384, Cert Id:-354195278, Valid from:1/15/21, 12:00 AM, Valid until:1/14/46, 11:59 PM
05:07:42.476 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:42f2ccda1b6937445f15fe752810b8f4, Subject:CN=Sectigo Public Server Authentication Root E46, O=Sectigo Limited, C=GB, Issuer:CN=Sectigo Public Server Authentication Root E46, O=Sectigo Limited, C=GB, Key type:EC, Length:384, Cert Id:-505582027, Valid from:3/22/21, 12:00 AM, Valid until:3/21/46, 11:59 PM
05:07:42.476 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:8bd85976c9927a48068473b, Subject:CN=Trustwave Global ECC P384 Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Issuer:CN=Trustwave Global ECC P384 Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Key type:EC, Length:384, Cert Id:-1993924923, Valid from:8/23/17, 7:36 PM, Valid until:8/23/42, 7:36 PM
05:07:42.477 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5ddfb1da5aa3ed5dbe5a6520650390ef, Subject:CN=UCA Global G2 Root, O=UniTrust, C=CN, Issuer:CN=UCA Global G2 Root, O=UniTrust, C=CN, Key type:RSA, Length:4096, Cert Id:1844967193, Valid from:3/11/16, 12:00 AM, Valid until:12/31/40, 12:00 AM
05:07:42.477 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:76b1205274f0858746b3f8231af6c2c0, Subject:CN=OISTE WISeKey Global Root GB CA, OU=OISTE Foundation Endorsed, O=WISeKey, C=CH, Issuer:CN=OISTE WISeKey Global Root GB CA, OU=OISTE Foundation Endorsed, O=WISeKey, C=CH, Key type:RSA, Length:2048, Cert Id:-613481516, Valid from:12/1/14, 3:00 PM, Valid until:12/1/39, 3:10 PM
05:07:42.478 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:4caaf9cadb636fe01ff74ed85b03869d, Subject:CN=COMODO RSA Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Issuer:CN=COMODO RSA Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB, Key type:RSA, Length:4096, Cert Id:1769425049, Valid from:1/19/10, 12:00 AM, Valid until:1/18/38, 11:59 PM
05:07:42.479 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:40000000001154b5ac394, Subject:CN=GlobalSign Root CA, OU=Root CA, O=GlobalSign nv-sa, C=BE, Issuer:CN=GlobalSign Root CA, OU=Root CA, O=GlobalSign nv-sa, C=BE, Key type:RSA, Length:2048, Cert Id:536948034, Valid from:9/1/98, 12:00 PM, Valid until:1/28/28, 12:00 PM
05:07:42.479 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:445734245b81899b35f2ceb82b3b5ba726f07528, Subject:CN=QuoVadis Root CA 2 G3, O=QuoVadis Limited, C=BM, Issuer:CN=QuoVadis Root CA 2 G3, O=QuoVadis Limited, C=BM, Key type:RSA, Length:4096, Cert Id:696763521, Valid from:1/12/12, 6:59 PM, Valid until:1/12/42, 6:59 PM
05:07:42.480 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:e17c3740fd1bfe67, Subject:CN=Security Communication RootCA3, O="SECOM Trust Systems CO.,LTD.", C=JP, Issuer:CN=Security Communication RootCA3, O="SECOM Trust Systems CO.,LTD.", C=JP, Key type:RSA, Length:4096, Cert Id:-490273538, Valid from:6/16/16, 6:17 AM, Valid until:1/18/38, 6:17 AM
05:07:42.481 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:1fd6d30fca3ca51a81bbc640e35032d, Subject:CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US, Issuer:CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US, Key type:RSA, Length:4096, Cert Id:-347365895, Valid from:2/1/10, 12:00 AM, Valid until:1/18/38, 11:59 PM
05:07:42.482 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:456b5054, Subject:CN=Entrust Root Certification Authority, OU="(c) 2006 Entrust, Inc.", OU=www.entrust.net/CPS is incorporated by reference, O="Entrust, Inc.", C=US, Issuer:CN=Entrust Root Certification Authority, OU="(c) 2006 Entrust, Inc.", OU=www.entrust.net/CPS is incorporated by reference, O="Entrust, Inc.", C=US, Key type:RSA, Length:2048, Cert Id:-1261404096, Valid from:11/27/06, 8:23 PM, Valid until:11/27/26, 8:53 PM
05:07:42.482 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:7b2c9bd316803299, Subject:CN=SSL.com Root Certification Authority RSA, O=SSL Corporation, L=Houston, ST=Texas, C=US, Issuer:CN=SSL.com Root Certification Authority RSA, O=SSL Corporation, L=Houston, ST=Texas, C=US, Key type:RSA, Length:4096, Cert Id:156725711, Valid from:2/12/16, 5:39 PM, Valid until:2/12/41, 5:39 PM
05:07:42.483 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:fedce3010fc948ff, Subject:CN=Certigna, O=Dhimyotis, C=FR, Issuer:CN=Certigna, O=Dhimyotis, C=FR, Key type:RSA, Length:2048, Cert Id:-788091456, Valid from:6/29/07, 3:13 PM, Valid until:6/29/27, 3:13 PM
05:07:42.484 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:7d0997fef047ea7a, Subject:CN=GDCA TrustAUTH R5 ROOT, O="GUANG DONG CERTIFICATE AUTHORITY CO.,LTD.", C=CN, Issuer:CN=GDCA TrustAUTH R5 ROOT, O="GUANG DONG CERTIFICATE AUTHORITY CO.,LTD.", C=CN, Key type:RSA, Length:4096, Cert Id:494136981, Valid from:11/26/14, 5:13 AM, Valid until:12/31/40, 3:59 PM
05:07:42.484 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:1, Subject:CN=T-TeleSec GlobalRoot Class 2, OU=T-Systems Trust Center, O=T-Systems Enterprise Services GmbH, C=DE, Issuer:CN=T-TeleSec GlobalRoot Class 2, OU=T-Systems Trust Center, O=T-Systems Enterprise Services GmbH, C=DE, Key type:RSA, Length:2048, Cert Id:-1238464039, Valid from:10/1/08, 10:40 AM, Valid until:10/1/33, 11:59 PM
05:07:42.485 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:203e5b882eb20f825276d3d66, Subject:CN=GTS Root R3, O=Google Trust Services LLC, C=US, Issuer:CN=GTS Root R3, O=Google Trust Services LLC, C=US, Key type:EC, Length:384, Cert Id:1163081155, Valid from:6/22/16, 12:00 AM, Valid until:6/22/36, 12:00 AM
05:07:42.485 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:7c4f04391cd4992d, Subject:CN=AffirmTrust Networking, O=AffirmTrust, C=US, Issuer:CN=AffirmTrust Networking, O=AffirmTrust, C=US, Key type:RSA, Length:2048, Cert Id:651670175, Valid from:1/29/10, 2:08 PM, Valid until:12/31/30, 2:08 PM
05:07:42.486 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:c27e43044e473f19, Subject:EMAILADDRESS=info@e-szigno.hu, CN=Microsec e-Szigno Root CA 2009, O=Microsec Ltd., L=Budapest, C=HU, Issuer:EMAILADDRESS=info@e-szigno.hu, CN=Microsec e-Szigno Root CA 2009, O=Microsec Ltd., L=Budapest, C=HU, Key type:RSA, Length:2048, Cert Id:-1903950012, Valid from:6/16/09, 11:30 AM, Valid until:12/30/29, 11:30 AM
05:07:42.486 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:1403f5abfb378b17405be243b2a5d1c4, Subject:CN=SSL.com TLS ECC Root CA 2022, O=SSL Corporation, C=US, Issuer:CN=SSL.com TLS ECC Root CA 2022, O=SSL Corporation, C=US, Key type:EC, Length:384, Cert Id:683561703, Valid from:8/25/22, 4:33 PM, Valid until:8/19/46, 4:33 PM
05:07:42.487 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:6fbedaad73bd0840e28b4dbed4f75b91, Subject:CN=SSL.com TLS RSA Root CA 2022, O=SSL Corporation, C=US, Issuer:CN=SSL.com TLS RSA Root CA 2022, O=SSL Corporation, C=US, Key type:RSA, Length:4096, Cert Id:556880013, Valid from:8/25/22, 4:34 PM, Valid until:8/19/46, 4:34 PM
05:07:42.487 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:43e37113d8b359145db7ce8cfd35fd6fbc058d45, Subject:CN=vTrus Root CA, O="iTrusChina Co.,Ltd.", C=CN, Issuer:CN=vTrus Root CA, O="iTrusChina Co.,Ltd.", C=CN, Key type:RSA, Length:4096, Cert Id:-1825883750, Valid from:7/31/18, 7:24 AM, Valid until:7/31/43, 7:24 AM
05:07:42.488 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA512withRSA, Serial:21d6d04a4f250fc93237fcaa5e128de9, Subject:CN=Certum Trusted Network CA 2, OU=Certum Certification Authority, O=Unizeto Technologies S.A., C=PL, Issuer:CN=Certum Trusted Network CA 2, OU=Certum Certification Authority, O=Unizeto Technologies S.A., C=PL, Key type:RSA, Length:4096, Cert Id:1983350452, Valid from:10/6/11, 8:39 AM, Valid until:10/6/46, 8:39 AM
05:07:42.489 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:49412ce40010, Subject:CN=NetLock Arany (Class Gold) F?tan?s?tv?ny, OU=Tan?s?tv?nykiad?k (Certification Services), O=NetLock Kft., L=Budapest, C=HU, Issuer:CN=NetLock Arany (Class Gold) F?tan?s?tv?ny, OU=Tan?s?tv?nykiad?k (Certification Services), O=NetLock Kft., L=Budapest, C=HU, Key type:RSA, Length:2048, Cert Id:58541246, Valid from:12/11/08, 3:08 PM, Valid until:12/6/28, 3:08 PM
05:07:42.490 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:64f60e6577616aab3bb4ea8584bbb189b871930f, Subject:CN=TrustAsia Global Root CA G3, O="TrustAsia Technologies, Inc.", C=CN, Issuer:CN=TrustAsia Global Root CA G3, O="TrustAsia Technologies, Inc.", C=CN, Key type:RSA, Length:4096, Cert Id:-766524011, Valid from:5/20/21, 2:10 AM, Valid until:5/19/46, 2:10 AM
05:07:42.491 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:3863def8, Subject:CN=Entrust.net Certification Authority (2048), OU=(c) 1999 Entrust.net Limited, OU=www.entrust.net/CPS_2048 incorp. by ref. (limits liab.), O=Entrust.net, Issuer:CN=Entrust.net Certification Authority (2048), OU=(c) 1999 Entrust.net Limited, OU=www.entrust.net/CPS_2048 incorp. by ref. (limits liab.), O=Entrust.net, Key type:RSA, Length:2048, Cert Id:-328536082, Valid from:12/24/99, 5:50 PM, Valid until:7/24/29, 2:15 PM
05:07:42.492 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5d938d306736c8061d1ac754846907, Subject:OU=AC RAIZ FNMT-RCM, O=FNMT-RCM, C=ES, Issuer:OU=AC RAIZ FNMT-RCM, O=FNMT-RCM, C=ES, Key type:RSA, Length:4096, Cert Id:1555523573, Valid from:10/29/08, 3:59 PM, Valid until:1/1/30, 12:00 AM
05:07:42.492 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:11d2bbb9d723189e405f0a9d2dd0df2567d1, Subject:CN=GlobalSign Root R46, O=GlobalSign nv-sa, C=BE, Issuer:CN=GlobalSign Root R46, O=GlobalSign nv-sa, C=BE, Key type:RSA, Length:4096, Cert Id:1275948927, Valid from:3/20/19, 12:00 AM, Valid until:3/20/46, 12:00 AM
05:07:42.493 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:1, Subject:CN=TWCA Root Certification Authority, OU=Root CA, O=TAIWAN-CA, C=TW, Issuer:CN=TWCA Root Certification Authority, OU=Root CA, O=TAIWAN-CA, C=TW, Key type:RSA, Length:2048, Cert Id:-1642094263, Valid from:8/28/08, 7:24 AM, Valid until:12/31/30, 3:59 PM
05:07:42.493 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:83be056904246b1a1756ac95991c74a, Subject:CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:RSA, Length:2048, Cert Id:1341898239, Valid from:11/10/06, 12:00 AM, Valid until:11/10/31, 12:00 AM
05:07:42.494 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withECDSA, Serial:55556bcf25ea43535c3a40fd5ab4572, Subject:CN=DigiCert Global Root G3, OU=www.digicert.com, O=DigiCert Inc, C=US, Issuer:CN=DigiCert Global Root G3, OU=www.digicert.com, O=DigiCert Inc, C=US, Key type:EC, Length:384, Cert Id:-795968543, Valid from:8/1/13, 12:00 PM, Valid until:1/15/38, 12:00 PM
05:07:42.495 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:2, Subject:CN=Buypass Class 2 Root CA, O=Buypass AS-983163327, C=NO, Issuer:CN=Buypass Class 2 Root CA, O=Buypass AS-983163327, C=NO, Key type:RSA, Length:4096, Cert Id:969960563, Valid from:10/26/10, 8:38 AM, Valid until:10/26/40, 8:38 AM
05:07:42.495 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:5f70e86da49f346352ebab2, Subject:CN=Trustwave Global Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Issuer:CN=Trustwave Global Certification Authority, O="Trustwave Holdings, Inc.", L=Chicago, ST=Illinois, C=US, Key type:RSA, Length:4096, Cert Id:416366836, Valid from:8/23/17, 7:34 PM, Valid until:8/23/42, 7:34 PM
05:07:42.496 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:570a119742c4e3cc, Subject:CN=Actalis Authentication Root CA, O=Actalis S.p.A./03358520967, L=Milan, C=IT, Issuer:CN=Actalis Authentication Root CA, O=Actalis S.p.A./03358520967, L=Milan, C=IT, Key type:RSA, Length:4096, Cert Id:1729119956, Valid from:9/22/11, 11:22 AM, Valid until:9/22/30, 11:22 AM
05:07:42.496 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA1withRSA, Serial:bb401c43f55e4fb0, Subject:CN=SwissSign Gold CA - G2, O=SwissSign AG, C=CH, Issuer:CN=SwissSign Gold CA - G2, O=SwissSign AG, C=CH, Key type:RSA, Length:4096, Cert Id:1516221943, Valid from:10/25/06, 8:30 AM, Valid until:10/25/36, 8:30 AM
05:07:42.497 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA384withRSA, Serial:66c9fd29635869f0a0fe58678f85b26bb8a37, Subject:CN=Amazon Root CA 2, O=Amazon, C=US, Issuer:CN=Amazon Root CA 2, O=Amazon, C=US, Key type:RSA, Length:4096, Cert Id:-1766132388, Valid from:5/26/15, 12:00 AM, Valid until:5/26/40, 12:00 AM
05:07:42.497 DEBUG [EventHelper.logX509CertificateEvent] - X509Certificate: Alg:SHA256withRSA, Serial:110034b64ec6362d36, Subject:OU=certSIGN ROOT CA G2, O=CERTSIGN SA, C=RO, Issuer:OU=certSIGN ROOT CA G2, O=CERTSIGN SA, C=RO, Key type:RSA, Length:4096, Cert Id:-2113880430, Valid from:2/6/17, 9:27 AM, Valid until:2/6/42, 9:27 AM
05:07:42.501 DEBUG [HttpClientImpl.<init>] - [Local Distributor - Session Creation] [170ms] HttpClientImpl(1) proxySelector is sun.net.spi.DefaultProxySelector@5adc6cdb (user-supplied=false)
05:07:42.523 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [192ms] HttpClientImpl(1) next timeout: 0
05:07:42.523 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [192ms] HttpClientImpl(1) next expired: 0
05:07:42.523 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [193ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.530 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session
05:07:42.534 DEBUG [HttpClientImpl.sendAsync] - [Local Distributor - Session Creation] [204ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session POST
05:07:42.540 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [209ms] HttpClientImpl(1) next timeout: 299999
05:07:42.540 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [209ms] HttpClientImpl(1) next expired: 0
05:07:42.540 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [209ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.540 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [210ms] Exchange establishing exchange for http://localhost:22314/session POST,
	 proxy=null
05:07:42.547 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [217ms] Http2ClientImpl not found in connection pool
05:07:42.548 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [217ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:42.548 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [217ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:42.548 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [218ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:42.553 DEBUG [PlainHttpConnection.<init>] - [pool-2-thread-1] [223ms] PlainHttpConnection(?) Initial receive buffer size is: 65536
05:07:42.554 DEBUG [PlainHttpConnection.<init>] - [pool-2-thread-1] [223ms] PlainHttpConnection(?) Initial send buffer size is: 8192
05:07:42.561 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [230ms] Exchange checkFor407: all clear
05:07:42.561 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [230ms] Http1Exchange Sending headers only
05:07:42.563 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [233ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@77c1b5f0 queue.isEmpty: true
05:07:42.567 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [236ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@77c1b5f0, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:42.567 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [236ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.570 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [239ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.570 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [239ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.570 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [239ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.570 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [239ms] Http1Exchange response created in advance
05:07:42.570 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [240ms] Http1Exchange initiating connect async
05:07:42.575 DEBUG [PlainHttpConnection.connectAsync] - [pool-2-thread-1] [244ms] PlainHttpConnection(SocketTube(1)) registering connect timer: ConnectTimerEvent, TimeoutEvent[id=2, duration=PT10S, deadline=2024-12-26T05:07:52.571033292Z]
05:07:42.575 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [244ms] HttpClientImpl(1) next timeout: 9996
05:07:42.575 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [245ms] HttpClientImpl(1) next expired: 0
05:07:42.575 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [245ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.575 DEBUG [PlainHttpConnection.connectAsync] - [pool-2-thread-1] [245ms] PlainHttpConnection(SocketTube(1)) registering connect event
05:07:42.576 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [246ms] SelectorAttachment Registering jdk.internal.net.http.PlainHttpConnection$ConnectEvent@45674572 for 8 (true)
05:07:42.576 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [246ms] HttpClientImpl(1) next timeout: 9995
05:07:42.577 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [246ms] HttpClientImpl(1) next expired: 0
05:07:42.577 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [246ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.578 DEBUG [PlainHttpConnection$ConnectEvent.handle] - [HttpClient-1-SelectorManager] [247ms] PlainHttpConnection(SocketTube(1)) ConnectEvent: finishing connect
05:07:42.578 DEBUG [PlainHttpConnection$ConnectEvent.handle] - [HttpClient-1-SelectorManager] [247ms] PlainHttpConnection(SocketTube(1)) ConnectEvent: connect finished: true, cancelled: false, Local addr: /127.0.0.1:42422
05:07:42.579 DEBUG [PlainHttpConnection.finishConnect] - [pool-2-thread-1] [248ms] PlainHttpConnection(SocketTube(1)) finishConnect, setting connected=true
05:07:42.579 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [248ms] HttpClientImpl(1) next timeout: 299960
05:07:42.579 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [248ms] Http1Exchange SocketTube(1) connecting flows
05:07:42.579 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [248ms] HttpClientImpl(1) next expired: 0
05:07:42.579 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [248ms] SocketTube(1) connecting flows
05:07:42.579 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [249ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [249ms] SocketTube(1) read publisher got subscriber
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [249ms] SocketTube(1) registering subscribe event
05:07:42.580 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [249ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=0, demand=0, stopped=false], Writing: [ops=0, demand=0]
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [249ms] SocketTube(1) subscribe event raised
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [250ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@5c3c559a
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [250ms] SocketTube(1) read demand reset to 0
05:07:42.580 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [250ms] SocketTube(1) calling onSubscribe
05:07:42.580 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [250ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:42.581 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [250ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:42.581 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [250ms] SocketTube(1) subscribed for writing
05:07:42.581 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [250ms] SocketTube(1) onSubscribe called
05:07:42.581 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [250ms] SocketTube(1) write: registering startSubscription event
05:07:42.581 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [251ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.581 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [251ms] SocketTube(1) pending subscriber subscribed
05:07:42.582 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [251ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.581 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [251ms] Http1Exchange requestAction.headers
05:07:42.582 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [251ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:42.582 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [251ms] HttpClientImpl(1) next timeout: 299957
05:07:42.582 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [252ms] SocketTube(1) got some demand for reading
05:07:42.583 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [252ms] SocketTube(1) resuming read event
05:07:42.582 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [252ms] HttpClientImpl(1) next expired: 0
05:07:42.583 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [252ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.583 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [252ms] SocketTube(1) write: starting subscription
05:07:42.583 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [252ms] SocketTube(1) write: offloading requestMore
05:07:42.583 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [252ms] Http1Exchange setting outgoing with headers
05:07:42.583 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [252ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:42.583 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [253ms] HttpClientImpl(1) next timeout: 299956
05:07:42.583 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [253ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=345 cap=345]], throwable=null]
05:07:42.584 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [253ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.584 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [253ms] SocketTube(1) write: requesting more...
05:07:42.584 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [253ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:42.584 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [254ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.584 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [253ms] HttpClientImpl(1) next expired: 0
05:07:42.584 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [254ms] Http1Exchange initiating completion of headersSentCF
05:07:42.584 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [254ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.585 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [254ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.585 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [254ms] Http1Publisher(SocketTube(1)) onNext with 345 bytes
05:07:42.585 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [254ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (true)
05:07:42.585 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [254ms] SocketTube(1) trying to write: 345
05:07:42.585 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [255ms] HttpClientImpl(1) next timeout: 299954
05:07:42.585 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [255ms] HttpClientImpl(1) next expired: 0
05:07:42.586 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [255ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.586 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [255ms] SocketTube(1) wrote: 345
05:07:42.586 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [256ms] SocketTube(1) write: requesting more...
05:07:42.586 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [256ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.587 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [256ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.587 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [256ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.587 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [256ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.587 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [256ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:42.587 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [256ms] Exchange checkFor407: all clear
05:07:42.587 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [256ms] Exchange sendRequestBody
05:07:42.587 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [256ms] Http1Exchange sendBodyAsync
05:07:42.589 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [258ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:42.589 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [259ms] Http1Exchange requesting more request body from the subscriber
05:07:42.590 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [259ms] jdk.internal.net.http.Http1Request@76a6e8bc Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@35c97312
05:07:42.590 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [259ms] jdk.internal.net.http.Http1Request@76a6e8bc onNext
05:07:42.590 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [259ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=465 cap=16384]], throwable=null]
05:07:42.590 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [259ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.590 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [259ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:42.590 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [260ms] Http1Exchange requesting more request body from the subscriber
05:07:42.591 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [260ms] jdk.internal.net.http.Http1Request@76a6e8bc Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@35c97312
05:07:42.591 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [260ms] Http1Publisher(SocketTube(1)) onNext with 465 bytes
05:07:42.591 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [260ms] SocketTube(1) trying to write: 465
05:07:42.591 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [260ms] SocketTube(1) wrote: 465
05:07:42.591 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [261ms] SocketTube(1) write: requesting more...
05:07:42.591 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [261ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.591 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [261ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.591 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [261ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.592 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [261ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.592 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [261ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:42.592 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [261ms] jdk.internal.net.http.Http1Request@76a6e8bc onComplete
05:07:42.592 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [261ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:42.592 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [261ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.592 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [261ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:42.592 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [262ms] Http1Exchange initiating completion of bodySentCF
05:07:42.593 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [262ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@5084b449
05:07:42.593 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [262ms] Http1Exchange sendBodyAsync completed successfully
05:07:42.593 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [263ms] Http1Exchange reading headers
05:07:42.596 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [265ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:42.596 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [265ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) First time around
05:07:42.596 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [265ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:42.847 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [516ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:42.848 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [518ms] SocketTube(1) read bytes: 960
05:07:42.849 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [518ms] Http1AsyncReceiver(SocketTube(1)) Putting 960 bytes into the queue
05:07:42.849 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [518ms] SocketTube(1) resuming read event
05:07:42.849 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [518ms] Http1AsyncReceiver(SocketTube(1)) Got 960 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@77c1b5f0
05:07:42.849 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [518ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:42.849 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [518ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.849 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [519ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:42.849 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [519ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 960 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@77c1b5f0
05:07:42.850 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [519ms] HttpClientImpl(1) next timeout: 299689
05:07:42.850 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [519ms] HttpClientImpl(1) next expired: 0
05:07:42.850 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [519ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.851 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [520ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Sending 960/960 bytes to header parser
05:07:42.852 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [521ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:42.852 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [521ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@77c1b5f0
05:07:42.852 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [521ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:42.852 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [522ms] Http1Exchange getResponseAsync completed successfully
05:07:42.853 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [523ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:42.858 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [527ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:42.859 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [528ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@66479760/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4641de55 queue.isEmpty: false
05:07:42.862 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [531ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 851
05:07:42.862 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [532ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=851, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:42.862 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [532ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@66479760/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4641de55, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:42.863 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [532ms] Http1AsyncReceiver(SocketTube(1)) Got 851 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@66479760/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4641de55
05:07:42.863 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [532ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:42.863 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [532ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 851 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@66479760/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4641de55
05:07:42.863 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [532ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Sending 851/960 bytes to body parser
05:07:42.863 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [532ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 851 bytes (851 remaining / 851)
05:07:42.863 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [532ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:42.863 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [533ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:42.864 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [533ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:42.864 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [534ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:42.864 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [534ms] SocketTube(1) connecting flows
05:07:42.864 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [534ms] SocketTube(1) read publisher got subscriber
05:07:42.865 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [534ms] SocketTube(1) registering subscribe event
05:07:42.865 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [534ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:42.865 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [534ms] SocketTube(1) subscribe event raised
05:07:42.865 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [534ms] SocketTube(1) subscribed for writing
05:07:42.865 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [534ms] SocketTube(1) write: resetting demand to 0
05:07:42.865 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [534ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:42.865 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [535ms] SocketTube(1) write: registering startSubscription event
05:07:42.865 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [535ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) read demand reset to 0
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) calling onSubscribe
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) got some demand for reading
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) resuming read event
05:07:42.866 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [535ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:42.866 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) onSubscribe called
05:07:42.866 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [535ms] SocketTube(1) pending subscriber subscribed
05:07:42.866 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [536ms] HttpClientImpl(1) next timeout: 0
05:07:42.866 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [536ms] HttpClientImpl(1) next expired: 1199134
05:07:42.866 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [536ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:42.867 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [536ms] Http1Response(id=1, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:42.867 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [536ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.867 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [536ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:42.867 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [536ms] SocketTube(1) write: starting subscription
05:07:42.867 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [536ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:42.867 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [537ms] SocketTube(1) write: offloading requestMore
05:07:42.867 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [537ms] SocketTube(1) write: requesting more...
05:07:42.867 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [537ms] HttpClientImpl(1) next timeout: 0
05:07:42.868 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [537ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.868 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session in 337ms
05:07:42.868 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [537ms] HttpClientImpl(1) next expired: 1199132
05:07:42.868 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [537ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.869 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=514413fa3b054a47, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=662e5724fb8526f5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189662529357583, endEpochNanos=1735189662868387251, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:42.875 DEBUG [ProtocolHandshake.createSession] - Detected upstream dialect: W3C
05:07:42.878 DEBUG [CdpEndpointFinder.getReportedUri] - URI found: http://localhost:33887
05:07:42.880 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=662e5724fb8526f5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=92861734197f84cd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=driver_service_factory.apply, kind=INTERNAL, startEpochNanos=1735189662248662777, endEpochNanos=1735189662880510064, attributes=AttributesMap{data={session.capabilities={"browserName": "chrome","goog:chromeOptions": {"args": ["--headless","--disable-gpu","--no-sandbox","--disable-dev-shm-usage","--window-size=1920,1080"]},"platformName": "linux"}
}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[ImmutableEventData{name=Driver service created session, attributes={downstream.dialect="W3C", driver.response="(Response: SessionID: 2945f8180331255e70d350e8d06dbbf1, State: success, Value: {acceptInsecureCerts=false, browserName=chrome, browserVersion=131.0.6778.204, chrome={chromedriverVersion=131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs/branch-heads/6778_155@{#7}), userDataDir=/tmp/.org.chromium.Chromium.hcej2l}, fedcm:accounts=true, goog:chromeOptions={debuggerAddress=localhost:33887}, networkConnectionEnabled=false, pageLoadStrategy=normal, platformName=linux, proxy=Proxy(), setWindowRect=true, strictFileInteractability=false, timeouts={implicit=0, pageLoad=300000, script=30000}, unhandledPromptBehavior=dismiss and notify, webauthn:extension:credBlob=true, webauthn:extension:largeBlob=true, webauthn:extension:minPinLength=true, webauthn:extension:prf=true, webauthn:virtualAuthenticators=true})", driver.url="http://localhost:22314", logger="org.openqa.selenium.grid.node.config.DriverServiceSessionFactory", session.capabilities="{"browserName": "chrome","goog:chromeOptions": {"args": ["--headless","--disable-gpu","--no-sandbox","--disable-dev-shm-usage","--window-size=1920,1080"]},"platformName": "linux"}
", upstream.dialect="W3C"}, epochNanos=1735189662879286773, totalAttributeCount=6}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.883 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "da12c2ed49dd098f99a53ebda4ba2bc8","eventTime": 1735189662879286773,"eventName": "Driver service created session","attributes": {"downstream.dialect": "W3C","driver.response": "(Response: SessionID: 2945f8180331255e70d350e8d06dbbf1, State: success, Value: {acceptInsecureCerts=false, browserName=chrome, browserVersion=131.0.6778.204, chrome={chromedriverVersion=131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs\u002fbranch-heads\u002f6778_155@{#7}), userDataDir=\u002ftmp\u002f.org.chromium.Chromium.hcej2l}, fedcm:accounts=true, goog:chromeOptions={debuggerAddress=localhost:33887}, networkConnectionEnabled=false, pageLoadStrategy=normal, platformName=linux, proxy=Proxy(), setWindowRect=true, strictFileInteractability=false, timeouts={implicit=0, pageLoad=300000, script=30000}, unhandledPromptBehavior=dismiss and notify, webauthn:extension:credBlob=true, webauthn:extension:largeBlob=true, webauthn:extension:minPinLength=true, webauthn:extension:prf=true, webauthn:virtualAuthenticators=true})","driver.url": "http:\u002f\u002flocalhost:22314","logger": "org.openqa.selenium.grid.node.config.DriverServiceSessionFactory","session.capabilities": "{\"browserName\": \"chrome\",\"goog:chromeOptions\": {\"args\": [\"--headless\",\"--disable-gpu\",\"--no-sandbox\",\"--disable-dev-shm-usage\",\"--window-size=1920,1080\"]},\"platformName\": \"linux\"}\n","upstream.dialect": "W3C"}}

05:07:42.886 INFO [LocalNode.newSession] - Session created by the Node. Id: 2945f8180331255e70d350e8d06dbbf1, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.204, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33887}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:bidiEnabled: false, se:cdp: ws://172.16.4.2:4444/sessio..., se:cdpVersion: 131.0.6778.204, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
05:07:42.889 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=92861734197f84cd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=5fd6a6cf62b0d24c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.new_session, kind=INTERNAL, startEpochNanos=1735189662248070072, endEpochNanos=1735189662888870632, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, session.capabilities={"acceptInsecureCerts": false,"browserName": "chrome","browserVersion": "131.0.6778.204","chrome": {"chromedriverVersion": "131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs\u002fbranch-heads\u002f6778_155@{#7})","userDataDir": "\u002ftmp\u002f.org.chromium.Chromium.hcej2l"},"fedcm:accounts": true,"goog:chromeOptions": {"debuggerAddress": "localhost:33887"},"networkConnectionEnabled": false,"pageLoadStrategy": "normal","platformName": "linux","proxy": {},"se:cdp": "http:\u002f\u002flocalhost:33887","se:cdpVersion": "131.0.6778.204","setWindowRect": true,"strictFileInteractability": false,"timeouts": {"implicit": 0,"pageLoad": 300000,"script": 30000},"unhandledPromptBehavior": "dismiss and notify","webauthn:extension:credBlob": true,"webauthn:extension:largeBlob": true,"webauthn:extension:minPinLength": true,"webauthn:extension:prf": true,"webauthn:virtualAuthenticators": true}
, downstream.dialect=W3C, current.session.count=0, session.uri=http://localhost:22314, upstream.dialect=W3C}, capacity=128, totalAddedValues=6}, totalAttributeCount=6, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.889 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=137876f2f007fe8c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=5fd6a6cf62b0d24c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=local_sessionmap.add, kind=INTERNAL, startEpochNanos=1735189662889210486, endEpochNanos=1735189662889308358, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[ImmutableEventData{name=Added session into local session map, attributes={logger="org.openqa.selenium.grid.sessionmap.local.LocalSessionMap", session.id="2945f8180331255e70d350e8d06dbbf1"}, epochNanos=1735189662889299031, totalAttributeCount=2}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.890 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "da12c2ed49dd098f99a53ebda4ba2bc8","eventTime": 1735189662889299031,"eventName": "Added session into local session map","attributes": {"logger": "org.openqa.selenium.grid.sessionmap.local.LocalSessionMap","session.id": "2945f8180331255e70d350e8d06dbbf1"}}

05:07:42.892 INFO [LocalDistributor.newSession] - Session created by the Distributor. Id: 2945f8180331255e70d350e8d06dbbf1 
 Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.204, chrome: {chromedriverVersion: 131.0.6778.204 (52183f9e99a..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33887}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:bidiEnabled: false, se:cdp: ws://172.16.4.2:4444/sessio..., se:cdpVersion: 131.0.6778.204, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
05:07:42.892 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=5fd6a6cf62b0d24c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=89734da288160e1c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=distributor.new_session, kind=INTERNAL, startEpochNanos=1735189662241324314, endEpochNanos=1735189662892668733, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, session.capabilities={"acceptInsecureCerts": false,"browserName": "chrome","browserVersion": "131.0.6778.204","chrome": {"chromedriverVersion": "131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs\u002fbranch-heads\u002f6778_155@{#7})","userDataDir": "\u002ftmp\u002f.org.chromium.Chromium.hcej2l"},"fedcm:accounts": true,"goog:chromeOptions": {"debuggerAddress": "localhost:33887"},"networkConnectionEnabled": false,"pageLoadStrategy": "normal","platformName": "linux","proxy": {},"se:bidiEnabled": false,"se:cdp": "ws:\u002f\u002f172.16.4.2:4444\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002fse\u002fcdp","se:cdpVersion": "131.0.6778.204","setWindowRect": true,"strictFileInteractability": false,"timeouts": {"implicit": 0,"pageLoad": 300000,"script": 30000},"unhandledPromptBehavior": "dismiss and notify","webauthn:extension:credBlob": true,"webauthn:extension:largeBlob": true,"webauthn:extension:minPinLength": true,"webauthn:extension:prf": true,"webauthn:virtualAuthenticators": true}
, session.uri=http://172.16.4.2:4444}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[ImmutableEventData{name=Session request received by the Distributor, attributes={logger="org.openqa.selenium.grid.distributor.local.LocalDistributor", request.payload="[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --disable-gpu, --no-sandbox, --disable-dev-shm-usage, --window-size=1920,1080]}}]"}, epochNanos=1735189662241614045, totalAttributeCount=2}, ImmutableEventData{name=Session created by the Distributor, attributes={logger="org.openqa.selenium.grid.distributor.local.LocalDistributor", request.payload="[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --disable-gpu, --no-sandbox, --disable-dev-shm-usage, --window-size=1920,1080]}}]", session.capabilities="{"acceptInsecureCerts": false,"browserName": "chrome","browserVersion": "131.0.6778.204","chrome": {"chromedriverVersion": "131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs\u002fbranch-heads\u002f6778_155@{#7})","userDataDir": "\u002ftmp\u002f.org.chromium.Chromium.hcej2l"},"fedcm:accounts": true,"goog:chromeOptions": {"debuggerAddress": "localhost:33887"},"networkConnectionEnabled": false,"pageLoadStrategy": "normal","platformName": "linux","proxy": {},"se:bidiEnabled": false,"se:cdp": "ws:\u002f\u002f172.16.4.2:4444\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002fse\u002fcdp","se:cdpVersion": "131.0.6778.204","setWindowRect": true,"strictFileInteractability": false,"timeouts": {"implicit": 0,"pageLoad": 300000,"script": 30000},"unhandledPromptBehavior": "dismiss and notify","webauthn:extension:credBlob": true,"webauthn:extension:largeBlob": true,"webauthn:extension:minPinLength": true,"webauthn:extension:prf": true,"webauthn:virtualAuthenticators": true}
", session.id="2945f8180331255e70d350e8d06dbbf1", session.uri="http://172.16.4.2:4444"}, epochNanos=1735189662892282974, totalAttributeCount=5}], totalRecordedEvents=2, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.893 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "da12c2ed49dd098f99a53ebda4ba2bc8","eventTime": 1735189662241614045,"eventName": "Session request received by the Distributor","attributes": {"logger": "org.openqa.selenium.grid.distributor.local.LocalDistributor","request.payload": "[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --disable-gpu, --no-sandbox, --disable-dev-shm-usage, --window-size=1920,1080]}}]"}}

05:07:42.894 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "da12c2ed49dd098f99a53ebda4ba2bc8","eventTime": 1735189662892282974,"eventName": "Session created by the Distributor","attributes": {"logger": "org.openqa.selenium.grid.distributor.local.LocalDistributor","request.payload": "[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --disable-gpu, --no-sandbox, --disable-dev-shm-usage, --window-size=1920,1080]}}]","session.capabilities": "{\"acceptInsecureCerts\": false,\"browserName\": \"chrome\",\"browserVersion\": \"131.0.6778.204\",\"chrome\": {\"chromedriverVersion\": \"131.0.6778.204 (52183f9e99a61056f9b78535f53d256f1516f2a0-refs\\u002fbranch-heads\\u002f6778_155@{#7})\",\"userDataDir\": \"\\u002ftmp\\u002f.org.chromium.Chromium.hcej2l\"},\"fedcm:accounts\": true,\"goog:chromeOptions\": {\"debuggerAddress\": \"localhost:33887\"},\"networkConnectionEnabled\": false,\"pageLoadStrategy\": \"normal\",\"platformName\": \"linux\",\"proxy\": {},\"se:bidiEnabled\": false,\"se:cdp\": \"ws:\\u002f\\u002f172.16.4.2:4444\\u002fsession\\u002f2945f8180331255e70d350e8d06dbbf1\\u002fse\\u002fcdp\",\"se:cdpVersion\": \"131.0.6778.204\",\"setWindowRect\": true,\"strictFileInteractability\": false,\"timeouts\": {\"implicit\": 0,\"pageLoad\": 300000,\"script\": 30000},\"unhandledPromptBehavior\": \"dismiss and notify\",\"webauthn:extension:credBlob\": true,\"webauthn:extension:largeBlob\": true,\"webauthn:extension:minPinLength\": true,\"webauthn:extension:prf\": true,\"webauthn:virtualAuthenticators\": true}\n","session.id": "2945f8180331255e70d350e8d06dbbf1","session.uri": "http:\u002f\u002f172.16.4.2:4444"}}

05:07:42.894 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e449e82a6c120d57, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e42bc706cdba6f2a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=sessionqueue.completed, kind=INTERNAL, startEpochNanos=1735189662894000000, endEpochNanos=1735189662894253183, attributes={}, totalAttributeCount=0, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.894 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=1054d29a66ed6b52, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e42bc706cdba6f2a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=sessionqueue.add_to_queue, kind=INTERNAL, startEpochNanos=1735189662228000000, endEpochNanos=1735189662893658698, attributes={}, totalAttributeCount=0, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.894 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=89734da288160e1c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e42bc706cdba6f2a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=distributor.poll_queue, kind=INTERNAL, startEpochNanos=1735189662239000000, endEpochNanos=1735189662894415110, attributes=AttributesMap{data={request.id=b41d354b-414c-4403-8891-f948ec0226a5}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:42.894 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=da12c2ed49dd098f99a53ebda4ba2bc8, spanId=e42bc706cdba6f2a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=session_queue, kind=INTERNAL, startEpochNanos=1735189662200000000, endEpochNanos=1735189662894600285, attributes=AttributesMap{data={http.method=POST, random.key=9bae8133-e264-4886-a17e-1a659cf9cbbf, span.kind=server, http.target=/session, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue", http.host="localhost:4444", http.method="POST", http.request_content_length="378", http.scheme="HTTP", http.status_code=200, http.target="/session"}, epochNanos=1735189662894590527, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:42.895 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "da12c2ed49dd098f99a53ebda4ba2bc8","eventTime": 1735189662894590527,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "378","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession"}}

05:07:42.899 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 33
05:07:42.900 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 33
05:07:42.900 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 33, cap: 33/33, unwrapped: PooledUnsafeDirectByteBuf(ridx: 217, widx: 217, cap: 2048)), decoderResult: success)
05:07:42.900 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 33, widx: 33, cap: 33/33, unwrapped: PooledUnsafeDirectByteBuf(ridx: 217, widx: 217, cap: 2048)), decoderResult: success)
05:07:42.903 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=794dc62e5f5730ebc1f7920ced82c995,spanId=77f6ac6fa4b95d0b} at org.openqa.selenium.grid.router.HandleSession:178
05:07:42.907 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=5d309678c46226fe, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=77f6ac6fa4b95d0b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189662905000000, endEpochNanos=0}}, span id=5d309678c46226fe, trace id=794dc62e5f5730ebc1f7920ced82c995} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=8283b5227fcb25ff, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=77f6ac6fa4b95d0b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=c469c2a0-3157-4aae-9c1c-91d710a9b01b}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189662907000000, endEpochNanos=0}}, span id=8283b5227fcb25ff, trace id=794dc62e5f5730ebc1f7920ced82c995}
05:07:42.907 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=794dc62e5f5730ebc1f7920ced82c995,spanId=8283b5227fcb25ff} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:42.908 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:42.909 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [578ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST
05:07:42.909 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [579ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST,
	 proxy=null
05:07:42.909 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [579ms] HttpClientImpl(1) next timeout: 300000
05:07:42.910 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [579ms] Http2ClientImpl not found in connection pool
05:07:42.910 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [579ms] HttpClientImpl(1) next expired: 1199090
05:07:42.910 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [579ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.910 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [579ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:42.910 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [579ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:42.910 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [579ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:42.910 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [580ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:42.910 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [580ms] Exchange checkFor407: all clear
05:07:42.910 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [580ms] Http1Exchange Sending headers only
05:07:42.911 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@111d9b2d queue.isEmpty: true
05:07:42.911 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@111d9b2d, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:42.911 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.911 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.911 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.911 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [580ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.911 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [580ms] Http1Exchange response created in advance
05:07:42.911 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [580ms] Http1Exchange SocketTube(1) connecting flows
05:07:42.911 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [580ms] SocketTube(1) connecting flows
05:07:42.911 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [580ms] SocketTube(1) read publisher got subscriber
05:07:42.911 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [581ms] SocketTube(1) registering subscribe event
05:07:42.911 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [581ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.911 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [581ms] SocketTube(1) subscribe event raised
05:07:42.911 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [581ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:42.912 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [581ms] SocketTube(1) subscribed for writing
05:07:42.911 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [581ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@75d2bab6
05:07:42.912 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [581ms] SocketTube(1) write: resetting demand to 0
05:07:42.912 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [581ms] SocketTube(1) write: registering startSubscription event
05:07:42.912 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [581ms] SocketTube(1) read demand reset to 0
05:07:42.912 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [581ms] Http1Exchange requestAction.headers
05:07:42.912 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [581ms] SocketTube(1) calling onSubscribe
05:07:42.912 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [581ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:42.912 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [582ms] SocketTube(1) onSubscribe called
05:07:42.912 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [582ms] Http1Exchange setting outgoing with headers
05:07:42.912 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [582ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:42.912 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [582ms] SocketTube(1) pending subscriber subscribed
05:07:42.913 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [582ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:42.913 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [582ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:42.912 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [582ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=431 cap=431]], throwable=null]
05:07:42.913 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [582ms] SocketTube(1) got some demand for reading
05:07:42.913 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [582ms] SocketTube(1) resuming read event
05:07:42.913 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [582ms] HttpClientImpl(1) next timeout: 299996
05:07:42.913 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [583ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:42.913 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [582ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.913 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [583ms] HttpClientImpl(1) next expired: 0
05:07:42.914 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [583ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.914 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [583ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:42.914 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [583ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:42.914 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [583ms] SocketTube(1) write: starting subscription
05:07:42.914 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [583ms] SocketTube(1) write: offloading requestMore
05:07:42.914 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [583ms] HttpClientImpl(1) next timeout: 299995
05:07:42.914 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [583ms] SocketTube(1) write: requesting more...
05:07:42.914 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [583ms] HttpClientImpl(1) next expired: 0
05:07:42.914 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [584ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.914 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [584ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:42.914 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [584ms] HttpClientImpl(1) Next deadline is 3000
05:07:42.914 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [584ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:42.915 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [584ms] Http1Exchange initiating completion of headersSentCF
05:07:42.915 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [584ms] Exchange checkFor407: all clear
05:07:42.915 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [584ms] Exchange sendRequestBody
05:07:42.915 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [584ms] Http1Exchange sendBodyAsync
05:07:42.915 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [584ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:42.915 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [584ms] Http1Exchange requesting more request body from the subscriber
05:07:42.915 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [584ms] jdk.internal.net.http.Http1Request@6fbf8508 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@14f0f05e
05:07:42.915 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [584ms] jdk.internal.net.http.Http1Request@6fbf8508 onNext
05:07:42.915 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [584ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=33 cap=16384]], throwable=null]
05:07:42.915 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [585ms] jdk.internal.net.http.Http1Request@6fbf8508 onComplete
05:07:42.915 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [585ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:42.915 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [585ms] Http1Publisher(SocketTube(1)) onNext with 431 bytes
05:07:42.915 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [585ms] SocketTube(1) trying to write: 431
05:07:42.916 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [585ms] SocketTube(1) wrote: 431
05:07:42.916 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [585ms] SocketTube(1) write: requesting more...
05:07:42.916 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [585ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.916 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [585ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.916 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [585ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.916 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [585ms] Http1Exchange requesting more request body from the subscriber
05:07:42.916 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [585ms] jdk.internal.net.http.Http1Request@6fbf8508 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@14f0f05e
05:07:42.916 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [585ms] Http1Publisher(SocketTube(1)) onNext with 33 bytes
05:07:42.916 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [585ms] SocketTube(1) trying to write: 33
05:07:42.916 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [586ms] SocketTube(1) wrote: 33
05:07:42.916 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [586ms] SocketTube(1) write: requesting more...
05:07:42.916 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [586ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:42.916 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [586ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.916 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [586ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:42.917 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [586ms] Http1Exchange initiating completion of bodySentCF
05:07:42.917 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [586ms] Http1Exchange sendBodyAsync completed successfully
05:07:42.917 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [586ms] Http1Exchange reading headers
05:07:42.917 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [586ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:42.917 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [586ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) First time around
05:07:42.917 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [586ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:42.917 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [586ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@3bdce423
05:07:42.917 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [586ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.009 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [678ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.009 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [679ms] SocketTube(1) read bytes: 122
05:07:43.010 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [679ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.010 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [679ms] SocketTube(1) resuming read event
05:07:43.010 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [679ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@111d9b2d
05:07:43.010 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [679ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.010 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [679ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.010 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [679ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.010 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [679ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@111d9b2d
05:07:43.010 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [680ms] HttpClientImpl(1) next timeout: 299899
05:07:43.010 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [680ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.010 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [680ms] HttpClientImpl(1) next expired: 0
05:07:43.010 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [680ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.010 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [680ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.010 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [680ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@111d9b2d
05:07:43.011 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [680ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.011 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [680ms] Http1Exchange getResponseAsync completed successfully
05:07:43.011 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [680ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.011 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [680ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.011 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [680ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@46e5c486/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5584be04 queue.isEmpty: false
05:07:43.011 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [680ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.011 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [681ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.011 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [681ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@46e5c486/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5584be04, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.011 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [681ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@46e5c486/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5584be04
05:07:43.011 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [681ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.011 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [681ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@46e5c486/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5584be04
05:07:43.012 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [681ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.012 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [681ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.012 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [681ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.012 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [681ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.012 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [681ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.012 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [681ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.012 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [681ms] SocketTube(1) connecting flows
05:07:43.012 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [681ms] SocketTube(1) read publisher got subscriber
05:07:43.012 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [681ms] SocketTube(1) registering subscribe event
05:07:43.012 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [681ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.012 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [681ms] SocketTube(1) subscribe event raised
05:07:43.012 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [682ms] SocketTube(1) subscribed for writing
05:07:43.012 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [682ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.012 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [682ms] SocketTube(1) write: resetting demand to 0
05:07:43.012 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [682ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.013 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [682ms] SocketTube(1) read demand reset to 0
05:07:43.012 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [682ms] SocketTube(1) write: registering startSubscription event
05:07:43.013 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [682ms] SocketTube(1) calling onSubscribe
05:07:43.013 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [682ms] SocketTube(1) got some demand for reading
05:07:43.013 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [682ms] SocketTube(1) resuming read event
05:07:43.013 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [682ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.013 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [682ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.013 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/url in 105ms
05:07:43.013 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [683ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.013 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [683ms] SocketTube(1) onSubscribe called
05:07:43.013 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=2f6dc88fe5b96e05, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=8283b5227fcb25ff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189662908000000, endEpochNanos=1735189663013139721, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.013 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [683ms] Http1Response(id=2, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.014 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [683ms] SocketTube(1) pending subscriber subscribed
05:07:43.014 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [683ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.014 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [683ms] HttpClientImpl(1) next timeout: 0
05:07:43.014 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=ced2bdb20a481192, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=8283b5227fcb25ff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189662908000000, endEpochNanos=1735189663013926178, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.014 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [683ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.014 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [683ms] HttpClientImpl(1) next expired: 1199986
05:07:43.014 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=8283b5227fcb25ff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=77f6ac6fa4b95d0b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189662907000000, endEpochNanos=1735189663014368597, attributes=AttributesMap{data={http.method=POST, random.key=c469c2a0-3157-4aae-9c1c-91d710a9b01b, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="33", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189663014359961, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.014 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [684ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.015 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [684ms] SocketTube(1) write: starting subscription
05:07:43.015 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [684ms] SocketTube(1) write: offloading requestMore
05:07:43.015 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [684ms] HttpClientImpl(1) next timeout: 0
05:07:43.015 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [684ms] HttpClientImpl(1) next expired: 1199985
05:07:43.015 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [684ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.015 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [684ms] SocketTube(1) write: requesting more...
05:07:43.015 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [684ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.015 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "794dc62e5f5730ebc1f7920ced82c995","eventTime": 1735189663014359961,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "33","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:43.015 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=5d309678c46226fe, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=77f6ac6fa4b95d0b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189662905000000, endEpochNanos=1735189663015691112, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.015 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=794dc62e5f5730ebc1f7920ced82c995, spanId=77f6ac6fa4b95d0b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189662902000000, endEpochNanos=1735189663015253339, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.018 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.018 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.018 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 1024)), decoderResult: success)
05:07:43.018 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 44, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 1024)), decoderResult: success)
05:07:43.020 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=73730f69d6051792d02ddedcea9bdd33,spanId=f56e52615bbefd1f} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.022 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.023 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [692ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.023 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [692ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.023 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [692ms] HttpClientImpl(1) next timeout: 300000
05:07:43.023 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [692ms] Http2ClientImpl not found in connection pool
05:07:43.023 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [693ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.023 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [693ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.023 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [693ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.023 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [693ms] HttpClientImpl(1) next expired: 1199977
05:07:43.024 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [693ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.024 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [693ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.024 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [693ms] Exchange checkFor407: all clear
05:07:43.024 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [693ms] Http1Exchange Sending headers only
05:07:43.024 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [693ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@1aa1ef66 queue.isEmpty: true
05:07:43.024 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [693ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@1aa1ef66, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.024 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [693ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.024 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [693ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.024 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [694ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.024 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [694ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.024 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [694ms] Http1Exchange response created in advance
05:07:43.024 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [694ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.024 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [694ms] SocketTube(1) connecting flows
05:07:43.024 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [694ms] SocketTube(1) read publisher got subscriber
05:07:43.024 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [694ms] SocketTube(1) registering subscribe event
05:07:43.024 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [694ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [694ms] SocketTube(1) subscribe event raised
05:07:43.025 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [694ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.025 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [694ms] SocketTube(1) subscribed for writing
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [694ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@a93792b
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [694ms] SocketTube(1) read demand reset to 0
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [694ms] SocketTube(1) calling onSubscribe
05:07:43.025 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [694ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.025 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [694ms] SocketTube(1) write: resetting demand to 0
05:07:43.025 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [694ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [694ms] SocketTube(1) onSubscribe called
05:07:43.025 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [695ms] SocketTube(1) pending subscriber subscribed
05:07:43.025 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [695ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.025 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [695ms] SocketTube(1) write: registering startSubscription event
05:07:43.026 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [695ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.025 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [695ms] HttpClientImpl(1) next timeout: 299998
05:07:43.026 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [695ms] SocketTube(1) got some demand for reading
05:07:43.026 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [695ms] Http1Exchange requestAction.headers
05:07:43.026 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [695ms] SocketTube(1) resuming read event
05:07:43.026 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [695ms] HttpClientImpl(1) next expired: 0
05:07:43.026 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [695ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.026 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [695ms] Http1Exchange setting outgoing with headers
05:07:43.026 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [696ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.026 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [695ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.026 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [696ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.026 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [696ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.027 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [696ms] SocketTube(1) write: starting subscription
05:07:43.026 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [696ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.027 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [696ms] SocketTube(1) write: offloading requestMore
05:07:43.027 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [696ms] SocketTube(1) write: requesting more...
05:07:43.027 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [696ms] HttpClientImpl(1) next timeout: 299996
05:07:43.027 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [696ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.027 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [696ms] HttpClientImpl(1) next expired: 0
05:07:43.027 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [696ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.027 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [697ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.027 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [697ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.027 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [697ms] Http1Exchange initiating completion of headersSentCF
05:07:43.027 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [697ms] Exchange checkFor407: all clear
05:07:43.027 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [697ms] Exchange sendRequestBody
05:07:43.027 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [697ms] Http1Exchange sendBodyAsync
05:07:43.028 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [697ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.028 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [697ms] Http1Exchange requesting more request body from the subscriber
05:07:43.028 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [697ms] jdk.internal.net.http.Http1Request@20c3d9b Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7208d940
05:07:43.028 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [697ms] jdk.internal.net.http.Http1Request@20c3d9b onNext
05:07:43.028 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [697ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=44 cap=16384]], throwable=null]
05:07:43.028 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [697ms] jdk.internal.net.http.Http1Request@20c3d9b onComplete
05:07:43.028 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [697ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.028 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [697ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.028 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [697ms] SocketTube(1) trying to write: 460
05:07:43.028 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [698ms] SocketTube(1) wrote: 460
05:07:43.028 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [698ms] SocketTube(1) write: requesting more...
05:07:43.028 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [698ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.028 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [698ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.028 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [698ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.029 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [698ms] Http1Exchange requesting more request body from the subscriber
05:07:43.029 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [698ms] jdk.internal.net.http.Http1Request@20c3d9b Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7208d940
05:07:43.029 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [698ms] Http1Publisher(SocketTube(1)) onNext with 44 bytes
05:07:43.029 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [698ms] SocketTube(1) trying to write: 44
05:07:43.029 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [698ms] SocketTube(1) wrote: 44
05:07:43.029 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [698ms] SocketTube(1) write: requesting more...
05:07:43.029 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [698ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.029 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [698ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.029 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [698ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.029 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [698ms] Http1Exchange initiating completion of bodySentCF
05:07:43.029 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [698ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.029 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [699ms] Http1Exchange reading headers
05:07:43.029 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [699ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.029 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [699ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.029 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [699ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.029 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [699ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@437e208d
05:07:43.029 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [699ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.040 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [709ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.040 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [709ms] SocketTube(1) read bytes: 234
05:07:43.040 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [709ms] Http1AsyncReceiver(SocketTube(1)) Putting 234 bytes into the queue
05:07:43.040 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [709ms] SocketTube(1) resuming read event
05:07:43.040 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [709ms] Http1AsyncReceiver(SocketTube(1)) Got 234 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@1aa1ef66
05:07:43.040 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [710ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.040 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [709ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.040 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [710ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 234 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@1aa1ef66
05:07:43.040 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [710ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.040 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [710ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Sending 234/234 bytes to header parser
05:07:43.041 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [710ms] HttpClientImpl(1) next timeout: 299983
05:07:43.041 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [710ms] HttpClientImpl(1) next expired: 0
05:07:43.041 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [710ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.041 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [710ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.041 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [710ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@1aa1ef66
05:07:43.041 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [710ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.041 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [710ms] Http1Exchange getResponseAsync completed successfully
05:07:43.041 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [711ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.041 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [711ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.041 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@56b12d5b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62473c14 queue.isEmpty: false
05:07:43.042 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 125
05:07:43.042 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [711ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=125, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.042 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@56b12d5b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62473c14, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.042 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) Got 125 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@56b12d5b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62473c14
05:07:43.042 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.042 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [711ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 125 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@56b12d5b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62473c14
05:07:43.042 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [711ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Sending 125/234 bytes to body parser
05:07:43.042 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [711ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 125 bytes (125 remaining / 125)
05:07:43.042 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [712ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.042 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [712ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.042 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [712ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.042 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [712ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.042 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [712ms] SocketTube(1) connecting flows
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [712ms] SocketTube(1) read publisher got subscriber
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [712ms] SocketTube(1) registering subscribe event
05:07:43.043 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [712ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.043 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [712ms] SocketTube(1) subscribed for writing
05:07:43.043 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [712ms] SocketTube(1) write: resetting demand to 0
05:07:43.043 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [712ms] SocketTube(1) write: registering startSubscription event
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [712ms] SocketTube(1) subscribe event raised
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.043 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [713ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) read demand reset to 0
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) calling onSubscribe
05:07:43.043 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [713ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.043 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 21ms
05:07:43.043 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) got some demand for reading
05:07:43.044 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) resuming read event
05:07:43.044 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [713ms] Http1Response(id=3, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.044 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [713ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.044 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.044 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) onSubscribe called
05:07:43.044 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=1f587fe564f0548c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=f56e52615bbefd1f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663022000000, endEpochNanos=1735189663043559538, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.044 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [713ms] SocketTube(1) pending subscriber subscribed
05:07:43.044 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [714ms] HttpClientImpl(1) next timeout: 0
05:07:43.044 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [713ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.044 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [714ms] HttpClientImpl(1) next expired: 1199956
05:07:43.045 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [714ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.044 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=d1eef41d7855b411, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=f56e52615bbefd1f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663022000000, endEpochNanos=1735189663044341395, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.045 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [714ms] SocketTube(1) write: starting subscription
05:07:43.044 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [714ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.045 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=9e2359b6cb74149c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=f56e52615bbefd1f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663021000000, endEpochNanos=1735189663045255114, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.045 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [714ms] SocketTube(1) write: offloading requestMore
05:07:43.045 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=73730f69d6051792d02ddedcea9bdd33, spanId=f56e52615bbefd1f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663020000000, endEpochNanos=1735189663044895167, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.045 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [714ms] SocketTube(1) write: requesting more...
05:07:43.045 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [714ms] HttpClientImpl(1) next timeout: 0
05:07:43.045 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [714ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.045 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [715ms] HttpClientImpl(1) next expired: 1199955
05:07:43.045 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [715ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.048 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.048 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.048 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.048 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.050 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type into OpenTelemetrySpan{traceId=e9857bdbe6d062f8bf77029c809ebd49,spanId=976dbf67da98ebd6} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.051 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=5a4ca956071e9c77, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=976dbf67da98ebd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663050000000, endEpochNanos=0}}, span id=5a4ca956071e9c77, trace id=e9857bdbe6d062f8bf77029c809ebd49} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=f2796c05c98bd687, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=976dbf67da98ebd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=af4109e9-8432-48c1-bbbf-2dabb09b6780}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663050000000, endEpochNanos=0}}, span id=f2796c05c98bd687, trace id=e9857bdbe6d062f8bf77029c809ebd49}
05:07:43.051 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type into OpenTelemetrySpan{traceId=e9857bdbe6d062f8bf77029c809ebd49,spanId=f2796c05c98bd687} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.051 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type
05:07:43.052 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [721ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type GET
05:07:43.052 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [721ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type GET,
	 proxy=null
05:07:43.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [721ms] HttpClientImpl(1) next timeout: 300000
05:07:43.052 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [722ms] Http2ClientImpl not found in connection pool
05:07:43.052 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [722ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [722ms] HttpClientImpl(1) next expired: 1199948
05:07:43.052 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [722ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [722ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.052 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [722ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.053 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [722ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.053 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [722ms] Exchange checkFor407: all clear
05:07:43.053 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [722ms] Http1Exchange Sending headers only
05:07:43.053 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [722ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@330c07df queue.isEmpty: true
05:07:43.053 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [722ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@330c07df, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.053 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [722ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.053 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [722ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.053 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [722ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.053 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [723ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.053 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [723ms] Http1Exchange response created in advance
05:07:43.053 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [723ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.053 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [723ms] SocketTube(1) connecting flows
05:07:43.053 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [723ms] SocketTube(1) read publisher got subscriber
05:07:43.053 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [723ms] SocketTube(1) registering subscribe event
05:07:43.053 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [723ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.054 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [723ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [723ms] SocketTube(1) subscribe event raised
05:07:43.054 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [723ms] SocketTube(1) subscribed for writing
05:07:43.054 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [723ms] SocketTube(1) write: resetting demand to 0
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [723ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@38c560af
05:07:43.054 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [723ms] SocketTube(1) write: registering startSubscription event
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [723ms] SocketTube(1) read demand reset to 0
05:07:43.054 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [723ms] Http1Exchange requestAction.headers
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [724ms] SocketTube(1) calling onSubscribe
05:07:43.054 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [724ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [724ms] SocketTube(1) onSubscribe called
05:07:43.054 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [724ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.054 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [724ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.054 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [724ms] SocketTube(1) pending subscriber subscribed
05:07:43.055 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [724ms] Http1Exchange setting outgoing with headers
05:07:43.055 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [724ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.055 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [724ms] SocketTube(1) got some demand for reading
05:07:43.055 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [724ms] SocketTube(1) resuming read event
05:07:43.055 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [724ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=522 cap=522]], throwable=null]
05:07:43.055 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [724ms] HttpClientImpl(1) next timeout: 299997
05:07:43.055 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [725ms] HttpClientImpl(1) next expired: 0
05:07:43.055 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [725ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.055 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [724ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.055 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [724ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.055 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [725ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.055 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [725ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.056 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [725ms] SocketTube(1) write: starting subscription
05:07:43.056 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [725ms] SocketTube(1) write: offloading requestMore
05:07:43.056 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [725ms] HttpClientImpl(1) next timeout: 299996
05:07:43.056 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [725ms] SocketTube(1) write: requesting more...
05:07:43.056 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [725ms] HttpClientImpl(1) next expired: 0
05:07:43.056 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [725ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.056 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [725ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.056 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [725ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.056 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [725ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.056 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [726ms] Http1Exchange initiating completion of headersSentCF
05:07:43.056 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [726ms] Exchange checkFor407: all clear
05:07:43.056 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [726ms] Exchange sendRequestBody
05:07:43.056 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [726ms] Http1Exchange sendBodyAsync
05:07:43.056 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [726ms] Http1Exchange bodySubscriber is null
05:07:43.056 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [726ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.057 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [726ms] Http1Publisher(SocketTube(1)) onNext with 522 bytes
05:07:43.057 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [726ms] SocketTube(1) trying to write: 522
05:07:43.057 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [726ms] SocketTube(1) wrote: 522
05:07:43.057 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [726ms] SocketTube(1) write: requesting more...
05:07:43.057 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [726ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.057 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [726ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.057 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [726ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.057 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [726ms] Http1Exchange initiating completion of bodySentCF
05:07:43.057 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [726ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.057 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [726ms] Http1Exchange reading headers
05:07:43.057 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [727ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.057 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [727ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.057 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [727ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.057 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [727ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@37f40919
05:07:43.057 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [727ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.062 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [732ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.063 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [732ms] SocketTube(1) read bytes: 124
05:07:43.063 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [732ms] Http1AsyncReceiver(SocketTube(1)) Putting 124 bytes into the queue
05:07:43.063 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [732ms] SocketTube(1) resuming read event
05:07:43.063 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [732ms] Http1AsyncReceiver(SocketTube(1)) Got 124 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@330c07df
05:07:43.063 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [732ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.063 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [732ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.063 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [732ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.063 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [732ms] HttpClientImpl(1) next timeout: 299989
05:07:43.063 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [732ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 124 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@330c07df
05:07:43.063 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [733ms] HttpClientImpl(1) next expired: 0
05:07:43.063 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [733ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.063 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [733ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Sending 124/124 bytes to header parser
05:07:43.064 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [733ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.064 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [733ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@330c07df
05:07:43.064 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [733ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.064 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [733ms] Http1Exchange getResponseAsync completed successfully
05:07:43.064 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [733ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.064 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [733ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.064 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [733ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@17b947e0/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@44588837 queue.isEmpty: false
05:07:43.064 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 16
05:07:43.064 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [734ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=16, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.064 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@17b947e0/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@44588837, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.064 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) Got 16 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@17b947e0/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@44588837
05:07:43.064 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.064 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 16 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@17b947e0/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@44588837
05:07:43.064 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [734ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Sending 16/124 bytes to body parser
05:07:43.065 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [734ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 16 bytes (16 remaining / 16)
05:07:43.065 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [734ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.065 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [734ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.065 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [734ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.065 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [734ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.065 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [734ms] SocketTube(1) connecting flows
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [734ms] SocketTube(1) read publisher got subscriber
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [734ms] SocketTube(1) registering subscribe event
05:07:43.065 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [734ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [734ms] SocketTube(1) subscribe event raised
05:07:43.065 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [734ms] SocketTube(1) subscribed for writing
05:07:43.065 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [734ms] SocketTube(1) write: resetting demand to 0
05:07:43.065 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [735ms] SocketTube(1) write: registering startSubscription event
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [734ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.065 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [735ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [735ms] SocketTube(1) read demand reset to 0
05:07:43.065 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [735ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.065 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [735ms] SocketTube(1) calling onSubscribe
05:07:43.066 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [735ms] Http1Response(id=4, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.066 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type in 15ms
05:07:43.066 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [735ms] SocketTube(1) got some demand for reading
05:07:43.066 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=ed7e14bc28b0f5d0, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=f2796c05c98bd687, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663051000000, endEpochNanos=1735189663065412302, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.066 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [735ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.066 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [735ms] SocketTube(1) resuming read event
05:07:43.066 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=610d3c6033faad4d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=f2796c05c98bd687, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663051000000, endEpochNanos=1735189663065790708, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.066 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [735ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.066 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [735ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.066 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [736ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.066 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [736ms] SocketTube(1) onSubscribe called
05:07:43.066 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=f2796c05c98bd687, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=976dbf67da98ebd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663050000000, endEpochNanos=1735189663065764573, attributes=AttributesMap{data={http.method=GET, random.key=af4109e9-8432-48c1-bbbf-2dabb09b6780, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type"}, epochNanos=1735189663065756598, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.066 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [736ms] SocketTube(1) pending subscriber subscribed
05:07:43.066 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) next timeout: 0
05:07:43.066 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) next expired: 1199934
05:07:43.067 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.067 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [736ms] SocketTube(1) write: starting subscription
05:07:43.067 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [736ms] SocketTube(1) write: offloading requestMore
05:07:43.067 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [736ms] SocketTube(1) write: requesting more...
05:07:43.067 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [736ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.067 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) next timeout: 0
05:07:43.067 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) next expired: 1199933
05:07:43.067 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [736ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.067 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "e9857bdbe6d062f8bf77029c809ebd49","eventTime": 1735189663065756598,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8\u002fattribute\u002ftype"}}

05:07:43.067 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=5a4ca956071e9c77, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=976dbf67da98ebd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663050000000, endEpochNanos=1735189663067029862, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.067 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=e9857bdbe6d062f8bf77029c809ebd49, spanId=976dbf67da98ebd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663050000000, endEpochNanos=1735189663067649938, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.8/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.068 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.068 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.069 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 512)), decoderResult: success)
05:07:43.069 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 48, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 512)), decoderResult: success)
05:07:43.070 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=4ac877822d14703ab12b4def33cf3887,spanId=5de3ae726de772b6} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.071 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.072 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [741ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.072 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [741ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.072 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [741ms] HttpClientImpl(1) next timeout: 300000
05:07:43.072 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [741ms] Http2ClientImpl not found in connection pool
05:07:43.072 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [741ms] HttpClientImpl(1) next expired: 1199928
05:07:43.072 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [741ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.072 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [741ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.072 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [742ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.072 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [742ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.072 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [742ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.072 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [742ms] Exchange checkFor407: all clear
05:07:43.073 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [742ms] Http1Exchange Sending headers only
05:07:43.073 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@7eaebffb queue.isEmpty: true
05:07:43.073 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@7eaebffb, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.073 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.073 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.073 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.073 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [742ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.073 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [742ms] Http1Exchange response created in advance
05:07:43.073 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [742ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.073 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [742ms] SocketTube(1) connecting flows
05:07:43.073 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [742ms] SocketTube(1) read publisher got subscriber
05:07:43.073 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [742ms] SocketTube(1) registering subscribe event
05:07:43.073 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [742ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.073 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [742ms] SocketTube(1) subscribe event raised
05:07:43.073 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [743ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.073 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [743ms] SocketTube(1) subscribed for writing
05:07:43.073 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [743ms] SocketTube(1) write: resetting demand to 0
05:07:43.073 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [743ms] SocketTube(1) write: registering startSubscription event
05:07:43.073 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [743ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@6aff5269
05:07:43.074 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [743ms] SocketTube(1) read demand reset to 0
05:07:43.074 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [743ms] SocketTube(1) calling onSubscribe
05:07:43.073 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [743ms] Http1Exchange requestAction.headers
05:07:43.074 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [743ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.074 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [743ms] SocketTube(1) onSubscribe called
05:07:43.074 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [743ms] SocketTube(1) pending subscriber subscribed
05:07:43.074 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [743ms] Http1Exchange setting outgoing with headers
05:07:43.074 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [743ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.074 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [743ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.074 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [744ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.074 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [743ms] HttpClientImpl(1) next timeout: 299998
05:07:43.074 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [744ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.074 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [743ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.074 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [744ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.074 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [744ms] HttpClientImpl(1) next expired: 0
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [744ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.075 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [744ms] SocketTube(1) got some demand for reading
05:07:43.075 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [744ms] SocketTube(1) resuming read event
05:07:43.075 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [744ms] SocketTube(1) write: starting subscription
05:07:43.075 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [744ms] SocketTube(1) write: offloading requestMore
05:07:43.075 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [744ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [744ms] HttpClientImpl(1) next timeout: 299997
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [744ms] HttpClientImpl(1) next expired: 0
05:07:43.075 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [744ms] SocketTube(1) write: requesting more...
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [744ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.075 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [745ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.075 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [745ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.075 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [745ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [745ms] HttpClientImpl(1) next timeout: 299997
05:07:43.075 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [745ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.076 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [745ms] Http1Exchange initiating completion of headersSentCF
05:07:43.075 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [745ms] HttpClientImpl(1) next expired: 0
05:07:43.076 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [745ms] Exchange checkFor407: all clear
05:07:43.076 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [745ms] Exchange sendRequestBody
05:07:43.076 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [745ms] Http1Exchange sendBodyAsync
05:07:43.076 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [745ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.076 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [745ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.076 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [745ms] Http1Exchange requesting more request body from the subscriber
05:07:43.076 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [745ms] jdk.internal.net.http.Http1Request@23ec4cf0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@23f57189
05:07:43.076 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [745ms] jdk.internal.net.http.Http1Request@23ec4cf0 onNext
05:07:43.076 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [746ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=48 cap=16384]], throwable=null]
05:07:43.076 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [746ms] jdk.internal.net.http.Http1Request@23ec4cf0 onComplete
05:07:43.076 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [746ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.076 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [746ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.076 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [746ms] SocketTube(1) trying to write: 460
05:07:43.077 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [746ms] SocketTube(1) wrote: 460
05:07:43.077 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [746ms] SocketTube(1) write: requesting more...
05:07:43.077 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [746ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.077 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [746ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.077 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [746ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.077 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [746ms] Http1Exchange requesting more request body from the subscriber
05:07:43.077 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [746ms] jdk.internal.net.http.Http1Request@23ec4cf0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@23f57189
05:07:43.077 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [746ms] Http1Publisher(SocketTube(1)) onNext with 48 bytes
05:07:43.077 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [746ms] SocketTube(1) trying to write: 48
05:07:43.077 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [746ms] SocketTube(1) wrote: 48
05:07:43.077 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [746ms] SocketTube(1) write: requesting more...
05:07:43.077 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [747ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.077 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [747ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.077 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [747ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.077 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [747ms] Http1Exchange initiating completion of bodySentCF
05:07:43.077 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [747ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.077 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [747ms] Http1Exchange reading headers
05:07:43.077 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [747ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.077 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [747ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.077 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [747ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.078 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [747ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@645662d9
05:07:43.078 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [747ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.086 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [755ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.086 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [755ms] SocketTube(1) read bytes: 235
05:07:43.086 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [755ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.086 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [755ms] SocketTube(1) resuming read event
05:07:43.086 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [756ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.086 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [756ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@7eaebffb
05:07:43.086 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [756ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.086 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [756ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.086 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [756ms] HttpClientImpl(1) next timeout: 299986
05:07:43.087 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [756ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@7eaebffb
05:07:43.087 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [756ms] HttpClientImpl(1) next expired: 0
05:07:43.087 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [756ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.087 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [756ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.087 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [756ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.087 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [756ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@7eaebffb
05:07:43.087 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [756ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.087 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [756ms] Http1Exchange getResponseAsync completed successfully
05:07:43.087 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [757ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.087 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [757ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.087 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@6f0c58cf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@677d159e queue.isEmpty: false
05:07:43.088 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.088 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [757ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.088 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@6f0c58cf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@677d159e, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.088 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@6f0c58cf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@677d159e
05:07:43.088 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.088 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@6f0c58cf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@677d159e
05:07:43.088 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [757ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.088 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [757ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.088 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [757ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.088 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [757ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.088 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [757ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.088 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [757ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.088 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [758ms] SocketTube(1) connecting flows
05:07:43.088 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [758ms] SocketTube(1) read publisher got subscriber
05:07:43.088 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [758ms] SocketTube(1) registering subscribe event
05:07:43.088 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [758ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.088 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [758ms] SocketTube(1) subscribed for writing
05:07:43.088 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [758ms] SocketTube(1) write: resetting demand to 0
05:07:43.088 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [758ms] SocketTube(1) write: registering startSubscription event
05:07:43.088 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [758ms] SocketTube(1) subscribe event raised
05:07:43.089 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [758ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.089 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [758ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.089 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [758ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.089 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 18ms
05:07:43.089 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [758ms] Http1Response(id=5, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.089 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=861857a994ab4f20, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=5de3ae726de772b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663071000000, endEpochNanos=1735189663088777436, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.089 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [758ms] SocketTube(1) read demand reset to 0
05:07:43.089 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [758ms] SocketTube(1) calling onSubscribe
05:07:43.089 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [758ms] SocketTube(1) got some demand for reading
05:07:43.089 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) resuming read event
05:07:43.089 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [758ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.089 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [759ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.089 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [759ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.089 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=c56076c63fc58fd6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=5de3ae726de772b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663071000000, endEpochNanos=1735189663089151554, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.089 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.090 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) onSubscribe called
05:07:43.090 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) pending subscriber subscribed
05:07:43.090 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=bac19f682b81b98a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=5de3ae726de772b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663070000000, endEpochNanos=1735189663089357823, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [759ms] HttpClientImpl(1) next timeout: 0
05:07:43.090 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4ac877822d14703ab12b4def33cf3887, spanId=5de3ae726de772b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663070000000, endEpochNanos=1735189663089806009, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [759ms] HttpClientImpl(1) next expired: 1199910
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [759ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.090 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) write: starting subscription
05:07:43.090 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [759ms] SocketTube(1) write: offloading requestMore
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [760ms] HttpClientImpl(1) next timeout: 0
05:07:43.090 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [760ms] SocketTube(1) write: requesting more...
05:07:43.090 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [760ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [760ms] HttpClientImpl(1) next expired: 1199910
05:07:43.090 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [760ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.091 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.091 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.092 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.092 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.093 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type into OpenTelemetrySpan{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1,spanId=4214343d2ce570c7} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.094 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=31a830cd295715a5, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=4214343d2ce570c7, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663094000000, endEpochNanos=0}}, span id=31a830cd295715a5, trace id=db25622f2a1f2d1cf9e71da7b9e2b4c1} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=0ccfa0bef00a01a8, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=4214343d2ce570c7, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=e6cc510e-b70c-4916-8d8b-e0d1605756cc}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663094000000, endEpochNanos=0}}, span id=0ccfa0bef00a01a8, trace id=db25622f2a1f2d1cf9e71da7b9e2b4c1}
05:07:43.094 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type into OpenTelemetrySpan{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1,spanId=0ccfa0bef00a01a8} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.095 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type
05:07:43.095 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [764ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type GET
05:07:43.095 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [765ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type GET,
	 proxy=null
05:07:43.095 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [765ms] HttpClientImpl(1) next timeout: 300000
05:07:43.095 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [765ms] Http2ClientImpl not found in connection pool
05:07:43.095 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [765ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.095 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [765ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.096 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [765ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.095 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [765ms] HttpClientImpl(1) next expired: 1199905
05:07:43.096 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [765ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.096 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [765ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.096 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [765ms] Exchange checkFor407: all clear
05:07:43.096 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [765ms] Http1Exchange Sending headers only
05:07:43.096 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [765ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@71a0a0f8 queue.isEmpty: true
05:07:43.096 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [765ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@71a0a0f8, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.096 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [765ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.096 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [765ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.096 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [765ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.096 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [766ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.096 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [766ms] Http1Exchange response created in advance
05:07:43.096 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [766ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.096 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [766ms] SocketTube(1) connecting flows
05:07:43.096 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [766ms] SocketTube(1) read publisher got subscriber
05:07:43.096 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [766ms] SocketTube(1) registering subscribe event
05:07:43.096 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [766ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.096 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [766ms] SocketTube(1) subscribe event raised
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [766ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@a98428a
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [766ms] SocketTube(1) read demand reset to 0
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [766ms] SocketTube(1) calling onSubscribe
05:07:43.097 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [766ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.096 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [766ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.097 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [766ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.097 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [766ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.097 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [766ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [766ms] SocketTube(1) got some demand for reading
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [766ms] SocketTube(1) resuming read event
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [766ms] SocketTube(1) onSubscribe called
05:07:43.097 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [767ms] SocketTube(1) pending subscriber subscribed
05:07:43.097 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [767ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.097 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [766ms] SocketTube(1) subscribed for writing
05:07:43.097 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [767ms] SocketTube(1) write: resetting demand to 0
05:07:43.097 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) next timeout: 299998
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) next expired: 0
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.098 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [767ms] SocketTube(1) write: registering startSubscription event
05:07:43.098 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [767ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.098 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [767ms] Http1Exchange requestAction.headers
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) next timeout: 299997
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) next expired: 0
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [767ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.098 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [767ms] SocketTube(1) write: starting subscription
05:07:43.098 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [768ms] SocketTube(1) write: offloading requestMore
05:07:43.098 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [768ms] Http1Exchange setting outgoing with headers
05:07:43.098 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [768ms] SocketTube(1) write: requesting more...
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [768ms] HttpClientImpl(1) next timeout: 299997
05:07:43.098 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [768ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.099 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [768ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.098 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [768ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=523 cap=523]], throwable=null]
05:07:43.099 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [768ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.099 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [768ms] Http1Exchange initiating completion of headersSentCF
05:07:43.098 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [768ms] HttpClientImpl(1) next expired: 0
05:07:43.099 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [768ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.099 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [768ms] Exchange checkFor407: all clear
05:07:43.099 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [768ms] Exchange sendRequestBody
05:07:43.099 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [768ms] Http1Exchange sendBodyAsync
05:07:43.099 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [768ms] Http1Exchange bodySubscriber is null
05:07:43.099 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [768ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.099 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [769ms] Http1Publisher(SocketTube(1)) onNext with 523 bytes
05:07:43.099 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [769ms] SocketTube(1) trying to write: 523
05:07:43.099 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [769ms] SocketTube(1) wrote: 523
05:07:43.100 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [769ms] SocketTube(1) write: requesting more...
05:07:43.100 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [769ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.100 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [769ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.100 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [769ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.100 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [769ms] Http1Exchange initiating completion of bodySentCF
05:07:43.100 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [769ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.100 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [769ms] Http1Exchange reading headers
05:07:43.100 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [769ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.100 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [769ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.100 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [769ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.100 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [769ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@4d9b80e
05:07:43.100 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [769ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.105 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [775ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.105 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [775ms] SocketTube(1) read bytes: 124
05:07:43.106 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [775ms] Http1AsyncReceiver(SocketTube(1)) Putting 124 bytes into the queue
05:07:43.106 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [775ms] SocketTube(1) resuming read event
05:07:43.106 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [775ms] Http1AsyncReceiver(SocketTube(1)) Got 124 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@71a0a0f8
05:07:43.106 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [775ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.106 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [775ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.106 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [775ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.106 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [775ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 124 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@71a0a0f8
05:07:43.106 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [775ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Sending 124/124 bytes to header parser
05:07:43.106 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [775ms] HttpClientImpl(1) next timeout: 299989
05:07:43.106 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [775ms] HttpClientImpl(1) next expired: 0
05:07:43.106 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [775ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.106 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [775ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.106 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@71a0a0f8
05:07:43.106 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [776ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.106 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [776ms] Http1Exchange getResponseAsync completed successfully
05:07:43.106 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [776ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.107 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [776ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.107 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@a1e46e5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e21d37e queue.isEmpty: false
05:07:43.107 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 16
05:07:43.107 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [776ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=16, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.107 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@a1e46e5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e21d37e, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.107 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) Got 16 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@a1e46e5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e21d37e
05:07:43.107 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.107 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 16 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@a1e46e5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e21d37e
05:07:43.107 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [776ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Sending 16/124 bytes to body parser
05:07:43.107 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [776ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 16 bytes (16 remaining / 16)
05:07:43.107 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [776ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.107 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [776ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.107 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [776ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.107 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [776ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.107 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [777ms] SocketTube(1) connecting flows
05:07:43.107 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [777ms] SocketTube(1) read publisher got subscriber
05:07:43.107 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [777ms] SocketTube(1) registering subscribe event
05:07:43.107 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [777ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.107 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) subscribe event raised
05:07:43.107 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [777ms] SocketTube(1) subscribed for writing
05:07:43.107 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [777ms] SocketTube(1) write: resetting demand to 0
05:07:43.108 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [777ms] SocketTube(1) write: registering startSubscription event
05:07:43.107 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.108 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [777ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) read demand reset to 0
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) calling onSubscribe
05:07:43.108 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [777ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.108 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type in 13ms
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) got some demand for reading
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [777ms] SocketTube(1) resuming read event
05:07:43.108 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [777ms] Http1Response(id=6, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.108 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [777ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.108 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [778ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [778ms] SocketTube(1) onSubscribe called
05:07:43.108 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [778ms] SocketTube(1) pending subscriber subscribed
05:07:43.108 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=93a9e7be07d62f40, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=0ccfa0bef00a01a8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663095000000, endEpochNanos=1735189663108402629, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.108 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [778ms] HttpClientImpl(1) next timeout: 0
05:07:43.108 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [777ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.109 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=7a57ad27b1f876cd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=0ccfa0bef00a01a8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663094000000, endEpochNanos=1735189663108109537, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.109 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [778ms] HttpClientImpl(1) next expired: 1199892
05:07:43.109 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [778ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.109 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [778ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.109 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [778ms] SocketTube(1) write: starting subscription
05:07:43.109 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [778ms] SocketTube(1) write: offloading requestMore
05:07:43.109 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=0ccfa0bef00a01a8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=4214343d2ce570c7, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663094000000, endEpochNanos=1735189663108734443, attributes=AttributesMap{data={http.method=GET, random.key=e6cc510e-b70c-4916-8d8b-e0d1605756cc, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type"}, epochNanos=1735189663108725466, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.109 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [778ms] HttpClientImpl(1) next timeout: 0
05:07:43.109 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [778ms] SocketTube(1) write: requesting more...
05:07:43.109 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [779ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.109 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [778ms] HttpClientImpl(1) next expired: 1199891
05:07:43.109 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [779ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.110 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "db25622f2a1f2d1cf9e71da7b9e2b4c1","eventTime": 1735189663108725466,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10\u002fattribute\u002ftype"}}

05:07:43.110 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=31a830cd295715a5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=4214343d2ce570c7, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663094000000, endEpochNanos=1735189663110079140, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.110 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db25622f2a1f2d1cf9e71da7b9e2b4c1, spanId=4214343d2ce570c7, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663093000000, endEpochNanos=1735189663109538246, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.10/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.111 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 49
05:07:43.111 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 49
05:07:43.111 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 49, cap: 49/49, unwrapped: PooledUnsafeDirectByteBuf(ridx: 237, widx: 237, cap: 496)), decoderResult: success)
05:07:43.111 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 49, widx: 49, cap: 49/49, unwrapped: PooledUnsafeDirectByteBuf(ridx: 237, widx: 237, cap: 496)), decoderResult: success)
05:07:43.112 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=191bca47e42f1bca4d3ddc22ca0a265f,spanId=e156134d3a1f3f0d} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.113 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.114 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [783ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.114 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [783ms] HttpClientImpl(1) next timeout: 300000
05:07:43.114 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [783ms] HttpClientImpl(1) next expired: 1199886
05:07:43.114 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [784ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.114 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [783ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.114 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [784ms] Http2ClientImpl not found in connection pool
05:07:43.114 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [784ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.114 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [784ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.114 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [784ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.115 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [784ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.115 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [784ms] Exchange checkFor407: all clear
05:07:43.115 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [784ms] Http1Exchange Sending headers only
05:07:43.115 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@2f3847c queue.isEmpty: true
05:07:43.115 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@2f3847c, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.115 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.115 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.115 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.115 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [784ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.115 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [784ms] Http1Exchange response created in advance
05:07:43.115 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [784ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.115 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [784ms] SocketTube(1) connecting flows
05:07:43.115 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [784ms] SocketTube(1) read publisher got subscriber
05:07:43.115 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [785ms] SocketTube(1) registering subscribe event
05:07:43.115 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [785ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.115 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [785ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.115 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [785ms] SocketTube(1) subscribed for writing
05:07:43.115 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [785ms] SocketTube(1) write: resetting demand to 0
05:07:43.115 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [785ms] SocketTube(1) write: registering startSubscription event
05:07:43.116 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [785ms] Http1Exchange requestAction.headers
05:07:43.115 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) subscribe event raised
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@1b5328d3
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) read demand reset to 0
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) calling onSubscribe
05:07:43.116 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [785ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.116 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [785ms] Http1Exchange setting outgoing with headers
05:07:43.116 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [785ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) onSubscribe called
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [785ms] SocketTube(1) pending subscriber subscribed
05:07:43.116 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [785ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.116 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [786ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [786ms] SocketTube(1) got some demand for reading
05:07:43.116 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [786ms] SocketTube(1) resuming read event
05:07:43.116 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [785ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.116 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [786ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.116 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [786ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.116 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [785ms] HttpClientImpl(1) next timeout: 299998
05:07:43.116 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [786ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.117 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [786ms] HttpClientImpl(1) next expired: 0
05:07:43.117 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [786ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.117 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [786ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.117 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [786ms] SocketTube(1) write: starting subscription
05:07:43.117 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [786ms] SocketTube(1) write: offloading requestMore
05:07:43.117 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [786ms] HttpClientImpl(1) next timeout: 299997
05:07:43.117 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [786ms] HttpClientImpl(1) next expired: 0
05:07:43.117 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [786ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.117 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [786ms] SocketTube(1) write: requesting more...
05:07:43.117 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [787ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.117 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [787ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.117 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [787ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.117 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [787ms] Http1Exchange initiating completion of headersSentCF
05:07:43.117 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [787ms] Exchange checkFor407: all clear
05:07:43.117 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [787ms] Exchange sendRequestBody
05:07:43.118 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [787ms] Http1Exchange sendBodyAsync
05:07:43.118 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [787ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.118 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [787ms] Http1Exchange requesting more request body from the subscriber
05:07:43.118 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [787ms] jdk.internal.net.http.Http1Request@7a9855a0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7aa2c3a9
05:07:43.118 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [787ms] jdk.internal.net.http.Http1Request@7a9855a0 onNext
05:07:43.118 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [787ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=49 cap=16384]], throwable=null]
05:07:43.118 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [787ms] jdk.internal.net.http.Http1Request@7a9855a0 onComplete
05:07:43.118 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [787ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.118 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [787ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.118 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [787ms] SocketTube(1) trying to write: 460
05:07:43.118 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [787ms] SocketTube(1) wrote: 460
05:07:43.118 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [788ms] SocketTube(1) write: requesting more...
05:07:43.118 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [788ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.118 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [788ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.118 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [788ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.118 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [788ms] Http1Exchange requesting more request body from the subscriber
05:07:43.118 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [788ms] jdk.internal.net.http.Http1Request@7a9855a0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7aa2c3a9
05:07:43.118 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [788ms] Http1Publisher(SocketTube(1)) onNext with 49 bytes
05:07:43.118 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [788ms] SocketTube(1) trying to write: 49
05:07:43.119 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [788ms] SocketTube(1) wrote: 49
05:07:43.119 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [788ms] SocketTube(1) write: requesting more...
05:07:43.119 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [788ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.119 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [788ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.119 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [788ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.119 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [788ms] Http1Exchange initiating completion of bodySentCF
05:07:43.119 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [788ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.119 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [788ms] Http1Exchange reading headers
05:07:43.119 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [788ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.119 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [788ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.119 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [788ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.119 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [788ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@2b0cb391
05:07:43.119 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [788ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.128 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [797ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [797ms] SocketTube(1) read bytes: 235
05:07:43.128 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [797ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [797ms] SocketTube(1) resuming read event
05:07:43.128 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [797ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@2f3847c
05:07:43.128 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [797ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.128 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [797ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@2f3847c
05:07:43.128 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [797ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.128 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [798ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.128 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [798ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.128 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [798ms] HttpClientImpl(1) next timeout: 299986
05:07:43.128 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [798ms] HttpClientImpl(1) next expired: 0
05:07:43.128 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [798ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [798ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.129 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [798ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@2f3847c
05:07:43.129 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [798ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.129 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [798ms] Http1Exchange getResponseAsync completed successfully
05:07:43.129 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [798ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.129 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [798ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.129 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [798ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@354202e8/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@59912062 queue.isEmpty: false
05:07:43.129 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [798ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.129 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [799ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.129 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [799ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@354202e8/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@59912062, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.129 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [799ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@354202e8/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@59912062
05:07:43.129 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [799ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.129 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [799ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@354202e8/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@59912062
05:07:43.129 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [799ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.129 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [799ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.129 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [799ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.130 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [799ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.130 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [799ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.130 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [799ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.130 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [799ms] SocketTube(1) connecting flows
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [799ms] SocketTube(1) read publisher got subscriber
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [799ms] SocketTube(1) registering subscribe event
05:07:43.130 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [799ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [799ms] SocketTube(1) subscribe event raised
05:07:43.130 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [799ms] SocketTube(1) subscribed for writing
05:07:43.130 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [799ms] SocketTube(1) write: resetting demand to 0
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [799ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.130 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [799ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [799ms] SocketTube(1) read demand reset to 0
05:07:43.130 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [799ms] SocketTube(1) write: registering startSubscription event
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) calling onSubscribe
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) got some demand for reading
05:07:43.130 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) resuming read event
05:07:43.130 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [800ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.130 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [800ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.131 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 18ms
05:07:43.131 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [800ms] Http1Response(id=7, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.131 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=fe103bd59f751da9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=e156134d3a1f3f0d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663113000000, endEpochNanos=1735189663130357824, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.131 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.131 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) onSubscribe called
05:07:43.131 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [800ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.131 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=9a41fe3c18b6323b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=e156134d3a1f3f0d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663113000000, endEpochNanos=1735189663130674324, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.131 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [800ms] SocketTube(1) pending subscriber subscribed
05:07:43.131 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [800ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.131 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=b1f4c82322c36ed9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=e156134d3a1f3f0d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663113000000, endEpochNanos=1735189663131578600, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.131 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) next timeout: 0
05:07:43.131 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=191bca47e42f1bca4d3ddc22ca0a265f, spanId=e156134d3a1f3f0d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663112000000, endEpochNanos=1735189663131072781, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.131 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) next expired: 1199869
05:07:43.132 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.132 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [801ms] SocketTube(1) write: starting subscription
05:07:43.132 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [801ms] SocketTube(1) write: offloading requestMore
05:07:43.132 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) next timeout: 0
05:07:43.132 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [801ms] SocketTube(1) write: requesting more...
05:07:43.132 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) next expired: 1199868
05:07:43.132 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [801ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.132 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [801ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.132 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.132 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.133 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.133 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.134 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type into OpenTelemetrySpan{traceId=68a77f8991c5c53469de7367510f8488,spanId=d9d6b42f58a1e401} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.135 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=68a77f8991c5c53469de7367510f8488, spanId=61c25dcf63808f78, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=d9d6b42f58a1e401, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663134000000, endEpochNanos=0}}, span id=61c25dcf63808f78, trace id=68a77f8991c5c53469de7367510f8488} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=68a77f8991c5c53469de7367510f8488, spanId=fe5c3f766bdd4e32, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=d9d6b42f58a1e401, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=fbcdf85f-e565-46b1-9c2b-7b62e22b80ca}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663135000000, endEpochNanos=0}}, span id=fe5c3f766bdd4e32, trace id=68a77f8991c5c53469de7367510f8488}
05:07:43.135 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type into OpenTelemetrySpan{traceId=68a77f8991c5c53469de7367510f8488,spanId=fe5c3f766bdd4e32} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.136 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type
05:07:43.136 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [805ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type GET
05:07:43.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [806ms] HttpClientImpl(1) next timeout: 300000
05:07:43.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [806ms] HttpClientImpl(1) next expired: 1199864
05:07:43.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [806ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.136 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [806ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type GET,
	 proxy=null
05:07:43.137 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [806ms] Http2ClientImpl not found in connection pool
05:07:43.137 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [806ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.137 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [806ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.137 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [806ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.137 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [806ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.137 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [806ms] Exchange checkFor407: all clear
05:07:43.137 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [806ms] Http1Exchange Sending headers only
05:07:43.137 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [806ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@2f42ec3c queue.isEmpty: true
05:07:43.137 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [807ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@2f42ec3c, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.137 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [807ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.138 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [807ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.138 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [807ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.138 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [807ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.138 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [807ms] Http1Exchange response created in advance
05:07:43.138 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [807ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.138 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [807ms] SocketTube(1) connecting flows
05:07:43.138 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [807ms] SocketTube(1) read publisher got subscriber
05:07:43.138 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [807ms] SocketTube(1) registering subscribe event
05:07:43.138 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [807ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.138 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [807ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.138 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [807ms] SocketTube(1) subscribed for writing
05:07:43.138 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [807ms] SocketTube(1) write: resetting demand to 0
05:07:43.138 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [808ms] SocketTube(1) write: registering startSubscription event
05:07:43.138 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [807ms] SocketTube(1) subscribe event raised
05:07:43.138 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [808ms] Http1Exchange requestAction.headers
05:07:43.138 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [808ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@880f30e
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [808ms] SocketTube(1) read demand reset to 0
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [808ms] SocketTube(1) calling onSubscribe
05:07:43.139 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [808ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.139 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [808ms] Http1Exchange setting outgoing with headers
05:07:43.139 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [808ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [808ms] SocketTube(1) onSubscribe called
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [808ms] SocketTube(1) pending subscriber subscribed
05:07:43.139 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [808ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.139 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [808ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [808ms] SocketTube(1) got some demand for reading
05:07:43.139 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [809ms] SocketTube(1) resuming read event
05:07:43.139 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [808ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=523 cap=523]], throwable=null]
05:07:43.139 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [809ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.139 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [809ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.139 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [808ms] HttpClientImpl(1) next timeout: 299997
05:07:43.140 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [809ms] HttpClientImpl(1) next expired: 0
05:07:43.140 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [809ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.139 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [809ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.140 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [809ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.140 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [809ms] SocketTube(1) write: starting subscription
05:07:43.140 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [809ms] SocketTube(1) write: offloading requestMore
05:07:43.140 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [809ms] HttpClientImpl(1) next timeout: 299996
05:07:43.140 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [809ms] SocketTube(1) write: requesting more...
05:07:43.140 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [810ms] HttpClientImpl(1) next expired: 0
05:07:43.140 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [810ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.140 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [810ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.140 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [810ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.141 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [810ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.141 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [810ms] Http1Exchange initiating completion of headersSentCF
05:07:43.141 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [810ms] Exchange checkFor407: all clear
05:07:43.141 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [810ms] Exchange sendRequestBody
05:07:43.141 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [810ms] Http1Exchange sendBodyAsync
05:07:43.141 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [810ms] Http1Exchange bodySubscriber is null
05:07:43.141 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [810ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.141 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [810ms] Http1Publisher(SocketTube(1)) onNext with 523 bytes
05:07:43.141 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [810ms] SocketTube(1) trying to write: 523
05:07:43.141 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [811ms] SocketTube(1) wrote: 523
05:07:43.141 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [811ms] SocketTube(1) write: requesting more...
05:07:43.141 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [811ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.141 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [811ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.141 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [811ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.141 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [811ms] Http1Exchange initiating completion of bodySentCF
05:07:43.142 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [811ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.142 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [811ms] Http1Exchange reading headers
05:07:43.142 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [811ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.142 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [811ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.142 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [811ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.142 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [811ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@ab2ee7e
05:07:43.142 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [811ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.147 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [816ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [816ms] SocketTube(1) read bytes: 124
05:07:43.147 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [816ms] Http1AsyncReceiver(SocketTube(1)) Putting 124 bytes into the queue
05:07:43.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [816ms] SocketTube(1) resuming read event
05:07:43.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [816ms] Http1AsyncReceiver(SocketTube(1)) Got 124 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@2f42ec3c
05:07:43.147 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [817ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.147 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [816ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [817ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 124 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@2f42ec3c
05:07:43.147 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [817ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.147 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [817ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Sending 124/124 bytes to header parser
05:07:43.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [817ms] HttpClientImpl(1) next timeout: 299988
05:07:43.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [817ms] HttpClientImpl(1) next expired: 0
05:07:43.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [817ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.148 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [817ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.148 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [817ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@2f42ec3c
05:07:43.148 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [817ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.148 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [817ms] Http1Exchange getResponseAsync completed successfully
05:07:43.148 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [818ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.148 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [818ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.148 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@5a704d7a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@593274e2 queue.isEmpty: false
05:07:43.148 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 16
05:07:43.148 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [818ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=16, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.149 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@5a704d7a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@593274e2, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.149 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) Got 16 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@5a704d7a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@593274e2
05:07:43.149 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.149 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 16 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@5a704d7a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@593274e2
05:07:43.149 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [818ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Sending 16/124 bytes to body parser
05:07:43.149 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [818ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 16 bytes (16 remaining / 16)
05:07:43.149 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [818ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.149 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [818ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.149 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [818ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.149 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [818ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.149 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [818ms] SocketTube(1) connecting flows
05:07:43.149 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [818ms] SocketTube(1) read publisher got subscriber
05:07:43.149 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [818ms] SocketTube(1) registering subscribe event
05:07:43.149 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [818ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.149 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [819ms] SocketTube(1) subscribed for writing
05:07:43.149 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [819ms] SocketTube(1) write: resetting demand to 0
05:07:43.149 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [819ms] SocketTube(1) write: registering startSubscription event
05:07:43.149 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [818ms] SocketTube(1) subscribe event raised
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.150 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [819ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) read demand reset to 0
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) calling onSubscribe
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) got some demand for reading
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) resuming read event
05:07:43.150 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [819ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.150 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [819ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.150 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [819ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [820ms] SocketTube(1) onSubscribe called
05:07:43.150 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [820ms] SocketTube(1) pending subscriber subscribed
05:07:43.150 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type in 14ms
05:07:43.150 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [820ms] HttpClientImpl(1) next timeout: 0
05:07:43.151 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [820ms] HttpClientImpl(1) next expired: 1199850
05:07:43.151 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [820ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.151 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [820ms] SocketTube(1) write: starting subscription
05:07:43.151 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [820ms] SocketTube(1) write: offloading requestMore
05:07:43.150 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [819ms] Http1Response(id=8, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.151 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [820ms] SocketTube(1) write: requesting more...
05:07:43.151 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [820ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.151 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [820ms] HttpClientImpl(1) next timeout: 0
05:07:43.151 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=99ee9ad6f277b418, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=fe5c3f766bdd4e32, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663135000000, endEpochNanos=1735189663149981698, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.151 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [821ms] HttpClientImpl(1) next expired: 1199849
05:07:43.151 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [821ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.151 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [820ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.151 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=a0482b1e958e2895, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=fe5c3f766bdd4e32, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663135000000, endEpochNanos=1735189663151095595, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.152 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [821ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.152 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=fe5c3f766bdd4e32, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=d9d6b42f58a1e401, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663135000000, endEpochNanos=1735189663152001434, attributes=AttributesMap{data={http.method=GET, random.key=fbcdf85f-e565-46b1-9c2b-7b62e22b80ca, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type"}, epochNanos=1735189663151992558, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.152 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "68a77f8991c5c53469de7367510f8488","eventTime": 1735189663151992558,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11\u002fattribute\u002ftype"}}

05:07:43.153 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=61c25dcf63808f78, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=d9d6b42f58a1e401, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663134000000, endEpochNanos=1735189663152322998, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.153 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=68a77f8991c5c53469de7367510f8488, spanId=d9d6b42f58a1e401, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663134000000, endEpochNanos=1735189663152864387, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.11/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.154 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 42
05:07:43.154 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 42
05:07:43.154 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 42, cap: 42/42, unwrapped: PooledUnsafeDirectByteBuf(ridx: 230, widx: 230, cap: 480)), decoderResult: success)
05:07:43.154 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 42, widx: 42, cap: 42/42, unwrapped: PooledUnsafeDirectByteBuf(ridx: 230, widx: 230, cap: 480)), decoderResult: success)
05:07:43.156 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3,spanId=6815967c5d9dbe0a} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.157 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.157 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [827ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.158 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [827ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.158 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [827ms] HttpClientImpl(1) next timeout: 299999
05:07:43.158 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [827ms] Http2ClientImpl not found in connection pool
05:07:43.158 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [827ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.158 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [827ms] HttpClientImpl(1) next expired: 1199842
05:07:43.158 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [827ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.158 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [827ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.158 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [828ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.158 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [828ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.159 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [828ms] Exchange checkFor407: all clear
05:07:43.159 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [828ms] Http1Exchange Sending headers only
05:07:43.159 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@7cf593a1 queue.isEmpty: true
05:07:43.159 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@7cf593a1, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.159 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.159 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.159 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.159 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [828ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.159 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [828ms] Http1Exchange response created in advance
05:07:43.159 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [828ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.159 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [828ms] SocketTube(1) connecting flows
05:07:43.159 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [828ms] SocketTube(1) read publisher got subscriber
05:07:43.159 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [829ms] SocketTube(1) registering subscribe event
05:07:43.159 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [829ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.159 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) subscribe event raised
05:07:43.159 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [829ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.159 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [829ms] SocketTube(1) subscribed for writing
05:07:43.160 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [829ms] SocketTube(1) write: resetting demand to 0
05:07:43.160 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [829ms] SocketTube(1) write: registering startSubscription event
05:07:43.160 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [829ms] Http1Exchange requestAction.headers
05:07:43.159 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@18fc846d
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) read demand reset to 0
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) calling onSubscribe
05:07:43.160 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [829ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) onSubscribe called
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [829ms] SocketTube(1) pending subscriber subscribed
05:07:43.160 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [829ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.160 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [829ms] Http1Exchange setting outgoing with headers
05:07:43.160 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [830ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.160 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [830ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [830ms] SocketTube(1) got some demand for reading
05:07:43.160 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [829ms] HttpClientImpl(1) next timeout: 299997
05:07:43.160 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [830ms] SocketTube(1) resuming read event
05:07:43.160 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [830ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.161 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [830ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.161 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [830ms] HttpClientImpl(1) next expired: 0
05:07:43.161 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [830ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.161 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [830ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.161 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [830ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.161 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [831ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.161 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [831ms] SocketTube(1) write: starting subscription
05:07:43.161 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [831ms] SocketTube(1) write: offloading requestMore
05:07:43.161 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [831ms] HttpClientImpl(1) next timeout: 299996
05:07:43.161 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [831ms] SocketTube(1) write: requesting more...
05:07:43.161 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [831ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.162 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [831ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.161 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [831ms] HttpClientImpl(1) next expired: 0
05:07:43.162 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [831ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.162 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [831ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.162 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [831ms] Http1Exchange initiating completion of headersSentCF
05:07:43.162 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [831ms] Exchange checkFor407: all clear
05:07:43.162 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [831ms] Exchange sendRequestBody
05:07:43.162 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [831ms] Http1Exchange sendBodyAsync
05:07:43.162 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [831ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.162 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [831ms] Http1Exchange requesting more request body from the subscriber
05:07:43.162 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [831ms] jdk.internal.net.http.Http1Request@6e69ffd8 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@24361ad8
05:07:43.162 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [831ms] jdk.internal.net.http.Http1Request@6e69ffd8 onNext
05:07:43.162 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [831ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=42 cap=16384]], throwable=null]
05:07:43.162 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [832ms] jdk.internal.net.http.Http1Request@6e69ffd8 onComplete
05:07:43.162 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [832ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.162 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [832ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.162 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [832ms] SocketTube(1) trying to write: 460
05:07:43.162 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [832ms] SocketTube(1) wrote: 460
05:07:43.163 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [832ms] SocketTube(1) write: requesting more...
05:07:43.163 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [832ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.163 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [832ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.163 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [832ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.163 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [832ms] Http1Exchange requesting more request body from the subscriber
05:07:43.163 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [832ms] jdk.internal.net.http.Http1Request@6e69ffd8 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@24361ad8
05:07:43.163 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [832ms] Http1Publisher(SocketTube(1)) onNext with 42 bytes
05:07:43.163 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [832ms] SocketTube(1) trying to write: 42
05:07:43.163 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [832ms] SocketTube(1) wrote: 42
05:07:43.163 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [832ms] SocketTube(1) write: requesting more...
05:07:43.163 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [832ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.163 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [832ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.163 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [833ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.163 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [833ms] Http1Exchange initiating completion of bodySentCF
05:07:43.163 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [833ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.163 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [833ms] Http1Exchange reading headers
05:07:43.163 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [833ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.163 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [833ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.163 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [833ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.163 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [833ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@45ec2c11
05:07:43.163 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [833ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.172 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [842ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.173 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [842ms] SocketTube(1) read bytes: 234
05:07:43.173 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [842ms] Http1AsyncReceiver(SocketTube(1)) Putting 234 bytes into the queue
05:07:43.173 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [842ms] SocketTube(1) resuming read event
05:07:43.173 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [842ms] Http1AsyncReceiver(SocketTube(1)) Got 234 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@7cf593a1
05:07:43.173 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [842ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.173 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [842ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 234 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@7cf593a1
05:07:43.173 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [842ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.173 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [842ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.173 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [842ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Sending 234/234 bytes to header parser
05:07:43.173 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [843ms] HttpClientImpl(1) next timeout: 299984
05:07:43.173 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [843ms] HttpClientImpl(1) next expired: 0
05:07:43.173 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [843ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.173 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [843ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.173 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@7cf593a1
05:07:43.173 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [843ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.174 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [843ms] Http1Exchange getResponseAsync completed successfully
05:07:43.174 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [843ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.174 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [843ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.174 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@1554c796/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1a0ff3e queue.isEmpty: false
05:07:43.174 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 125
05:07:43.174 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [843ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=125, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.174 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@1554c796/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1a0ff3e, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.174 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) Got 125 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@1554c796/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1a0ff3e
05:07:43.174 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.174 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [843ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 125 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@1554c796/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1a0ff3e
05:07:43.174 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [843ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Sending 125/234 bytes to body parser
05:07:43.174 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [844ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 125 bytes (125 remaining / 125)
05:07:43.174 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [844ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.174 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [844ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.174 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [844ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.174 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [844ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.174 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [844ms] SocketTube(1) connecting flows
05:07:43.174 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [844ms] SocketTube(1) read publisher got subscriber
05:07:43.174 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [844ms] SocketTube(1) registering subscribe event
05:07:43.175 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [844ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [844ms] SocketTube(1) subscribe event raised
05:07:43.175 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [844ms] SocketTube(1) subscribed for writing
05:07:43.175 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [844ms] SocketTube(1) write: resetting demand to 0
05:07:43.175 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [844ms] SocketTube(1) write: registering startSubscription event
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [844ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.175 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [844ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [844ms] SocketTube(1) read demand reset to 0
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [844ms] SocketTube(1) calling onSubscribe
05:07:43.175 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [844ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.175 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [844ms] Http1Response(id=9, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [844ms] SocketTube(1) got some demand for reading
05:07:43.175 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 18ms
05:07:43.175 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [844ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.175 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [845ms] SocketTube(1) resuming read event
05:07:43.175 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=cb6841102d92a6a1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=6815967c5d9dbe0a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663157000000, endEpochNanos=1735189663175549872, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.175 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [845ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.175 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [845ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.176 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [845ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.176 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [845ms] SocketTube(1) onSubscribe called
05:07:43.176 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [845ms] SocketTube(1) pending subscriber subscribed
05:07:43.176 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=3fcb67ec9d2e17e6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=6815967c5d9dbe0a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663157000000, endEpochNanos=1735189663176035678, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.176 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [845ms] HttpClientImpl(1) next timeout: 0
05:07:43.176 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [845ms] HttpClientImpl(1) next expired: 1199824
05:07:43.176 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [845ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.176 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=3c943913bb5eee29, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=6815967c5d9dbe0a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663156000000, endEpochNanos=1735189663176034620, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.176 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [845ms] SocketTube(1) write: starting subscription
05:07:43.176 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [846ms] SocketTube(1) write: offloading requestMore
05:07:43.176 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0c2c12dc8115b8bbb16d09d6e180f0a3, spanId=6815967c5d9dbe0a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663156000000, endEpochNanos=1735189663176697596, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.176 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [846ms] SocketTube(1) write: requesting more...
05:07:43.176 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [846ms] HttpClientImpl(1) next timeout: 0
05:07:43.176 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [846ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.176 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [846ms] HttpClientImpl(1) next expired: 1199824
05:07:43.177 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [846ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.178 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.178 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.178 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.178 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.179 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type into OpenTelemetrySpan{traceId=db7ba9976b14a179bb1b92b3437c4941,spanId=441110d2603dde91} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.180 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=f7cfb32dfdb1537f, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=441110d2603dde91, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663180000000, endEpochNanos=0}}, span id=f7cfb32dfdb1537f, trace id=db7ba9976b14a179bb1b92b3437c4941} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=8e5ea58de2437162, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=441110d2603dde91, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=2ce03c4a-65c8-45d8-8799-a884f3d27e0f}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663180000000, endEpochNanos=0}}, span id=8e5ea58de2437162, trace id=db7ba9976b14a179bb1b92b3437c4941}
05:07:43.180 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type into OpenTelemetrySpan{traceId=db7ba9976b14a179bb1b92b3437c4941,spanId=8e5ea58de2437162} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.181 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type
05:07:43.181 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [850ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type GET
05:07:43.181 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [851ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type GET,
	 proxy=null
05:07:43.181 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [851ms] HttpClientImpl(1) next timeout: 300000
05:07:43.182 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [851ms] Http2ClientImpl not found in connection pool
05:07:43.182 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [851ms] HttpClientImpl(1) next expired: 1199818
05:07:43.182 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [851ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.182 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [851ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.182 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [851ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.182 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [851ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.182 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [851ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.182 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [852ms] Exchange checkFor407: all clear
05:07:43.182 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [852ms] Http1Exchange Sending headers only
05:07:43.182 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@43e7b5a queue.isEmpty: true
05:07:43.182 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@43e7b5a, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.182 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.182 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.182 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.183 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [852ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.183 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [852ms] Http1Exchange response created in advance
05:07:43.183 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [852ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.183 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [852ms] SocketTube(1) connecting flows
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [852ms] SocketTube(1) read publisher got subscriber
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [852ms] SocketTube(1) registering subscribe event
05:07:43.183 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [852ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [852ms] SocketTube(1) subscribe event raised
05:07:43.183 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [852ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.183 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [852ms] SocketTube(1) subscribed for writing
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [852ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@503819ea
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [852ms] SocketTube(1) read demand reset to 0
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [852ms] SocketTube(1) calling onSubscribe
05:07:43.183 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [852ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.183 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [852ms] SocketTube(1) write: resetting demand to 0
05:07:43.183 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [853ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [853ms] SocketTube(1) onSubscribe called
05:07:43.183 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [853ms] SocketTube(1) pending subscriber subscribed
05:07:43.183 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [853ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.184 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [853ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.183 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [853ms] SocketTube(1) write: registering startSubscription event
05:07:43.184 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [853ms] Http1Exchange requestAction.headers
05:07:43.184 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [853ms] SocketTube(1) got some demand for reading
05:07:43.184 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [853ms] SocketTube(1) resuming read event
05:07:43.184 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [853ms] Http1Exchange setting outgoing with headers
05:07:43.183 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [853ms] HttpClientImpl(1) next timeout: 299998
05:07:43.184 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [853ms] HttpClientImpl(1) next expired: 0
05:07:43.184 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [854ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.184 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [853ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=522 cap=522]], throwable=null]
05:07:43.184 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [853ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.184 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [854ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.184 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [854ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.185 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [854ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.185 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [854ms] SocketTube(1) write: starting subscription
05:07:43.185 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [854ms] SocketTube(1) write: offloading requestMore
05:07:43.185 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [854ms] SocketTube(1) write: requesting more...
05:07:43.185 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [854ms] HttpClientImpl(1) next timeout: 299996
05:07:43.185 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [854ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.185 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [854ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.185 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [854ms] HttpClientImpl(1) next expired: 0
05:07:43.185 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [855ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.185 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [855ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.185 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [855ms] Http1Exchange initiating completion of headersSentCF
05:07:43.185 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [855ms] Exchange checkFor407: all clear
05:07:43.185 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [855ms] Exchange sendRequestBody
05:07:43.185 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [855ms] Http1Exchange sendBodyAsync
05:07:43.186 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [855ms] Http1Exchange bodySubscriber is null
05:07:43.186 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [855ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.186 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [855ms] Http1Publisher(SocketTube(1)) onNext with 522 bytes
05:07:43.186 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [855ms] SocketTube(1) trying to write: 522
05:07:43.186 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [855ms] SocketTube(1) wrote: 522
05:07:43.186 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [855ms] SocketTube(1) write: requesting more...
05:07:43.186 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [855ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.186 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [855ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.186 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [855ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.186 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [855ms] Http1Exchange initiating completion of bodySentCF
05:07:43.186 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [855ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.186 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [855ms] Http1Exchange reading headers
05:07:43.186 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [855ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.186 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [855ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.186 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [856ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.186 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [856ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@37e5743c
05:07:43.186 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [856ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.190 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [860ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.191 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [860ms] SocketTube(1) read bytes: 122
05:07:43.191 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [860ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.191 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [860ms] SocketTube(1) resuming read event
05:07:43.191 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [860ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@43e7b5a
05:07:43.191 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [860ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.191 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [860ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.191 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [860ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.191 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [860ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@43e7b5a
05:07:43.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [860ms] HttpClientImpl(1) next timeout: 299990
05:07:43.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [861ms] HttpClientImpl(1) next expired: 0
05:07:43.191 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [860ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [861ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.191 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [861ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.191 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@43e7b5a
05:07:43.191 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [861ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.192 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [861ms] Http1Exchange getResponseAsync completed successfully
05:07:43.192 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [861ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.192 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [861ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.192 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@31ba24f1/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2381b414 queue.isEmpty: false
05:07:43.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.192 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [861ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.192 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@31ba24f1/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2381b414, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@31ba24f1/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2381b414
05:07:43.192 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [861ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [862ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@31ba24f1/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2381b414
05:07:43.192 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [862ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.192 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [862ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.192 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [862ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.192 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [862ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.192 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [862ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.193 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [862ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.193 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [862ms] SocketTube(1) connecting flows
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [862ms] SocketTube(1) read publisher got subscriber
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [862ms] SocketTube(1) registering subscribe event
05:07:43.193 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [862ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [862ms] SocketTube(1) subscribe event raised
05:07:43.193 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [862ms] SocketTube(1) subscribed for writing
05:07:43.193 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [862ms] SocketTube(1) write: resetting demand to 0
05:07:43.193 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [862ms] SocketTube(1) write: registering startSubscription event
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [862ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.193 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [863ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) read demand reset to 0
05:07:43.193 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [863ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) calling onSubscribe
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) got some demand for reading
05:07:43.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) resuming read event
05:07:43.193 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [863ms] Http1Response(id=10, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.193 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [863ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.194 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.194 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) onSubscribe called
05:07:43.194 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [863ms] SocketTube(1) pending subscriber subscribed
05:07:43.193 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type in 12ms
05:07:43.194 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [863ms] HttpClientImpl(1) next timeout: 0
05:07:43.194 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=231604c75f135cdc, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=8e5ea58de2437162, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663181000000, endEpochNanos=1735189663194314005, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.194 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [863ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.194 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [863ms] HttpClientImpl(1) next expired: 1199806
05:07:43.194 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=963159f7d41f4860, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=8e5ea58de2437162, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663180000000, endEpochNanos=1735189663193657445, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.194 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [863ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.194 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [864ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.194 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=8e5ea58de2437162, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=441110d2603dde91, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663180000000, endEpochNanos=1735189663194399127, attributes=AttributesMap{data={http.method=GET, random.key=2ce03c4a-65c8-45d8-8799-a884f3d27e0f, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type"}, epochNanos=1735189663194389860, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.194 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [864ms] SocketTube(1) write: starting subscription
05:07:43.195 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [864ms] SocketTube(1) write: offloading requestMore
05:07:43.195 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [864ms] SocketTube(1) write: requesting more...
05:07:43.195 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [864ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.195 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [864ms] HttpClientImpl(1) next timeout: 0
05:07:43.195 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [864ms] HttpClientImpl(1) next expired: 1199805
05:07:43.195 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [864ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.195 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "db7ba9976b14a179bb1b92b3437c4941","eventTime": 1735189663194389860,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4\u002fattribute\u002ftype"}}

05:07:43.195 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=f7cfb32dfdb1537f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=441110d2603dde91, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663180000000, endEpochNanos=1735189663195535466, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.195 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=db7ba9976b14a179bb1b92b3437c4941, spanId=441110d2603dde91, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663179000000, endEpochNanos=1735189663195024258, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.4/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.196 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:43.197 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:43.197 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 464)), decoderResult: success)
05:07:43.197 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 41, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 464)), decoderResult: success)
05:07:43.198 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=4cfb914793dd785ea2ba64971c306002,spanId=f3e2f42b1963a8e4} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.199 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.200 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [869ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.200 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [870ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.200 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [870ms] HttpClientImpl(1) next timeout: 300000
05:07:43.200 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [870ms] Http2ClientImpl not found in connection pool
05:07:43.201 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [870ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.201 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [870ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.201 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [870ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.200 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [870ms] HttpClientImpl(1) next expired: 1199800
05:07:43.201 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [870ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.201 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [870ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.201 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [870ms] Exchange checkFor407: all clear
05:07:43.201 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [870ms] Http1Exchange Sending headers only
05:07:43.201 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@484a25bf queue.isEmpty: true
05:07:43.201 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@484a25bf, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.201 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.201 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.201 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.201 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [871ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.201 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [871ms] Http1Exchange response created in advance
05:07:43.202 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [871ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.202 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [871ms] SocketTube(1) connecting flows
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [871ms] SocketTube(1) read publisher got subscriber
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [871ms] SocketTube(1) registering subscribe event
05:07:43.202 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [871ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [871ms] SocketTube(1) subscribe event raised
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [871ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@52afb68e
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [871ms] SocketTube(1) read demand reset to 0
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [871ms] SocketTube(1) calling onSubscribe
05:07:43.202 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [871ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.202 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [871ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.202 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [871ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [871ms] SocketTube(1) onSubscribe called
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [872ms] SocketTube(1) pending subscriber subscribed
05:07:43.202 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [872ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.202 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [872ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.202 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [872ms] SocketTube(1) got some demand for reading
05:07:43.203 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [872ms] SocketTube(1) resuming read event
05:07:43.202 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [871ms] SocketTube(1) subscribed for writing
05:07:43.203 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [872ms] SocketTube(1) write: resetting demand to 0
05:07:43.203 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [872ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.202 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [872ms] HttpClientImpl(1) next timeout: 299998
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [872ms] HttpClientImpl(1) next expired: 0
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [872ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.203 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [872ms] SocketTube(1) write: registering startSubscription event
05:07:43.203 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [872ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [872ms] HttpClientImpl(1) next timeout: 299997
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [873ms] HttpClientImpl(1) next expired: 0
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [873ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.203 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [873ms] Http1Exchange requestAction.headers
05:07:43.203 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [873ms] SocketTube(1) write: starting subscription
05:07:43.203 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [873ms] SocketTube(1) write: offloading requestMore
05:07:43.203 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [873ms] Http1Exchange setting outgoing with headers
05:07:43.204 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [873ms] SocketTube(1) write: requesting more...
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [873ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.203 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [873ms] HttpClientImpl(1) next timeout: 299997
05:07:43.204 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [873ms] HttpClientImpl(1) next expired: 0
05:07:43.204 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [873ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [873ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [873ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.204 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [873ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.204 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [873ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.204 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [874ms] Http1Exchange initiating completion of headersSentCF
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.204 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [874ms] SocketTube(1) trying to write: 460
05:07:43.204 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [874ms] SocketTube(1) wrote: 460
05:07:43.204 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [874ms] SocketTube(1) write: requesting more...
05:07:43.204 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.205 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [874ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.205 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [874ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.205 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [874ms] Exchange checkFor407: all clear
05:07:43.205 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [874ms] Exchange sendRequestBody
05:07:43.205 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [874ms] Http1Exchange sendBodyAsync
05:07:43.205 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [874ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.205 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [874ms] Http1Exchange requesting more request body from the subscriber
05:07:43.205 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [874ms] jdk.internal.net.http.Http1Request@6b83ded Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@28370deb
05:07:43.205 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [874ms] jdk.internal.net.http.Http1Request@6b83ded onNext
05:07:43.205 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [874ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=41 cap=16384]], throwable=null]
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.205 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [874ms] Http1Exchange requesting more request body from the subscriber
05:07:43.205 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [874ms] jdk.internal.net.http.Http1Request@6b83ded Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@28370deb
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [874ms] Http1Publisher(SocketTube(1)) onNext with 41 bytes
05:07:43.205 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [875ms] SocketTube(1) trying to write: 41
05:07:43.205 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [875ms] SocketTube(1) wrote: 41
05:07:43.205 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [875ms] SocketTube(1) write: requesting more...
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.205 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [875ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.205 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [875ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.205 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.206 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.206 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [875ms] jdk.internal.net.http.Http1Request@6b83ded onComplete
05:07:43.206 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [875ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.206 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.206 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.206 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [875ms] Http1Exchange initiating completion of bodySentCF
05:07:43.206 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [875ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@459504e8
05:07:43.206 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [875ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.206 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [875ms] Http1Exchange reading headers
05:07:43.206 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [875ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.206 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [875ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.206 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [875ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.215 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [884ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.215 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [884ms] SocketTube(1) read bytes: 234
05:07:43.215 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [884ms] Http1AsyncReceiver(SocketTube(1)) Putting 234 bytes into the queue
05:07:43.215 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [884ms] SocketTube(1) resuming read event
05:07:43.215 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [884ms] Http1AsyncReceiver(SocketTube(1)) Got 234 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@484a25bf
05:07:43.215 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [884ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.215 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [885ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 234 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@484a25bf
05:07:43.215 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [884ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.215 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [885ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Sending 234/234 bytes to header parser
05:07:43.215 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [885ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.215 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [885ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.215 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [885ms] HttpClientImpl(1) next timeout: 299985
05:07:43.216 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [885ms] HttpClientImpl(1) next expired: 0
05:07:43.215 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [885ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@484a25bf
05:07:43.216 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [885ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.216 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [885ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.216 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [885ms] Http1Exchange getResponseAsync completed successfully
05:07:43.216 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [885ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.216 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [885ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.216 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [885ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@5c6ba638/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4ca3a00b queue.isEmpty: false
05:07:43.216 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [885ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 125
05:07:43.216 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [886ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=125, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.216 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [886ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@5c6ba638/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4ca3a00b, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.216 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [886ms] Http1AsyncReceiver(SocketTube(1)) Got 125 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@5c6ba638/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4ca3a00b
05:07:43.216 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [886ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.216 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [886ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 125 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@5c6ba638/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4ca3a00b
05:07:43.216 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [886ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Sending 125/234 bytes to body parser
05:07:43.216 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [886ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 125 bytes (125 remaining / 125)
05:07:43.216 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [886ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.217 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [886ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.217 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [886ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.217 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [886ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.217 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [886ms] SocketTube(1) connecting flows
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [886ms] SocketTube(1) read publisher got subscriber
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [886ms] SocketTube(1) registering subscribe event
05:07:43.217 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [886ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [886ms] SocketTube(1) subscribe event raised
05:07:43.217 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [886ms] SocketTube(1) subscribed for writing
05:07:43.217 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [886ms] SocketTube(1) write: resetting demand to 0
05:07:43.217 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [886ms] SocketTube(1) write: registering startSubscription event
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [886ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.217 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [886ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) read demand reset to 0
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) calling onSubscribe
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) got some demand for reading
05:07:43.217 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) resuming read event
05:07:43.217 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [887ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.217 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [887ms] Http1Response(id=11, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.217 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 17ms
05:07:43.217 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [887ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.218 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.218 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=19e1b625ce14c75d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=f3e2f42b1963a8e4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663199000000, endEpochNanos=1735189663217311952, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.218 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [887ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.218 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [887ms] SocketTube(1) onSubscribe called
05:07:43.220 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [890ms] SocketTube(1) pending subscriber subscribed
05:07:43.220 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [890ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.220 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [890ms] HttpClientImpl(1) next timeout: 0
05:07:43.220 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=bffccbcdd3a1122d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=f3e2f42b1963a8e4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663199000000, endEpochNanos=1735189663219977733, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.221 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [890ms] HttpClientImpl(1) next expired: 1199779
05:07:43.221 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [890ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.221 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=af4507204fe6f8be, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=f3e2f42b1963a8e4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663198000000, endEpochNanos=1735189663220576585, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.221 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [890ms] SocketTube(1) write: starting subscription
05:07:43.221 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [890ms] SocketTube(1) write: offloading requestMore
05:07:43.221 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4cfb914793dd785ea2ba64971c306002, spanId=f3e2f42b1963a8e4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663198000000, endEpochNanos=1735189663221031613, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.221 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [890ms] SocketTube(1) write: requesting more...
05:07:43.221 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [890ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.221 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [890ms] HttpClientImpl(1) next timeout: 0
05:07:43.221 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [891ms] HttpClientImpl(1) next expired: 1199779
05:07:43.221 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [891ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.223 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.223 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.223 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.223 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.224 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type into OpenTelemetrySpan{traceId=95d71fdb870288111eaa450da4685fee,spanId=579e3df6b2c86047} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.225 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=95d71fdb870288111eaa450da4685fee, spanId=7f65eb8f17e4ab5e, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=579e3df6b2c86047, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663225000000, endEpochNanos=0}}, span id=7f65eb8f17e4ab5e, trace id=95d71fdb870288111eaa450da4685fee} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=95d71fdb870288111eaa450da4685fee, spanId=ec697eb436906989, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=579e3df6b2c86047, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=44110243-573b-4b8f-8359-dfcd61f4bdb5}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663225000000, endEpochNanos=0}}, span id=ec697eb436906989, trace id=95d71fdb870288111eaa450da4685fee}
05:07:43.226 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type into OpenTelemetrySpan{traceId=95d71fdb870288111eaa450da4685fee,spanId=ec697eb436906989} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.226 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type
05:07:43.226 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [896ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type GET
05:07:43.227 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [896ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type GET,
	 proxy=null
05:07:43.227 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [896ms] HttpClientImpl(1) next timeout: 300000
05:07:43.227 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [896ms] Http2ClientImpl not found in connection pool
05:07:43.227 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [896ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.227 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [896ms] HttpClientImpl(1) next expired: 1199773
05:07:43.227 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [896ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.227 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [896ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.227 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [896ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.227 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [897ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.227 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [897ms] Exchange checkFor407: all clear
05:07:43.227 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [897ms] Http1Exchange Sending headers only
05:07:43.228 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@666c5cfd queue.isEmpty: true
05:07:43.228 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@666c5cfd, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.228 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.228 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.228 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.228 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [897ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.228 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [897ms] Http1Exchange response created in advance
05:07:43.228 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [897ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.228 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [897ms] SocketTube(1) connecting flows
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [897ms] SocketTube(1) read publisher got subscriber
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [897ms] SocketTube(1) registering subscribe event
05:07:43.228 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [897ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [897ms] SocketTube(1) subscribe event raised
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [897ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@5db83756
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [898ms] SocketTube(1) read demand reset to 0
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [898ms] SocketTube(1) calling onSubscribe
05:07:43.228 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [898ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.228 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [897ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.228 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [898ms] SocketTube(1) subscribed for writing
05:07:43.228 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [898ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.228 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [898ms] SocketTube(1) onSubscribe called
05:07:43.229 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [898ms] SocketTube(1) pending subscriber subscribed
05:07:43.229 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [898ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.229 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [898ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.229 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [898ms] SocketTube(1) got some demand for reading
05:07:43.229 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [898ms] SocketTube(1) resuming read event
05:07:43.228 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [898ms] SocketTube(1) write: resetting demand to 0
05:07:43.229 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [898ms] SocketTube(1) write: registering startSubscription event
05:07:43.229 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [898ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.229 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [898ms] HttpClientImpl(1) next timeout: 299998
05:07:43.229 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [899ms] HttpClientImpl(1) next expired: 0
05:07:43.229 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [899ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.229 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [898ms] Http1Exchange requestAction.headers
05:07:43.229 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [899ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.229 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [899ms] SocketTube(1) write: starting subscription
05:07:43.229 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [899ms] SocketTube(1) write: offloading requestMore
05:07:43.229 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [899ms] HttpClientImpl(1) next timeout: 299998
05:07:43.230 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [899ms] SocketTube(1) write: requesting more...
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [899ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [899ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [899ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.230 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [899ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.229 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [899ms] Http1Exchange setting outgoing with headers
05:07:43.230 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [899ms] HttpClientImpl(1) next expired: 0
05:07:43.230 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [899ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=522 cap=522]], throwable=null]
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [899ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [899ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.230 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [900ms] Http1Exchange initiating completion of headersSentCF
05:07:43.230 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [899ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.230 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) onNext with 522 bytes
05:07:43.230 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [900ms] SocketTube(1) trying to write: 522
05:07:43.231 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [900ms] SocketTube(1) wrote: 522
05:07:43.231 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [900ms] SocketTube(1) write: requesting more...
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.231 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [900ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.231 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [900ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:43.231 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [900ms] Exchange checkFor407: all clear
05:07:43.231 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [900ms] Exchange sendRequestBody
05:07:43.231 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [900ms] Http1Exchange sendBodyAsync
05:07:43.231 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [900ms] Http1Exchange bodySubscriber is null
05:07:43.231 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [900ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.231 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [900ms] Http1Exchange initiating completion of bodySentCF
05:07:43.231 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [900ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@67377c6e
05:07:43.231 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [900ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.231 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [901ms] Http1Exchange reading headers
05:07:43.231 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [901ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.231 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [901ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.231 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [901ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.235 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [905ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.235 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [905ms] SocketTube(1) read bytes: 122
05:07:43.236 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [905ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.236 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [905ms] SocketTube(1) resuming read event
05:07:43.236 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [905ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@666c5cfd
05:07:43.236 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [905ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.236 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [905ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.236 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [905ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.236 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [905ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@666c5cfd
05:07:43.236 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [905ms] HttpClientImpl(1) next timeout: 299991
05:07:43.236 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [905ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.236 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [905ms] HttpClientImpl(1) next expired: 0
05:07:43.236 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [906ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.236 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.236 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@666c5cfd
05:07:43.236 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.236 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [906ms] Http1Exchange getResponseAsync completed successfully
05:07:43.236 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.237 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.237 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@36453b7b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2039d417 queue.isEmpty: false
05:07:43.237 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.237 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [906ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.237 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@36453b7b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2039d417, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.237 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@36453b7b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2039d417
05:07:43.237 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.237 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@36453b7b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2039d417
05:07:43.237 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.237 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [906ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.237 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [906ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.237 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [906ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.237 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [906ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.237 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [907ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.237 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [907ms] SocketTube(1) connecting flows
05:07:43.237 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [907ms] SocketTube(1) read publisher got subscriber
05:07:43.237 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [907ms] SocketTube(1) registering subscribe event
05:07:43.237 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [907ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.237 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [907ms] SocketTube(1) subscribed for writing
05:07:43.237 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [907ms] SocketTube(1) write: resetting demand to 0
05:07:43.237 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [907ms] SocketTube(1) write: registering startSubscription event
05:07:43.237 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) subscribe event raised
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.238 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [907ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) read demand reset to 0
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) calling onSubscribe
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) got some demand for reading
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) resuming read event
05:07:43.238 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type in 12ms
05:07:43.238 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [907ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.238 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [907ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.238 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [907ms] Http1Response(id=12, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.238 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=21c8738907c118a8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=ec697eb436906989, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663226000000, endEpochNanos=1735189663237920339, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.238 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [907ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.238 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [907ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [908ms] SocketTube(1) onSubscribe called
05:07:43.238 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=0d500d5cd3bddf53, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=ec697eb436906989, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663226000000, endEpochNanos=1735189663238339991, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.238 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [908ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.238 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [908ms] SocketTube(1) pending subscriber subscribed
05:07:43.239 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=ec697eb436906989, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=579e3df6b2c86047, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663225000000, endEpochNanos=1735189663238221875, attributes=AttributesMap{data={http.method=GET, random.key=44110243-573b-4b8f-8359-dfcd61f4bdb5, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type"}, epochNanos=1735189663238213269, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [908ms] HttpClientImpl(1) next timeout: 0
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [908ms] HttpClientImpl(1) next expired: 1199761
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [908ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.239 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [908ms] SocketTube(1) write: starting subscription
05:07:43.239 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [908ms] SocketTube(1) write: offloading requestMore
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [908ms] HttpClientImpl(1) next timeout: 0
05:07:43.239 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [908ms] SocketTube(1) write: requesting more...
05:07:43.239 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [908ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [908ms] HttpClientImpl(1) next expired: 1199761
05:07:43.239 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [909ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.239 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "95d71fdb870288111eaa450da4685fee","eventTime": 1735189663238213269,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5\u002fattribute\u002ftype"}}

05:07:43.239 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=7f65eb8f17e4ab5e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=579e3df6b2c86047, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663225000000, endEpochNanos=1735189663239481204, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.239 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=95d71fdb870288111eaa450da4685fee, spanId=579e3df6b2c86047, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663224000000, endEpochNanos=1735189663239170469, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.F43E99D6983E90272029C63128CDDC1C.e.5/attribute/type, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.241 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 45
05:07:43.241 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 45
05:07:43.241 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 45, cap: 45/45, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 448)), decoderResult: success)
05:07:43.241 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 45, widx: 45, cap: 45/45, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 448)), decoderResult: success)
05:07:43.242 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=6164395f29b0a1e820de6ccac1c42fc6,spanId=3f74453d8fe5522a} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.243 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=489c37b1b51034da, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=3f74453d8fe5522a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663242000000, endEpochNanos=0}}, span id=489c37b1b51034da, trace id=6164395f29b0a1e820de6ccac1c42fc6} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=908c55cffdb0210d, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=3f74453d8fe5522a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=7f32817e-fd4c-40a8-a9fe-9476ec2f7c97}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663243000000, endEpochNanos=0}}, span id=908c55cffdb0210d, trace id=6164395f29b0a1e820de6ccac1c42fc6}
05:07:43.243 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=6164395f29b0a1e820de6ccac1c42fc6,spanId=908c55cffdb0210d} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.243 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:43.244 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [913ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST
05:07:43.244 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [913ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST,
	 proxy=null
05:07:43.244 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [913ms] HttpClientImpl(1) next timeout: 300000
05:07:43.244 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [913ms] Http2ClientImpl not found in connection pool
05:07:43.244 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [913ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.244 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [913ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.244 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [913ms] HttpClientImpl(1) next expired: 1199756
05:07:43.244 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [914ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.244 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [913ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.244 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [914ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.244 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [914ms] Exchange checkFor407: all clear
05:07:43.245 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [914ms] Http1Exchange Sending headers only
05:07:43.245 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@78be23bd queue.isEmpty: true
05:07:43.245 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@78be23bd, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.245 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.245 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.245 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.245 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [914ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.245 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [914ms] Http1Exchange response created in advance
05:07:43.245 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [914ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.245 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [914ms] SocketTube(1) connecting flows
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [914ms] SocketTube(1) read publisher got subscriber
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [914ms] SocketTube(1) registering subscribe event
05:07:43.245 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [914ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [914ms] SocketTube(1) subscribe event raised
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [914ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@219b1f60
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [915ms] SocketTube(1) read demand reset to 0
05:07:43.245 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [915ms] SocketTube(1) calling onSubscribe
05:07:43.245 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [914ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.245 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [915ms] SocketTube(1) subscribed for writing
05:07:43.245 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [915ms] SocketTube(1) write: resetting demand to 0
05:07:43.245 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [915ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.245 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [915ms] SocketTube(1) write: registering startSubscription event
05:07:43.246 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [915ms] Http1Exchange requestAction.headers
05:07:43.246 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [915ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.246 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [915ms] SocketTube(1) onSubscribe called
05:07:43.246 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [915ms] Http1Exchange setting outgoing with headers
05:07:43.246 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [915ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=431 cap=431]], throwable=null]
05:07:43.246 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [915ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.246 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [915ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.246 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [915ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.246 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [915ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.246 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [916ms] SocketTube(1) got some demand for reading
05:07:43.246 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [916ms] SocketTube(1) resuming read event
05:07:43.246 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [915ms] SocketTube(1) pending subscriber subscribed
05:07:43.246 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [916ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.246 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) next timeout: 299998
05:07:43.246 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) next expired: 0
05:07:43.247 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.247 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [916ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.247 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [916ms] SocketTube(1) write: starting subscription
05:07:43.247 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [916ms] SocketTube(1) write: offloading requestMore
05:07:43.247 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) next timeout: 299997
05:07:43.247 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) next expired: 0
05:07:43.247 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [916ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.247 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [916ms] SocketTube(1) write: requesting more...
05:07:43.247 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [916ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.247 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [916ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.247 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [916ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.247 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [916ms] Http1Exchange initiating completion of headersSentCF
05:07:43.247 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [916ms] Exchange checkFor407: all clear
05:07:43.247 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [916ms] Exchange sendRequestBody
05:07:43.247 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [916ms] Http1Exchange sendBodyAsync
05:07:43.247 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [917ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.247 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [917ms] Http1Exchange requesting more request body from the subscriber
05:07:43.247 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [917ms] jdk.internal.net.http.Http1Request@73397fd4 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7c674423
05:07:43.247 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [917ms] jdk.internal.net.http.Http1Request@73397fd4 onNext
05:07:43.247 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [917ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=45 cap=16384]], throwable=null]
05:07:43.247 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [917ms] jdk.internal.net.http.Http1Request@73397fd4 onComplete
05:07:43.247 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [917ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.247 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [917ms] Http1Publisher(SocketTube(1)) onNext with 431 bytes
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [917ms] SocketTube(1) trying to write: 431
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [917ms] SocketTube(1) wrote: 431
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [917ms] SocketTube(1) write: requesting more...
05:07:43.248 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [917ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.248 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [917ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.248 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [917ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.248 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [917ms] Http1Exchange requesting more request body from the subscriber
05:07:43.248 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [917ms] jdk.internal.net.http.Http1Request@73397fd4 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@7c674423
05:07:43.248 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [917ms] Http1Publisher(SocketTube(1)) onNext with 45 bytes
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [917ms] SocketTube(1) trying to write: 45
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [917ms] SocketTube(1) wrote: 45
05:07:43.248 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [917ms] SocketTube(1) write: requesting more...
05:07:43.248 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [918ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.248 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [918ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.248 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [918ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.248 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [918ms] Http1Exchange initiating completion of bodySentCF
05:07:43.248 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [918ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.248 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [918ms] Http1Exchange reading headers
05:07:43.248 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [918ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.248 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [918ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.248 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [918ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.249 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [918ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@6fe092c8
05:07:43.249 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [918ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.273 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [942ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.273 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [942ms] SocketTube(1) read bytes: 122
05:07:43.273 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [942ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.273 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [942ms] SocketTube(1) resuming read event
05:07:43.273 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [942ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@78be23bd
05:07:43.273 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [942ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.273 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [942ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.273 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [943ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.273 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [943ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@78be23bd
05:07:43.273 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [943ms] HttpClientImpl(1) next timeout: 299971
05:07:43.273 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [943ms] HttpClientImpl(1) next expired: 0
05:07:43.273 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [943ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.274 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [943ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.274 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [943ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.274 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [943ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@78be23bd
05:07:43.274 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [943ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.274 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [943ms] Http1Exchange getResponseAsync completed successfully
05:07:43.274 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [943ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.274 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [943ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.274 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@1b3348ac/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5d3341b5 queue.isEmpty: false
05:07:43.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.274 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.274 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@1b3348ac/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5d3341b5, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@1b3348ac/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5d3341b5
05:07:43.274 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.275 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@1b3348ac/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5d3341b5
05:07:43.275 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [944ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.275 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.275 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.275 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [944ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.275 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [944ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.275 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [944ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.275 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [944ms] SocketTube(1) connecting flows
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [944ms] SocketTube(1) read publisher got subscriber
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [944ms] SocketTube(1) registering subscribe event
05:07:43.275 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [944ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.275 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [944ms] SocketTube(1) subscribed for writing
05:07:43.275 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [944ms] SocketTube(1) write: resetting demand to 0
05:07:43.275 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [944ms] SocketTube(1) write: registering startSubscription event
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [944ms] SocketTube(1) subscribe event raised
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.275 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [945ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.275 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [945ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) read demand reset to 0
05:07:43.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) calling onSubscribe
05:07:43.276 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) got some demand for reading
05:07:43.276 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) resuming read event
05:07:43.275 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/url in 32ms
05:07:43.275 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [945ms] Http1Response(id=13, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.276 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [945ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.276 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.276 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) onSubscribe called
05:07:43.276 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [945ms] SocketTube(1) pending subscriber subscribed
05:07:43.276 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [945ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.276 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=c5fbfd6d6459d00d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=908c55cffdb0210d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663243000000, endEpochNanos=1735189663275465322, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.276 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [945ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [945ms] HttpClientImpl(1) next timeout: 0
05:07:43.276 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=5c7a8f22ee107247, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=908c55cffdb0210d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663243000000, endEpochNanos=1735189663276087883, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [946ms] HttpClientImpl(1) next expired: 1199724
05:07:43.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [946ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.276 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [946ms] SocketTube(1) write: starting subscription
05:07:43.276 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=908c55cffdb0210d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=3f74453d8fe5522a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663243000000, endEpochNanos=1735189663276697109, attributes=AttributesMap{data={http.method=POST, random.key=7f32817e-fd4c-40a8-a9fe-9476ec2f7c97, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="45", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189663276688683, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.277 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [946ms] SocketTube(1) write: offloading requestMore
05:07:43.277 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [946ms] SocketTube(1) write: requesting more...
05:07:43.277 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [946ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.277 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [946ms] HttpClientImpl(1) next timeout: 0
05:07:43.277 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [946ms] HttpClientImpl(1) next expired: 1199723
05:07:43.277 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [946ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.277 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "6164395f29b0a1e820de6ccac1c42fc6","eventTime": 1735189663276688683,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "45","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:43.277 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=489c37b1b51034da, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=3f74453d8fe5522a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663242000000, endEpochNanos=1735189663276938734, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.277 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=6164395f29b0a1e820de6ccac1c42fc6, spanId=3f74453d8fe5522a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663242000000, endEpochNanos=1735189663277481917, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.279 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:43.279 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:43.279 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 448)), decoderResult: success)
05:07:43.279 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 41, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 448)), decoderResult: success)
05:07:43.281 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=b495c2c8e0517113739c034d67646c1b,spanId=ea64ea60d2c35bc8} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.282 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.282 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [952ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.283 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [952ms] HttpClientImpl(1) next timeout: 299999
05:07:43.283 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [952ms] HttpClientImpl(1) next expired: 1199717
05:07:43.283 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [952ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.283 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [952ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.283 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [952ms] Http2ClientImpl not found in connection pool
05:07:43.283 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [952ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.283 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [952ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.283 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [952ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.283 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [953ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.283 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [953ms] Exchange checkFor407: all clear
05:07:43.283 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [953ms] Http1Exchange Sending headers only
05:07:43.283 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@e51fabb queue.isEmpty: true
05:07:43.284 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@e51fabb, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.284 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.284 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.284 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.284 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [953ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.284 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [953ms] Http1Exchange response created in advance
05:07:43.284 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [953ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.284 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [953ms] SocketTube(1) connecting flows
05:07:43.284 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [953ms] SocketTube(1) read publisher got subscriber
05:07:43.284 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [953ms] SocketTube(1) registering subscribe event
05:07:43.284 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [953ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.284 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [953ms] SocketTube(1) subscribe event raised
05:07:43.284 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [953ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.284 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [953ms] SocketTube(1) subscribed for writing
05:07:43.284 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [954ms] SocketTube(1) write: resetting demand to 0
05:07:43.284 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [954ms] SocketTube(1) write: registering startSubscription event
05:07:43.284 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [953ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@31fca5f0
05:07:43.284 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [954ms] Http1Exchange requestAction.headers
05:07:43.284 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [954ms] SocketTube(1) read demand reset to 0
05:07:43.285 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [954ms] SocketTube(1) calling onSubscribe
05:07:43.285 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [954ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.285 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [954ms] SocketTube(1) onSubscribe called
05:07:43.285 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [954ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.285 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [954ms] Http1Exchange setting outgoing with headers
05:07:43.285 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [954ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.285 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [954ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.285 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [954ms] SocketTube(1) pending subscriber subscribed
05:07:43.285 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [954ms] SocketTube(1) got some demand for reading
05:07:43.285 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [955ms] SocketTube(1) resuming read event
05:07:43.285 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [954ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.285 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [955ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.285 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [955ms] HttpClientImpl(1) next timeout: 299997
05:07:43.286 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [955ms] HttpClientImpl(1) next expired: 0
05:07:43.286 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [955ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.285 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [955ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.286 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [955ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.286 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [955ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.286 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [955ms] SocketTube(1) write: starting subscription
05:07:43.286 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [955ms] SocketTube(1) write: offloading requestMore
05:07:43.286 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [955ms] SocketTube(1) write: requesting more...
05:07:43.286 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [955ms] HttpClientImpl(1) next timeout: 299996
05:07:43.286 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [955ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.286 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [956ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.286 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [956ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.286 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [956ms] HttpClientImpl(1) next expired: 0
05:07:43.286 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [956ms] Http1Exchange initiating completion of headersSentCF
05:07:43.286 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [956ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.286 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [956ms] Exchange checkFor407: all clear
05:07:43.287 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-1] [956ms] Exchange sendRequestBody
05:07:43.287 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [956ms] Http1Exchange sendBodyAsync
05:07:43.287 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-1] [956ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.287 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [956ms] Http1Exchange requesting more request body from the subscriber
05:07:43.287 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [956ms] jdk.internal.net.http.Http1Request@485f734d Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@f26a5f5
05:07:43.287 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-1] [956ms] jdk.internal.net.http.Http1Request@485f734d onNext
05:07:43.287 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [956ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=41 cap=16384]], throwable=null]
05:07:43.287 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-1] [956ms] jdk.internal.net.http.Http1Request@485f734d onComplete
05:07:43.287 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [956ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.287 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [956ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.287 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [956ms] SocketTube(1) trying to write: 460
05:07:43.287 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [957ms] SocketTube(1) wrote: 460
05:07:43.287 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [957ms] SocketTube(1) write: requesting more...
05:07:43.287 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [957ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.287 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [957ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.287 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [957ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.287 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-1] [957ms] Http1Exchange requesting more request body from the subscriber
05:07:43.287 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-1] [957ms] jdk.internal.net.http.Http1Request@485f734d Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@f26a5f5
05:07:43.287 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [957ms] Http1Publisher(SocketTube(1)) onNext with 41 bytes
05:07:43.288 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [957ms] SocketTube(1) trying to write: 41
05:07:43.288 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-1] [957ms] SocketTube(1) wrote: 41
05:07:43.288 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [957ms] SocketTube(1) write: requesting more...
05:07:43.288 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [957ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.288 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [957ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.288 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [957ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.288 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-1] [957ms] Http1Exchange initiating completion of bodySentCF
05:07:43.288 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [957ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.288 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-1] [957ms] Http1Exchange reading headers
05:07:43.288 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [957ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.288 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [957ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.288 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-1] [957ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.288 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [957ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@4f0424dc
05:07:43.288 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [957ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.297 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [967ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.298 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [967ms] SocketTube(1) read bytes: 235
05:07:43.298 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [967ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.298 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [967ms] SocketTube(1) resuming read event
05:07:43.298 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [967ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@e51fabb
05:07:43.298 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [967ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.298 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [967ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@e51fabb
05:07:43.298 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [967ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.298 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [967ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.298 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [967ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [967ms] HttpClientImpl(1) next timeout: 299984
05:07:43.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [968ms] HttpClientImpl(1) next expired: 0
05:07:43.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [968ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.298 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.298 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@e51fabb
05:07:43.298 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.298 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-1] [968ms] Http1Exchange getResponseAsync completed successfully
05:07:43.298 DEBUG [Http1Response.readBody] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.299 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.299 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4e019ba5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@7432969d queue.isEmpty: false
05:07:43.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.299 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-1] [968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.299 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4e019ba5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@7432969d, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4e019ba5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@7432969d
05:07:43.299 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4e019ba5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@7432969d
05:07:43.299 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.299 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.299 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-1] [968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.299 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-1] [968ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.299 DEBUG [Http1Response.onFinished] - [pool-2-thread-1] [968ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.299 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-1] [969ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.299 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [969ms] SocketTube(1) connecting flows
05:07:43.299 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [969ms] SocketTube(1) read publisher got subscriber
05:07:43.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [969ms] SocketTube(1) registering subscribe event
05:07:43.299 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [969ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) subscribe event raised
05:07:43.299 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [969ms] SocketTube(1) subscribed for writing
05:07:43.300 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [969ms] SocketTube(1) write: resetting demand to 0
05:07:43.300 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [969ms] SocketTube(1) write: registering startSubscription event
05:07:43.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.300 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [969ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) read demand reset to 0
05:07:43.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) calling onSubscribe
05:07:43.300 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-1] [969ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) got some demand for reading
05:07:43.300 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 18ms
05:07:43.300 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-1] [969ms] Http1Response(id=14, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [969ms] SocketTube(1) resuming read event
05:07:43.300 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [970ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.300 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-1] [970ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.300 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=c7442c8005c73174, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=ea64ea60d2c35bc8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663282000000, endEpochNanos=1735189663300368609, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.300 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [970ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.301 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [970ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.301 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=3dfa59bb7ea25384, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=ea64ea60d2c35bc8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663282000000, endEpochNanos=1735189663300872768, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.301 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [970ms] SocketTube(1) onSubscribe called
05:07:43.301 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [970ms] SocketTube(1) pending subscriber subscribed
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [970ms] HttpClientImpl(1) next timeout: 0
05:07:43.301 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=de9516f92f68131c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=ea64ea60d2c35bc8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663281000000, endEpochNanos=1735189663300793646, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [970ms] HttpClientImpl(1) next expired: 1199699
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [970ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.301 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=b495c2c8e0517113739c034d67646c1b, spanId=ea64ea60d2c35bc8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663280000000, endEpochNanos=1735189663300435182, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.301 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [970ms] SocketTube(1) write: starting subscription
05:07:43.301 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [970ms] SocketTube(1) write: offloading requestMore
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [970ms] HttpClientImpl(1) next timeout: 0
05:07:43.301 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [970ms] SocketTube(1) write: requesting more...
05:07:43.301 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [971ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [971ms] HttpClientImpl(1) next expired: 1199699
05:07:43.301 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [971ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.303 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 24
05:07:43.303 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 24
05:07:43.303 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 24, cap: 24/24, unwrapped: PooledUnsafeDirectByteBuf(ridx: 293, widx: 293, cap: 432)), decoderResult: success)
05:07:43.303 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 24, widx: 24, cap: 24/24, unwrapped: PooledUnsafeDirectByteBuf(ridx: 293, widx: 293, cap: 432)), decoderResult: success)
05:07:43.304 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value into OpenTelemetrySpan{traceId=c8332a8117b314914332345020661f2f,spanId=a53eeca40faf04ad} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.305 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=c8332a8117b314914332345020661f2f, spanId=2bb024a541567688, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=a53eeca40faf04ad, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663305000000, endEpochNanos=0}}, span id=2bb024a541567688, trace id=c8332a8117b314914332345020661f2f} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=c8332a8117b314914332345020661f2f, spanId=49db2224acf811b2, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=a53eeca40faf04ad, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=ad6a031e-074d-4073-a08e-06fc699a9719}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663305000000, endEpochNanos=0}}, span id=49db2224acf811b2, trace id=c8332a8117b314914332345020661f2f}
05:07:43.306 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value into OpenTelemetrySpan{traceId=c8332a8117b314914332345020661f2f,spanId=49db2224acf811b2} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.306 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value
05:07:43.306 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [976ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value POST
05:07:43.307 DEBUG [Exchange.establishExchange] - [pool-2-thread-1] [976ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value POST,
	 proxy=null
05:07:43.307 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [976ms] HttpClientImpl(1) next timeout: 300000
05:07:43.307 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [976ms] HttpClientImpl(1) next expired: 1199693
05:07:43.307 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [976ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.307 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-1] [976ms] Http2ClientImpl not found in connection pool
05:07:43.307 DEBUG [ExchangeImpl.get] - [pool-2-thread-1] [976ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.307 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [976ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.307 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-1] [977ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.307 DEBUG [HttpConnection.getConnection] - [pool-2-thread-1] [977ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.307 DEBUG [Exchange.checkFor407] - [pool-2-thread-1] [977ms] Exchange checkFor407: all clear
05:07:43.307 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [977ms] Http1Exchange Sending headers only
05:07:43.307 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@2988b8bd queue.isEmpty: true
05:07:43.307 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@2988b8bd, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.308 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.308 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.308 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.308 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [977ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.308 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-1] [977ms] Http1Exchange response created in advance
05:07:43.308 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-1] [977ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.308 DEBUG [SocketTube.connectFlows] - [pool-2-thread-1] [977ms] SocketTube(1) connecting flows
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-1] [977ms] SocketTube(1) read publisher got subscriber
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-1] [977ms] SocketTube(1) registering subscribe event
05:07:43.308 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [977ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [977ms] SocketTube(1) subscribe event raised
05:07:43.308 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-1] [977ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.308 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [977ms] SocketTube(1) subscribed for writing
05:07:43.308 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-1] [977ms] SocketTube(1) write: resetting demand to 0
05:07:43.308 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-1] [977ms] SocketTube(1) write: registering startSubscription event
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [977ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@1e486e87
05:07:43.308 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [977ms] Http1Exchange requestAction.headers
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [978ms] SocketTube(1) read demand reset to 0
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [978ms] SocketTube(1) calling onSubscribe
05:07:43.308 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [978ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [978ms] SocketTube(1) onSubscribe called
05:07:43.308 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-1] [978ms] Http1Exchange setting outgoing with headers
05:07:43.309 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-1] [978ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:43.309 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [978ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.309 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-1] [978ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.308 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [978ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.308 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [978ms] SocketTube(1) pending subscriber subscribed
05:07:43.309 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [978ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.309 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [978ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.309 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [978ms] HttpClientImpl(1) next timeout: 299998
05:07:43.309 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [978ms] SocketTube(1) got some demand for reading
05:07:43.309 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [978ms] SocketTube(1) resuming read event
05:07:43.309 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [978ms] HttpClientImpl(1) next expired: 0
05:07:43.309 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [979ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.309 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [979ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.309 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [979ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.309 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [979ms] SocketTube(1) write: starting subscription
05:07:43.309 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [979ms] SocketTube(1) write: offloading requestMore
05:07:43.310 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [979ms] HttpClientImpl(1) next timeout: 299997
05:07:43.310 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [979ms] HttpClientImpl(1) next expired: 0
05:07:43.310 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [979ms] SocketTube(1) write: requesting more...
05:07:43.310 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [979ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.310 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [979ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.310 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [979ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.310 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [979ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.310 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [979ms] Http1Exchange initiating completion of headersSentCF
05:07:43.310 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [979ms] Exchange checkFor407: all clear
05:07:43.310 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [979ms] Exchange sendRequestBody
05:07:43.310 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [979ms] Http1Exchange sendBodyAsync
05:07:43.310 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [979ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.310 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [979ms] Http1Exchange requesting more request body from the subscriber
05:07:43.310 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [980ms] jdk.internal.net.http.Http1Request@948a8ae Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@673f4132
05:07:43.310 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [980ms] jdk.internal.net.http.Http1Request@948a8ae onNext
05:07:43.310 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [980ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=24 cap=16384]], throwable=null]
05:07:43.310 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [980ms] jdk.internal.net.http.Http1Request@948a8ae onComplete
05:07:43.310 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [980ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.310 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [980ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:43.310 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [980ms] SocketTube(1) trying to write: 516
05:07:43.311 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [980ms] SocketTube(1) wrote: 516
05:07:43.311 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [980ms] SocketTube(1) write: requesting more...
05:07:43.311 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [980ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.311 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [980ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.311 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [980ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.311 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [980ms] Http1Exchange requesting more request body from the subscriber
05:07:43.311 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [980ms] jdk.internal.net.http.Http1Request@948a8ae Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@673f4132
05:07:43.311 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [980ms] Http1Publisher(SocketTube(1)) onNext with 24 bytes
05:07:43.311 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [980ms] SocketTube(1) trying to write: 24
05:07:43.311 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [980ms] SocketTube(1) wrote: 24
05:07:43.311 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [980ms] SocketTube(1) write: requesting more...
05:07:43.311 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [980ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.311 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [980ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.311 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [980ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.311 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [980ms] Http1Exchange initiating completion of bodySentCF
05:07:43.311 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [981ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.311 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [981ms] Http1Exchange reading headers
05:07:43.311 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [981ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.311 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [981ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.311 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [981ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.311 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [981ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1a17c2f9
05:07:43.311 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [981ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.368 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 37ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.369 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 38ms] SocketTube(1) read bytes: 122
05:07:43.369 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 38ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.369 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 38ms] SocketTube(1) resuming read event
05:07:43.369 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 38ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.369 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 38ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@2988b8bd
05:07:43.369 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 38ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.369 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 38ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.369 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 38ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@2988b8bd
05:07:43.369 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 39ms] HttpClientImpl(1) next timeout: 299938
05:07:43.369 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 39ms] HttpClientImpl(1) next expired: 0
05:07:43.369 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 39ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.369 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 39ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.370 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 39ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.370 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 39ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@2988b8bd
05:07:43.370 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 39ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.370 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 39ms] Http1Exchange getResponseAsync completed successfully
05:07:43.370 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 39ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.370 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 39ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.370 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 39ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@13bda9cd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e964c59 queue.isEmpty: false
05:07:43.370 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.370 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 40ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.370 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@13bda9cd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e964c59, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.370 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@13bda9cd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e964c59
05:07:43.370 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.370 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@13bda9cd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@e964c59
05:07:43.370 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 40ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.371 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 40ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.371 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 40ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.371 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 40ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.371 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 40ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.371 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 40ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.371 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 40ms] SocketTube(1) connecting flows
05:07:43.371 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 40ms] SocketTube(1) read publisher got subscriber
05:07:43.371 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 40ms] SocketTube(1) registering subscribe event
05:07:43.371 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 40ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.371 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 40ms] SocketTube(1) subscribed for writing
05:07:43.371 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 40ms] SocketTube(1) write: resetting demand to 0
05:07:43.371 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 40ms] SocketTube(1) write: registering startSubscription event
05:07:43.371 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 40ms] SocketTube(1) subscribe event raised
05:07:43.371 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 41ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.371 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 41ms] Http1Response(id=15, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.371 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 41ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.371 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 41ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.371 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value in 65ms
05:07:43.371 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 41ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 41ms] SocketTube(1) read demand reset to 0
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 41ms] SocketTube(1) calling onSubscribe
05:07:43.372 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 41ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 41ms] SocketTube(1) got some demand for reading
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 41ms] SocketTube(1) resuming read event
05:07:43.372 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=2700d9571167f763, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=49db2224acf811b2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663306000000, endEpochNanos=1735189663371558294, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.372 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 41ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.372 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 42ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 42ms] SocketTube(1) onSubscribe called
05:07:43.372 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 42ms] SocketTube(1) pending subscriber subscribed
05:07:43.372 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=ee55576f95f9104a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=49db2224acf811b2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663306000000, endEpochNanos=1735189663372217453, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.372 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) next timeout: 0
05:07:43.373 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) next expired: 1199627
05:07:43.373 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.373 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 42ms] SocketTube(1) write: starting subscription
05:07:43.373 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=49db2224acf811b2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=a53eeca40faf04ad, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663305000000, endEpochNanos=1735189663372283070, attributes=AttributesMap{data={http.method=POST, random.key=ad6a031e-074d-4073-a08e-06fc699a9719, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="24", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value"}, epochNanos=1735189663372272521, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.373 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 42ms] SocketTube(1) write: offloading requestMore
05:07:43.373 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) next timeout: 0
05:07:43.373 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) next expired: 1199627
05:07:43.373 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 42ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.373 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 42ms] SocketTube(1) write: requesting more...
05:07:43.373 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 43ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.373 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "c8332a8117b314914332345020661f2f","eventTime": 1735189663372272521,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "24","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32\u002fvalue"}}

05:07:43.374 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=2bb024a541567688, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=a53eeca40faf04ad, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663305000000, endEpochNanos=1735189663373930271, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.374 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c8332a8117b314914332345020661f2f, spanId=a53eeca40faf04ad, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663304000000, endEpochNanos=1735189663373479294, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.375 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 52
05:07:43.375 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 52
05:07:43.375 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 52, cap: 52/52, unwrapped: PooledUnsafeDirectByteBuf(ridx: 240, widx: 240, cap: 432)), decoderResult: success)
05:07:43.375 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 52, widx: 52, cap: 52/52, unwrapped: PooledUnsafeDirectByteBuf(ridx: 240, widx: 240, cap: 432)), decoderResult: success)
05:07:43.385 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=fd6f13381132d23daf686cf3eab27875,spanId=c509dfda3d6315ae} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.386 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.387 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 56ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.387 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 57ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.387 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 57ms] HttpClientImpl(1) next timeout: 300000
05:07:43.388 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 57ms] Http2ClientImpl not found in connection pool
05:07:43.388 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 57ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.388 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 57ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.388 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 57ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.388 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 57ms] HttpClientImpl(1) next expired: 1199612
05:07:43.388 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 57ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.388 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 57ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.388 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 58ms] Exchange checkFor407: all clear
05:07:43.388 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 58ms] Http1Exchange Sending headers only
05:07:43.388 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@66739a54 queue.isEmpty: true
05:07:43.388 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@66739a54, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.388 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.389 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.389 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.389 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 58ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.389 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 58ms] Http1Exchange response created in advance
05:07:43.389 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 58ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.389 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 58ms] SocketTube(1) connecting flows
05:07:43.389 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 58ms] SocketTube(1) read publisher got subscriber
05:07:43.389 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 58ms] SocketTube(1) registering subscribe event
05:07:43.389 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 58ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.389 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 58ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.389 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 58ms] SocketTube(1) subscribed for writing
05:07:43.389 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 58ms] SocketTube(1) write: resetting demand to 0
05:07:43.389 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 59ms] SocketTube(1) write: registering startSubscription event
05:07:43.389 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 58ms] SocketTube(1) subscribe event raised
05:07:43.389 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 59ms] Http1Exchange requestAction.headers
05:07:43.389 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 59ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@256e89f
05:07:43.389 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 59ms] SocketTube(1) read demand reset to 0
05:07:43.390 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 59ms] SocketTube(1) calling onSubscribe
05:07:43.390 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 59ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.390 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 59ms] Http1Exchange setting outgoing with headers
05:07:43.390 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 59ms] SocketTube(1) onSubscribe called
05:07:43.390 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 59ms] SocketTube(1) pending subscriber subscribed
05:07:43.390 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 59ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.390 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [1s 59ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.390 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 59ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.390 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 59ms] HttpClientImpl(1) next timeout: 299997
05:07:43.390 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 59ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.390 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [1s 59ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.390 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 59ms] HttpClientImpl(1) next expired: 0
05:07:43.390 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 60ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.390 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [1s 60ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.390 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [1s 60ms] SocketTube(1) got some demand for reading
05:07:43.391 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [1s 60ms] SocketTube(1) resuming read event
05:07:43.390 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 60ms] SocketTube(1) write: starting subscription
05:07:43.391 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 60ms] SocketTube(1) write: offloading requestMore
05:07:43.391 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [1s 60ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 60ms] HttpClientImpl(1) next timeout: 299996
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 60ms] HttpClientImpl(1) next expired: 0
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 60ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.391 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 60ms] SocketTube(1) write: requesting more...
05:07:43.391 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 60ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.391 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 60ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.391 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 61ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 61ms] HttpClientImpl(1) next timeout: 299996
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 61ms] HttpClientImpl(1) next expired: 0
05:07:43.391 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 61ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.391 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 61ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.391 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 61ms] Http1Exchange initiating completion of headersSentCF
05:07:43.392 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 61ms] Exchange checkFor407: all clear
05:07:43.392 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 61ms] Exchange sendRequestBody
05:07:43.392 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 61ms] Http1Exchange sendBodyAsync
05:07:43.392 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 61ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.392 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 61ms] Http1Exchange requesting more request body from the subscriber
05:07:43.392 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 61ms] jdk.internal.net.http.Http1Request@2436c744 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@187eb496
05:07:43.392 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 61ms] jdk.internal.net.http.Http1Request@2436c744 onNext
05:07:43.392 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 61ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=52 cap=16384]], throwable=null]
05:07:43.392 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 61ms] jdk.internal.net.http.Http1Request@2436c744 onComplete
05:07:43.392 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 61ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.392 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 61ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.392 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 61ms] SocketTube(1) trying to write: 460
05:07:43.392 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 62ms] SocketTube(1) wrote: 460
05:07:43.392 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 62ms] SocketTube(1) write: requesting more...
05:07:43.392 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 62ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.392 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 62ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.392 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 62ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.392 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 62ms] Http1Exchange requesting more request body from the subscriber
05:07:43.392 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 62ms] jdk.internal.net.http.Http1Request@2436c744 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@187eb496
05:07:43.392 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 62ms] Http1Publisher(SocketTube(1)) onNext with 52 bytes
05:07:43.392 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 62ms] SocketTube(1) trying to write: 52
05:07:43.393 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 62ms] SocketTube(1) wrote: 52
05:07:43.393 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 62ms] SocketTube(1) write: requesting more...
05:07:43.393 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 62ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.393 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 62ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.393 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 62ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.393 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 62ms] Http1Exchange initiating completion of bodySentCF
05:07:43.393 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 62ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.393 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 62ms] Http1Exchange reading headers
05:07:43.393 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 62ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.393 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 62ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.393 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 62ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.393 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 62ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@5ad8b34f
05:07:43.393 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 62ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.402 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 71ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.402 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 71ms] SocketTube(1) read bytes: 235
05:07:43.402 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 71ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.402 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 71ms] SocketTube(1) resuming read event
05:07:43.402 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 71ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@66739a54
05:07:43.402 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 71ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.402 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 72ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.402 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 71ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.402 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 72ms] HttpClientImpl(1) next timeout: 299985
05:07:43.402 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 72ms] HttpClientImpl(1) next expired: 0
05:07:43.402 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 72ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.402 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 72ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@66739a54
05:07:43.403 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 72ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.403 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 72ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.403 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 72ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@66739a54
05:07:43.403 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 72ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.403 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 72ms] Http1Exchange getResponseAsync completed successfully
05:07:43.403 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 72ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.403 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 72ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.403 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 72ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@2003237a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4d34f9e8 queue.isEmpty: false
05:07:43.403 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.403 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 73ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.403 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@2003237a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4d34f9e8, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.403 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@2003237a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4d34f9e8
05:07:43.403 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.403 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@2003237a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4d34f9e8
05:07:43.403 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 73ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.404 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 73ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.404 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 73ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.404 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.404 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 73ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.404 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 73ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.404 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 73ms] SocketTube(1) connecting flows
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 73ms] SocketTube(1) read publisher got subscriber
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 73ms] SocketTube(1) registering subscribe event
05:07:43.404 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 73ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.404 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 73ms] SocketTube(1) subscribed for writing
05:07:43.404 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 73ms] SocketTube(1) write: resetting demand to 0
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 73ms] SocketTube(1) subscribe event raised
05:07:43.404 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 73ms] SocketTube(1) write: registering startSubscription event
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 73ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.404 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 73ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 74ms] SocketTube(1) read demand reset to 0
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 74ms] SocketTube(1) calling onSubscribe
05:07:43.404 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 18ms
05:07:43.404 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=4cc253573934ee08, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=c509dfda3d6315ae, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663386000000, endEpochNanos=1735189663404171045, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.405 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=cfa8e585ab52d544, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=c509dfda3d6315ae, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663386000000, endEpochNanos=1735189663404437813, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.405 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=2670fa59f1cfa02c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=c509dfda3d6315ae, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663386000000, endEpochNanos=1735189663405083396, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.405 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=fd6f13381132d23daf686cf3eab27875, spanId=c509dfda3d6315ae, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663385000000, endEpochNanos=1735189663404679508, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.404 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 74ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.404 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 74ms] SocketTube(1) got some demand for reading
05:07:43.405 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) resuming read event
05:07:43.405 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 75ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.405 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.405 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) onSubscribe called
05:07:43.405 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) pending subscriber subscribed
05:07:43.405 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 75ms] HttpClientImpl(1) next timeout: 0
05:07:43.405 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 75ms] HttpClientImpl(1) next expired: 1199595
05:07:43.405 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 75ms] Http1Response(id=16, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.406 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 75ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.406 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 75ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.406 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) write: starting subscription
05:07:43.406 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.406 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.406 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 75ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.406 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 75ms] SocketTube(1) write: offloading requestMore
05:07:43.406 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 416)), decoderResult: success)
05:07:43.406 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 75ms] SocketTube(1) write: requesting more...
05:07:43.406 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 2, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 416)), decoderResult: success)
05:07:43.406 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 75ms] HttpClientImpl(1) next timeout: 0
05:07:43.406 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 76ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.406 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 76ms] HttpClientImpl(1) next expired: 1199594
05:07:43.406 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 76ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.407 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click into OpenTelemetrySpan{traceId=85063f3ddc129f2c7b407bb33255a28f,spanId=aec9458906ba8dd5} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.408 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=80c14517b262804d, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=aec9458906ba8dd5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663407000000, endEpochNanos=0}}, span id=80c14517b262804d, trace id=85063f3ddc129f2c7b407bb33255a28f} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=5ccc1aeed68b226d, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=aec9458906ba8dd5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=dd4523c7-f381-4994-9c80-6b2de01d421d}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663408000000, endEpochNanos=0}}, span id=5ccc1aeed68b226d, trace id=85063f3ddc129f2c7b407bb33255a28f}
05:07:43.408 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click into OpenTelemetrySpan{traceId=85063f3ddc129f2c7b407bb33255a28f,spanId=5ccc1aeed68b226d} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.408 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click
05:07:43.409 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 78ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click POST
05:07:43.409 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 78ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click POST,
	 proxy=null
05:07:43.409 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 78ms] HttpClientImpl(1) next timeout: 300000
05:07:43.409 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 78ms] Http2ClientImpl not found in connection pool
05:07:43.409 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 78ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.409 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 78ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.409 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 78ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.409 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 78ms] HttpClientImpl(1) next expired: 1199591
05:07:43.409 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 79ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.409 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 79ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.409 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 79ms] Exchange checkFor407: all clear
05:07:43.409 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 79ms] Http1Exchange Sending headers only
05:07:43.410 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@40f7998c queue.isEmpty: true
05:07:43.410 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@40f7998c, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.410 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.410 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.410 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.410 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 79ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.410 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 79ms] Http1Exchange response created in advance
05:07:43.410 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 79ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.410 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 79ms] SocketTube(1) connecting flows
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 79ms] SocketTube(1) read publisher got subscriber
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 79ms] SocketTube(1) registering subscribe event
05:07:43.410 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 79ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 79ms] SocketTube(1) subscribe event raised
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 79ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@7bcf97aa
05:07:43.410 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 79ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.410 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 79ms] SocketTube(1) subscribed for writing
05:07:43.410 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 80ms] SocketTube(1) write: resetting demand to 0
05:07:43.410 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 80ms] SocketTube(1) write: registering startSubscription event
05:07:43.410 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 80ms] Http1Exchange requestAction.headers
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 79ms] SocketTube(1) read demand reset to 0
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 80ms] SocketTube(1) calling onSubscribe
05:07:43.410 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 80ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.410 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 80ms] Http1Exchange setting outgoing with headers
05:07:43.410 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 80ms] SocketTube(1) onSubscribe called
05:07:43.411 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-1] [1s 80ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.411 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 80ms] SocketTube(1) pending subscriber subscribed
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 80ms] HttpClientImpl(1) next timeout: 299998
05:07:43.411 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 80ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=515 cap=515]], throwable=null]
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 80ms] HttpClientImpl(1) next expired: 0
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 80ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.411 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-1] [1s 80ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.411 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-1] [1s 80ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.411 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-1] [1s 80ms] SocketTube(1) got some demand for reading
05:07:43.411 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-1] [1s 80ms] SocketTube(1) resuming read event
05:07:43.411 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 80ms] SocketTube(1) write: starting subscription
05:07:43.411 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 81ms] SocketTube(1) write: offloading requestMore
05:07:43.411 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 80ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) next timeout: 299998
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) next expired: 0
05:07:43.411 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.411 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [1s 80ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.411 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 81ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.412 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) next timeout: 299997
05:07:43.412 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) next expired: 0
05:07:43.412 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 81ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.411 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 81ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.411 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 81ms] SocketTube(1) write: requesting more...
05:07:43.412 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 81ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.412 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 81ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.412 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 81ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.412 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 81ms] Http1Exchange initiating completion of headersSentCF
05:07:43.412 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 81ms] Exchange checkFor407: all clear
05:07:43.412 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 81ms] Exchange sendRequestBody
05:07:43.412 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 81ms] Http1Exchange sendBodyAsync
05:07:43.412 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 82ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.412 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 82ms] Http1Exchange requesting more request body from the subscriber
05:07:43.412 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 82ms] jdk.internal.net.http.Http1Request@166c6ce2 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@1253fa70
05:07:43.412 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 82ms] jdk.internal.net.http.Http1Request@166c6ce2 onNext
05:07:43.412 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 82ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=2 cap=16384]], throwable=null]
05:07:43.412 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 82ms] jdk.internal.net.http.Http1Request@166c6ce2 onComplete
05:07:43.412 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 82ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.413 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 82ms] Http1Publisher(SocketTube(1)) onNext with 515 bytes
05:07:43.413 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 82ms] SocketTube(1) trying to write: 515
05:07:43.413 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 82ms] SocketTube(1) wrote: 515
05:07:43.413 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 82ms] SocketTube(1) write: requesting more...
05:07:43.413 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 82ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.413 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 82ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.413 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 82ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.413 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 83ms] Http1Exchange requesting more request body from the subscriber
05:07:43.413 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 83ms] jdk.internal.net.http.Http1Request@166c6ce2 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@1253fa70
05:07:43.413 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 83ms] Http1Publisher(SocketTube(1)) onNext with 2 bytes
05:07:43.413 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 83ms] SocketTube(1) trying to write: 2
05:07:43.413 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 83ms] SocketTube(1) wrote: 2
05:07:43.414 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 83ms] SocketTube(1) write: requesting more...
05:07:43.414 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 83ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.414 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 83ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.414 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 83ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.414 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 83ms] Http1Exchange initiating completion of bodySentCF
05:07:43.414 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 83ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.414 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 83ms] Http1Exchange reading headers
05:07:43.414 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 83ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.414 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 83ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.414 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 83ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.414 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 83ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@536ef04b
05:07:43.414 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 83ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.472 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 141ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.473 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 142ms] SocketTube(1) read bytes: 122
05:07:43.473 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 142ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.473 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 142ms] SocketTube(1) resuming read event
05:07:43.473 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 142ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@40f7998c
05:07:43.473 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 142ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.473 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 142ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.473 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 142ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.473 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 142ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@40f7998c
05:07:43.473 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 142ms] HttpClientImpl(1) next timeout: 299936
05:07:43.473 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.473 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 143ms] HttpClientImpl(1) next expired: 0
05:07:43.473 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.473 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@40f7998c
05:07:43.473 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 143ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.473 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.474 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 143ms] Http1Exchange getResponseAsync completed successfully
05:07:43.474 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.474 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.474 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@6f7ad523/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62f722c6 queue.isEmpty: false
05:07:43.474 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.474 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 143ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.474 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@6f7ad523/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62f722c6, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.474 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@6f7ad523/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62f722c6
05:07:43.474 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.474 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 143ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@6f7ad523/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@62f722c6
05:07:43.474 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 143ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.474 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 144ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.474 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 144ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.474 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 144ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.474 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 144ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.474 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 144ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.474 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 144ms] SocketTube(1) connecting flows
05:07:43.474 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 144ms] SocketTube(1) read publisher got subscriber
05:07:43.474 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 144ms] SocketTube(1) registering subscribe event
05:07:43.475 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 144ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.475 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 144ms] SocketTube(1) subscribed for writing
05:07:43.475 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 144ms] SocketTube(1) write: resetting demand to 0
05:07:43.475 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 144ms] SocketTube(1) write: registering startSubscription event
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 144ms] SocketTube(1) subscribe event raised
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 144ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.475 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 144ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 144ms] SocketTube(1) read demand reset to 0
05:07:43.475 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 144ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.475 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click in 67ms
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 144ms] SocketTube(1) calling onSubscribe
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) got some demand for reading
05:07:43.475 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=d783537df6e0b97e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=5ccc1aeed68b226d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663408000000, endEpochNanos=1735189663474957376, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.475 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 144ms] Http1Response(id=17, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.475 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=4acd31b2de01107b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=5ccc1aeed68b226d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663408000000, endEpochNanos=1735189663475239471, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.475 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) resuming read event
05:07:43.475 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 145ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.475 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 145ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.476 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.476 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=5ccc1aeed68b226d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=aec9458906ba8dd5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663408000000, endEpochNanos=1735189663475855700, attributes=AttributesMap{data={http.method=POST, random.key=dd4523c7-f381-4994-9c80-6b2de01d421d, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="2", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click"}, epochNanos=1735189663475845932, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.476 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 145ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.476 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) onSubscribe called
05:07:43.476 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) pending subscriber subscribed
05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 145ms] HttpClientImpl(1) next timeout: 0
05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 145ms] HttpClientImpl(1) next expired: 1199524
05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 145ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.476 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) write: starting subscription
05:07:43.476 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 145ms] SocketTube(1) write: offloading requestMore
05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 145ms] HttpClientImpl(1) next timeout: 0
05:07:43.476 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 145ms] SocketTube(1) write: requesting more...
05:07:43.476 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "85063f3ddc129f2c7b407bb33255a28f","eventTime": 1735189663475845932,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "2","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35\u002fclick"}}

05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 146ms] HttpClientImpl(1) next expired: 1199524
05:07:43.476 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 146ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.476 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 146ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.476 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=80c14517b262804d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=aec9458906ba8dd5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663407000000, endEpochNanos=1735189663476074964, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.477 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=85063f3ddc129f2c7b407bb33255a28f, spanId=aec9458906ba8dd5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663407000000, endEpochNanos=1735189663476577070, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.478 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 53
05:07:43.478 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 53
05:07:43.478 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 53, cap: 53/53, unwrapped: PooledUnsafeDirectByteBuf(ridx: 241, widx: 241, cap: 416)), decoderResult: success)
05:07:43.479 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 53, widx: 53, cap: 53/53, unwrapped: PooledUnsafeDirectByteBuf(ridx: 241, widx: 241, cap: 416)), decoderResult: success)
05:07:43.480 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=467f1d1086ef7634cf362389ad5c21df,spanId=bfaa71143a92b5d5} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.481 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.481 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 150ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.481 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 151ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.481 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 151ms] HttpClientImpl(1) next timeout: 300000
05:07:43.482 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 151ms] Http2ClientImpl not found in connection pool
05:07:43.482 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 151ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.482 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 151ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.482 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 151ms] HttpClientImpl(1) next expired: 1199518
05:07:43.482 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 151ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.482 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 151ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.482 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 151ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.482 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 151ms] Exchange checkFor407: all clear
05:07:43.482 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 152ms] Http1Exchange Sending headers only
05:07:43.482 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@33410f04 queue.isEmpty: true
05:07:43.482 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@33410f04, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.482 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.482 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.482 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.482 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.482 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 152ms] Http1Exchange response created in advance
05:07:43.482 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 152ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.483 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 152ms] SocketTube(1) connecting flows
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 152ms] SocketTube(1) read publisher got subscriber
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 152ms] SocketTube(1) registering subscribe event
05:07:43.483 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 152ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 152ms] SocketTube(1) subscribe event raised
05:07:43.483 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 152ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.483 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 152ms] SocketTube(1) subscribed for writing
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 152ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@2f487e06
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 152ms] SocketTube(1) read demand reset to 0
05:07:43.483 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 152ms] SocketTube(1) write: resetting demand to 0
05:07:43.483 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 152ms] SocketTube(1) write: registering startSubscription event
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 152ms] SocketTube(1) calling onSubscribe
05:07:43.483 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 152ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.483 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 152ms] Http1Exchange requestAction.headers
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 153ms] SocketTube(1) onSubscribe called
05:07:43.483 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 153ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.483 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 153ms] Http1Exchange setting outgoing with headers
05:07:43.483 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 153ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.483 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 153ms] SocketTube(1) pending subscriber subscribed
05:07:43.483 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 153ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.484 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 153ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.483 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 153ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.484 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 153ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.484 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 153ms] SocketTube(1) got some demand for reading
05:07:43.484 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 153ms] SocketTube(1) resuming read event
05:07:43.484 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 153ms] HttpClientImpl(1) next timeout: 299997
05:07:43.484 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 153ms] HttpClientImpl(1) next expired: 0
05:07:43.484 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 153ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.484 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 153ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.484 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 154ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.484 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 154ms] SocketTube(1) write: starting subscription
05:07:43.484 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 154ms] SocketTube(1) write: offloading requestMore
05:07:43.484 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 154ms] HttpClientImpl(1) next timeout: 299997
05:07:43.484 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 154ms] SocketTube(1) write: requesting more...
05:07:43.484 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 154ms] HttpClientImpl(1) next expired: 0
05:07:43.484 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 154ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.485 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 154ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.485 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 154ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.485 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 154ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.485 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 154ms] Http1Exchange initiating completion of headersSentCF
05:07:43.485 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 154ms] Exchange checkFor407: all clear
05:07:43.485 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 154ms] Exchange sendRequestBody
05:07:43.485 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 154ms] Http1Exchange sendBodyAsync
05:07:43.485 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 154ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.485 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 154ms] Http1Exchange requesting more request body from the subscriber
05:07:43.485 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 154ms] jdk.internal.net.http.Http1Request@13473770 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@79d67a1b
05:07:43.485 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 154ms] jdk.internal.net.http.Http1Request@13473770 onNext
05:07:43.485 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 154ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=53 cap=16384]], throwable=null]
05:07:43.485 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 154ms] jdk.internal.net.http.Http1Request@13473770 onComplete
05:07:43.485 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 155ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.485 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 155ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.485 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 155ms] SocketTube(1) trying to write: 460
05:07:43.485 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 155ms] SocketTube(1) wrote: 460
05:07:43.485 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 155ms] SocketTube(1) write: requesting more...
05:07:43.486 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 155ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.486 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 155ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.486 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 155ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.486 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 155ms] Http1Exchange requesting more request body from the subscriber
05:07:43.486 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 155ms] jdk.internal.net.http.Http1Request@13473770 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@79d67a1b
05:07:43.486 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 155ms] Http1Publisher(SocketTube(1)) onNext with 53 bytes
05:07:43.486 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 155ms] SocketTube(1) trying to write: 53
05:07:43.486 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 155ms] SocketTube(1) wrote: 53
05:07:43.486 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 155ms] SocketTube(1) write: requesting more...
05:07:43.486 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 155ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.486 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 155ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.486 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 155ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.486 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 155ms] Http1Exchange initiating completion of bodySentCF
05:07:43.486 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 155ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.486 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 155ms] Http1Exchange reading headers
05:07:43.486 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 155ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.486 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 155ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.486 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 155ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.486 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 156ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1cbd2396
05:07:43.486 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 156ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.496 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 165ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.496 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 165ms] SocketTube(1) read bytes: 235
05:07:43.496 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 165ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.496 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 165ms] SocketTube(1) resuming read event
05:07:43.496 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 165ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@33410f04
05:07:43.496 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 166ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.496 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 165ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.496 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 166ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.496 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 166ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@33410f04
05:07:43.496 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 166ms] HttpClientImpl(1) next timeout: 299985
05:07:43.496 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 166ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.496 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 166ms] HttpClientImpl(1) next expired: 0
05:07:43.497 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 166ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.497 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 166ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.497 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 166ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@33410f04
05:07:43.497 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 166ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.497 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 166ms] Http1Exchange getResponseAsync completed successfully
05:07:43.497 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 166ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.497 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 166ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.497 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 166ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@607af274/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2ab65ac2 queue.isEmpty: false
05:07:43.497 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.497 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 167ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.497 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@607af274/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2ab65ac2, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.497 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@607af274/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2ab65ac2
05:07:43.497 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.497 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@607af274/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2ab65ac2
05:07:43.497 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 167ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.497 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 167ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.497 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 167ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.497 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 167ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.498 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 167ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.498 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 167ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.498 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 167ms] SocketTube(1) connecting flows
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 167ms] SocketTube(1) read publisher got subscriber
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 167ms] SocketTube(1) registering subscribe event
05:07:43.498 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 167ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.498 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 167ms] SocketTube(1) subscribed for writing
05:07:43.498 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 167ms] SocketTube(1) write: resetting demand to 0
05:07:43.498 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 167ms] SocketTube(1) write: registering startSubscription event
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 167ms] SocketTube(1) subscribe event raised
05:07:43.498 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 167ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.498 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 167ms] Http1Response(id=18, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 167ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.498 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 168ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) read demand reset to 0
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) calling onSubscribe
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) got some demand for reading
05:07:43.498 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 168ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.498 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) resuming read event
05:07:43.498 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 17ms
05:07:43.499 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 168ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.499 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 168ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.499 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.499 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) onSubscribe called
05:07:43.499 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=c33fdd9ec1f5bc9c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=bfaa71143a92b5d5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663481000000, endEpochNanos=1735189663499153876, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.499 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 168ms] SocketTube(1) pending subscriber subscribed
05:07:43.499 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=3701c96a59dffdee, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=bfaa71143a92b5d5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663481000000, endEpochNanos=1735189663499672312, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.499 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) next timeout: 0
05:07:43.499 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=ad69f5dad6a178fb, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=bfaa71143a92b5d5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663480000000, endEpochNanos=1735189663499439663, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.499 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) next expired: 1199501
05:07:43.499 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=467f1d1086ef7634cf362389ad5c21df, spanId=bfaa71143a92b5d5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663479000000, endEpochNanos=1735189663499034311, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.499 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.500 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 169ms] SocketTube(1) write: starting subscription
05:07:43.500 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 169ms] SocketTube(1) write: offloading requestMore
05:07:43.500 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) next timeout: 0
05:07:43.500 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) next expired: 1199500
05:07:43.500 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 169ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.500 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 169ms] SocketTube(1) write: requesting more...
05:07:43.500 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 169ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.501 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.501 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.501 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.501 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.502 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed into OpenTelemetrySpan{traceId=484f800af9c860c7883dd2a4490a92f7,spanId=71b6e2518f910cb2} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.503 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=992e1382974bc085, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=71b6e2518f910cb2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663503000000, endEpochNanos=0}}, span id=992e1382974bc085, trace id=484f800af9c860c7883dd2a4490a92f7} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=dda070c86b4ecb04, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=71b6e2518f910cb2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=a7851594-53f1-4980-b0bb-502c85f744e1}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663503000000, endEpochNanos=0}}, span id=dda070c86b4ecb04, trace id=484f800af9c860c7883dd2a4490a92f7}
05:07:43.504 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed into OpenTelemetrySpan{traceId=484f800af9c860c7883dd2a4490a92f7,spanId=dda070c86b4ecb04} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.504 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed
05:07:43.504 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 174ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed GET
05:07:43.504 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 174ms] HttpClientImpl(1) next timeout: 300000
05:07:43.504 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 174ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed GET,
	 proxy=null
05:07:43.505 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 174ms] HttpClientImpl(1) next expired: 1199495
05:07:43.505 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 174ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.505 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 174ms] Http2ClientImpl not found in connection pool
05:07:43.505 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 174ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.505 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 174ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.505 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 174ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.505 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 174ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.505 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 175ms] Exchange checkFor407: all clear
05:07:43.505 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 175ms] Http1Exchange Sending headers only
05:07:43.505 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@75b4265a queue.isEmpty: true
05:07:43.505 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@75b4265a, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.505 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.505 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.506 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.506 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 175ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.506 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 175ms] Http1Exchange response created in advance
05:07:43.506 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 175ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.506 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 175ms] SocketTube(1) connecting flows
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 175ms] SocketTube(1) read publisher got subscriber
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 175ms] SocketTube(1) registering subscribe event
05:07:43.506 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 175ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.506 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 175ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.506 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 175ms] SocketTube(1) subscribed for writing
05:07:43.506 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 175ms] SocketTube(1) write: resetting demand to 0
05:07:43.506 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 175ms] SocketTube(1) write: registering startSubscription event
05:07:43.506 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 175ms] Http1Exchange requestAction.headers
05:07:43.506 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 176ms] Http1Exchange setting outgoing with headers
05:07:43.506 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 176ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=518 cap=518]], throwable=null]
05:07:43.506 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 176ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.506 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 176ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 175ms] SocketTube(1) subscribe event raised
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 176ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@7229013e
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 176ms] SocketTube(1) read demand reset to 0
05:07:43.506 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 176ms] SocketTube(1) calling onSubscribe
05:07:43.507 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 176ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.507 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 176ms] SocketTube(1) onSubscribe called
05:07:43.507 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 176ms] SocketTube(1) pending subscriber subscribed
05:07:43.507 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 176ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.507 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 176ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.507 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 176ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 176ms] HttpClientImpl(1) next timeout: 299997
05:07:43.507 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 176ms] SocketTube(1) got some demand for reading
05:07:43.507 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 176ms] SocketTube(1) resuming read event
05:07:43.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 176ms] HttpClientImpl(1) next expired: 0
05:07:43.507 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 176ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 176ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.507 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 177ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.507 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 177ms] SocketTube(1) write: starting subscription
05:07:43.507 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 177ms] SocketTube(1) write: offloading requestMore
05:07:43.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 177ms] HttpClientImpl(1) next timeout: 299997
05:07:43.507 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 177ms] SocketTube(1) write: requesting more...
05:07:43.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 177ms] HttpClientImpl(1) next expired: 0
05:07:43.507 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 177ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.508 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 177ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.508 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 177ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.508 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 177ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.508 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 177ms] Http1Exchange initiating completion of headersSentCF
05:07:43.508 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 177ms] Exchange checkFor407: all clear
05:07:43.508 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 177ms] Exchange sendRequestBody
05:07:43.508 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 177ms] Http1Exchange sendBodyAsync
05:07:43.508 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 177ms] Http1Exchange bodySubscriber is null
05:07:43.508 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 177ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.508 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 177ms] Http1Publisher(SocketTube(1)) onNext with 518 bytes
05:07:43.508 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 177ms] SocketTube(1) trying to write: 518
05:07:43.508 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 177ms] SocketTube(1) wrote: 518
05:07:43.508 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 178ms] SocketTube(1) write: requesting more...
05:07:43.508 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 178ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.508 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 178ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.508 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 178ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.508 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 178ms] Http1Exchange initiating completion of bodySentCF
05:07:43.508 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 178ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.508 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 178ms] Http1Exchange reading headers
05:07:43.508 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 178ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.508 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 178ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.508 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 178ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.509 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 178ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@42ea83ca
05:07:43.509 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 178ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.518 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 187ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.518 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 187ms] SocketTube(1) read bytes: 123
05:07:43.518 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 187ms] Http1AsyncReceiver(SocketTube(1)) Putting 123 bytes into the queue
05:07:43.518 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 187ms] Http1AsyncReceiver(SocketTube(1)) Got 123 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@75b4265a
05:07:43.518 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 187ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.518 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 187ms] SocketTube(1) resuming read event
05:07:43.518 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 188ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.518 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 188ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.518 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 187ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 123 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@75b4265a
05:07:43.518 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 188ms] HttpClientImpl(1) next timeout: 299986
05:07:43.518 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 188ms] HttpClientImpl(1) next expired: 0
05:07:43.518 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 188ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Sending 123/123 bytes to header parser
05:07:43.518 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 188ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.519 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 188ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.519 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@75b4265a
05:07:43.519 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 188ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.519 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 188ms] Http1Exchange getResponseAsync completed successfully
05:07:43.519 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 188ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.519 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 188ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.519 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@5a92a11f/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5a507482 queue.isEmpty: false
05:07:43.519 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 15
05:07:43.519 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 188ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=15, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.519 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@5a92a11f/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5a507482, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.519 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) Got 15 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@5a92a11f/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5a507482
05:07:43.519 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.519 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 188ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 15 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@5a92a11f/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5a507482
05:07:43.519 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 189ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Sending 15/123 bytes to body parser
05:07:43.519 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 189ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 15 bytes (15 remaining / 15)
05:07:43.519 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 189ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.519 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 189ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.519 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 189ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.519 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 189ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.519 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 189ms] SocketTube(1) connecting flows
05:07:43.519 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 189ms] SocketTube(1) read publisher got subscriber
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 189ms] SocketTube(1) registering subscribe event
05:07:43.520 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 189ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.520 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 189ms] SocketTube(1) subscribed for writing
05:07:43.520 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 189ms] SocketTube(1) write: resetting demand to 0
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) subscribe event raised
05:07:43.520 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 189ms] SocketTube(1) write: registering startSubscription event
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.520 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 189ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) read demand reset to 0
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) calling onSubscribe
05:07:43.520 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 189ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.520 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 189ms] Http1Response(id=19, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) got some demand for reading
05:07:43.520 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 189ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.520 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 190ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.520 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed in 16ms
05:07:43.520 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 189ms] SocketTube(1) resuming read event
05:07:43.520 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=6bb61826d7286c46, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=dda070c86b4ecb04, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663504000000, endEpochNanos=1735189663520430389, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.520 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 190ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.521 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 190ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.521 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 190ms] SocketTube(1) onSubscribe called
05:07:43.521 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 190ms] SocketTube(1) pending subscriber subscribed
05:07:43.521 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=97d6154ede9d2012, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=dda070c86b4ecb04, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663504000000, endEpochNanos=1735189663520659256, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 190ms] HttpClientImpl(1) next timeout: 0
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 190ms] HttpClientImpl(1) next expired: 1199479
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 190ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.521 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=dda070c86b4ecb04, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=71b6e2518f910cb2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663503000000, endEpochNanos=1735189663520430715, attributes=AttributesMap{data={http.method=GET, random.key=a7851594-53f1-4980-b0bb-502c85f744e1, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed"}, epochNanos=1735189663520422670, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.521 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 190ms] SocketTube(1) write: starting subscription
05:07:43.521 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 190ms] SocketTube(1) write: offloading requestMore
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 190ms] HttpClientImpl(1) next timeout: 0
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 191ms] HttpClientImpl(1) next expired: 1199479
05:07:43.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 191ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.521 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 190ms] SocketTube(1) write: requesting more...
05:07:43.521 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 191ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.521 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "484f800af9c860c7883dd2a4490a92f7","eventTime": 1735189663520422670,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42\u002fdisplayed"}}

05:07:43.521 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=992e1382974bc085, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=71b6e2518f910cb2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663503000000, endEpochNanos=1735189663521637084, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.522 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=484f800af9c860c7883dd2a4490a92f7, spanId=71b6e2518f910cb2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663502000000, endEpochNanos=1735189663521266688, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.42/displayed, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.523 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.523 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.523 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 400)), decoderResult: success)
05:07:43.523 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 2, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 400)), decoderResult: success)
05:07:43.524 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear into OpenTelemetrySpan{traceId=bc9beb58fe74df6001587b4695127548,spanId=8d5a75da2bbdf055} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.525 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=bc9beb58fe74df6001587b4695127548, spanId=349021d30006b0ff, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=8d5a75da2bbdf055, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663524000000, endEpochNanos=0}}, span id=349021d30006b0ff, trace id=bc9beb58fe74df6001587b4695127548} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=bc9beb58fe74df6001587b4695127548, spanId=6db0c3f4c081f334, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=8d5a75da2bbdf055, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=870579a7-1dcb-4ab4-999b-75addc20eda5}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663525000000, endEpochNanos=0}}, span id=6db0c3f4c081f334, trace id=bc9beb58fe74df6001587b4695127548}
05:07:43.525 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear into OpenTelemetrySpan{traceId=bc9beb58fe74df6001587b4695127548,spanId=6db0c3f4c081f334} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.525 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear
05:07:43.525 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 195ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear POST
05:07:43.526 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 195ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear POST,
	 proxy=null
05:07:43.526 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 195ms] HttpClientImpl(1) next timeout: 299999
05:07:43.526 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 195ms] HttpClientImpl(1) next expired: 1199474
05:07:43.526 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 195ms] Http2ClientImpl not found in connection pool
05:07:43.526 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 195ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.526 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 195ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.526 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 195ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.526 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 195ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.526 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 195ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.526 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 196ms] Exchange checkFor407: all clear
05:07:43.526 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 196ms] Http1Exchange Sending headers only
05:07:43.526 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@186029ad queue.isEmpty: true
05:07:43.526 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@186029ad, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.526 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.527 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.527 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.527 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.527 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 196ms] Http1Exchange response created in advance
05:07:43.527 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 196ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.527 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 196ms] SocketTube(1) connecting flows
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 196ms] SocketTube(1) read publisher got subscriber
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 196ms] SocketTube(1) registering subscribe event
05:07:43.527 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 196ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.527 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 196ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.527 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 196ms] SocketTube(1) subscribed for writing
05:07:43.527 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 196ms] SocketTube(1) write: resetting demand to 0
05:07:43.527 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 196ms] SocketTube(1) write: registering startSubscription event
05:07:43.527 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 196ms] Http1Exchange requestAction.headers
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 196ms] SocketTube(1) subscribe event raised
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 196ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@478e1df4
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 196ms] SocketTube(1) read demand reset to 0
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 196ms] SocketTube(1) calling onSubscribe
05:07:43.527 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 196ms] Http1Exchange setting outgoing with headers
05:07:43.527 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 196ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.527 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 197ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=515 cap=515]], throwable=null]
05:07:43.527 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 197ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.527 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 197ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.528 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 197ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.528 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 197ms] SocketTube(1) got some demand for reading
05:07:43.528 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 197ms] SocketTube(1) resuming read event
05:07:43.527 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 197ms] SocketTube(1) onSubscribe called
05:07:43.528 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 197ms] SocketTube(1) pending subscriber subscribed
05:07:43.528 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 197ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.527 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 197ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.528 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 197ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 197ms] HttpClientImpl(1) next timeout: 299997
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 197ms] HttpClientImpl(1) next expired: 0
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 197ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.528 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 197ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.528 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 197ms] SocketTube(1) write: starting subscription
05:07:43.528 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 197ms] SocketTube(1) write: offloading requestMore
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 198ms] HttpClientImpl(1) next timeout: 299997
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 198ms] HttpClientImpl(1) next expired: 0
05:07:43.528 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 198ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.528 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 198ms] SocketTube(1) write: requesting more...
05:07:43.528 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 198ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.528 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 198ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.528 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 198ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.528 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 198ms] Http1Exchange initiating completion of headersSentCF
05:07:43.528 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 198ms] Exchange checkFor407: all clear
05:07:43.529 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 198ms] Exchange sendRequestBody
05:07:43.529 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 198ms] Http1Exchange sendBodyAsync
05:07:43.529 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 198ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.529 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 198ms] Http1Exchange requesting more request body from the subscriber
05:07:43.529 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 198ms] jdk.internal.net.http.Http1Request@e9863e7 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5735f9e7
05:07:43.529 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 198ms] jdk.internal.net.http.Http1Request@e9863e7 onNext
05:07:43.529 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 198ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=2 cap=16384]], throwable=null]
05:07:43.529 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 198ms] jdk.internal.net.http.Http1Request@e9863e7 onComplete
05:07:43.529 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 198ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.529 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 198ms] Http1Publisher(SocketTube(1)) onNext with 515 bytes
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 198ms] SocketTube(1) trying to write: 515
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 198ms] SocketTube(1) wrote: 515
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 198ms] SocketTube(1) write: requesting more...
05:07:43.529 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 198ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.529 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 198ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.529 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 198ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.529 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 199ms] Http1Exchange requesting more request body from the subscriber
05:07:43.529 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 199ms] jdk.internal.net.http.Http1Request@e9863e7 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5735f9e7
05:07:43.529 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 199ms] Http1Publisher(SocketTube(1)) onNext with 2 bytes
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 199ms] SocketTube(1) trying to write: 2
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 199ms] SocketTube(1) wrote: 2
05:07:43.529 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 199ms] SocketTube(1) write: requesting more...
05:07:43.529 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 199ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.530 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 199ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.530 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 199ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.530 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 199ms] Http1Exchange initiating completion of bodySentCF
05:07:43.530 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 199ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.530 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 199ms] Http1Exchange reading headers
05:07:43.530 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 199ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.530 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 199ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.530 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 199ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.530 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 199ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@107f246f
05:07:43.530 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 199ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.564 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 233ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.565 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 234ms] SocketTube(1) read bytes: 122
05:07:43.565 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 234ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.565 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 234ms] SocketTube(1) resuming read event
05:07:43.565 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 234ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.565 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 234ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.565 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 234ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@186029ad
05:07:43.565 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 235ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.565 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 235ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@186029ad
05:07:43.565 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 234ms] HttpClientImpl(1) next timeout: 299960
05:07:43.565 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 235ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.565 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 235ms] HttpClientImpl(1) next expired: 0
05:07:43.566 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 235ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.566 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 235ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.566 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 235ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@186029ad
05:07:43.566 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 235ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.566 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 235ms] Http1Exchange getResponseAsync completed successfully
05:07:43.566 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 235ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.566 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 235ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.566 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@9cb5a8c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71c96093 queue.isEmpty: false
05:07:43.566 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.566 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 236ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.566 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@9cb5a8c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71c96093, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.567 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@9cb5a8c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71c96093
05:07:43.567 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.567 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@9cb5a8c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71c96093
05:07:43.567 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 236ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.567 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 236ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.567 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 236ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.567 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 236ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.567 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 236ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.567 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 236ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.567 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 236ms] SocketTube(1) connecting flows
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 236ms] SocketTube(1) read publisher got subscriber
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 236ms] SocketTube(1) registering subscribe event
05:07:43.567 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 236ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.567 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 236ms] SocketTube(1) subscribed for writing
05:07:43.567 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 236ms] SocketTube(1) write: resetting demand to 0
05:07:43.567 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 237ms] SocketTube(1) write: registering startSubscription event
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 236ms] SocketTube(1) subscribe event raised
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.567 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 237ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) read demand reset to 0
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) calling onSubscribe
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) got some demand for reading
05:07:43.567 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) resuming read event
05:07:43.567 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 237ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.568 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.568 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) onSubscribe called
05:07:43.567 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 237ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.568 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) pending subscriber subscribed
05:07:43.568 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 237ms] HttpClientImpl(1) next timeout: 0
05:07:43.568 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 237ms] HttpClientImpl(1) next expired: 1199432
05:07:43.568 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 237ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.568 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear in 43ms
05:07:43.568 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) write: starting subscription
05:07:43.568 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 237ms] SocketTube(1) write: offloading requestMore
05:07:43.568 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 237ms] Http1Response(id=20, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.568 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 237ms] HttpClientImpl(1) next timeout: 0
05:07:43.568 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 237ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.568 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 237ms] SocketTube(1) write: requesting more...
05:07:43.568 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 238ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.568 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=f6b8e5c9d091e898, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=6db0c3f4c081f334, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663525000000, endEpochNanos=1735189663567975426, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.568 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 237ms] HttpClientImpl(1) next expired: 1199432
05:07:43.569 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 238ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.568 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 238ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.569 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=42af53d74ffd47af, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=6db0c3f4c081f334, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663525000000, endEpochNanos=1735189663568508660, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.569 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=6db0c3f4c081f334, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=8d5a75da2bbdf055, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663525000000, endEpochNanos=1735189663569269079, attributes=AttributesMap{data={http.method=POST, random.key=870579a7-1dcb-4ab4-999b-75addc20eda5, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="2", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear"}, epochNanos=1735189663569259671, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.570 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "bc9beb58fe74df6001587b4695127548","eventTime": 1735189663569259671,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "2","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32\u002fclear"}}

05:07:43.570 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=349021d30006b0ff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=8d5a75da2bbdf055, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663524000000, endEpochNanos=1735189663569421357, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.570 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=bc9beb58fe74df6001587b4695127548, spanId=8d5a75da2bbdf055, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663524000000, endEpochNanos=1735189663569767282, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/clear, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.571 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 27
05:07:43.572 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 27
05:07:43.572 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 27, cap: 27/27, unwrapped: PooledUnsafeDirectByteBuf(ridx: 296, widx: 296, cap: 384)), decoderResult: success)
05:07:43.572 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 27, widx: 27, cap: 27/27, unwrapped: PooledUnsafeDirectByteBuf(ridx: 296, widx: 296, cap: 384)), decoderResult: success)
05:07:43.573 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value into OpenTelemetrySpan{traceId=aea0b3dccbf74703014eb8f858cde084,spanId=5524a4537cebf0a2} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.574 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=46e78267fd656e6f, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=5524a4537cebf0a2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663574000000, endEpochNanos=0}}, span id=46e78267fd656e6f, trace id=aea0b3dccbf74703014eb8f858cde084} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=6392192d1dab2793, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=5524a4537cebf0a2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=bd0531ae-7d6b-46f6-969e-0ec7142d7b2b}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663574000000, endEpochNanos=0}}, span id=6392192d1dab2793, trace id=aea0b3dccbf74703014eb8f858cde084}
05:07:43.575 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value into OpenTelemetrySpan{traceId=aea0b3dccbf74703014eb8f858cde084,spanId=6392192d1dab2793} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.575 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value
05:07:43.575 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 245ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value POST
05:07:43.576 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 245ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value POST,
	 proxy=null
05:07:43.576 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 245ms] HttpClientImpl(1) next timeout: 300000
05:07:43.576 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 245ms] Http2ClientImpl not found in connection pool
05:07:43.576 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 245ms] HttpClientImpl(1) next expired: 1199424
05:07:43.576 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 245ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.576 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 245ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.576 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 245ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.576 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 245ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.576 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 246ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.576 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 246ms] Exchange checkFor407: all clear
05:07:43.576 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 246ms] Http1Exchange Sending headers only
05:07:43.576 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@55b6a5b5 queue.isEmpty: true
05:07:43.576 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@55b6a5b5, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.576 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.577 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.577 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.577 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.577 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 246ms] Http1Exchange response created in advance
05:07:43.577 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 246ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.577 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 246ms] SocketTube(1) connecting flows
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 246ms] SocketTube(1) read publisher got subscriber
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 246ms] SocketTube(1) registering subscribe event
05:07:43.577 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 246ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.577 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 246ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.577 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 246ms] SocketTube(1) subscribed for writing
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 246ms] SocketTube(1) subscribe event raised
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 246ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@407ba068
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 246ms] SocketTube(1) read demand reset to 0
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 246ms] SocketTube(1) calling onSubscribe
05:07:43.577 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 246ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.577 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 246ms] SocketTube(1) write: resetting demand to 0
05:07:43.577 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 247ms] SocketTube(1) write: registering startSubscription event
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 247ms] SocketTube(1) onSubscribe called
05:07:43.577 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 247ms] SocketTube(1) pending subscriber subscribed
05:07:43.577 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 247ms] Http1Exchange requestAction.headers
05:07:43.577 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 247ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.578 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 247ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.578 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 247ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.577 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 247ms] HttpClientImpl(1) next timeout: 299999
05:07:43.578 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 247ms] HttpClientImpl(1) next expired: 0
05:07:43.578 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 247ms] SocketTube(1) got some demand for reading
05:07:43.578 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 247ms] SocketTube(1) resuming read event
05:07:43.578 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 247ms] Http1Exchange setting outgoing with headers
05:07:43.578 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 247ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.578 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 247ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.578 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 247ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:43.578 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 248ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.578 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 247ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.578 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 248ms] SocketTube(1) write: starting subscription
05:07:43.578 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 248ms] SocketTube(1) write: offloading requestMore
05:07:43.578 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 248ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.578 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 248ms] HttpClientImpl(1) next timeout: 299998
05:07:43.579 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 248ms] HttpClientImpl(1) next expired: 0
05:07:43.579 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 248ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.578 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 248ms] SocketTube(1) write: requesting more...
05:07:43.579 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 248ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.579 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 248ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.579 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 248ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.579 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 248ms] Http1Exchange initiating completion of headersSentCF
05:07:43.579 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 248ms] Exchange checkFor407: all clear
05:07:43.579 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 248ms] Exchange sendRequestBody
05:07:43.579 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 248ms] Http1Exchange sendBodyAsync
05:07:43.579 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 248ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.579 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 248ms] Http1Exchange requesting more request body from the subscriber
05:07:43.579 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 248ms] jdk.internal.net.http.Http1Request@5111f513 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@a2b1782
05:07:43.579 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 248ms] jdk.internal.net.http.Http1Request@5111f513 onNext
05:07:43.579 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 248ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=27 cap=16384]], throwable=null]
05:07:43.579 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 248ms] jdk.internal.net.http.Http1Request@5111f513 onComplete
05:07:43.579 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 248ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.579 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 249ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:43.579 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 249ms] SocketTube(1) trying to write: 516
05:07:43.579 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 249ms] SocketTube(1) wrote: 516
05:07:43.579 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 249ms] SocketTube(1) write: requesting more...
05:07:43.579 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 249ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.579 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 249ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.579 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 249ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.580 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 249ms] Http1Exchange requesting more request body from the subscriber
05:07:43.580 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 249ms] jdk.internal.net.http.Http1Request@5111f513 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@a2b1782
05:07:43.580 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 249ms] Http1Publisher(SocketTube(1)) onNext with 27 bytes
05:07:43.580 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 249ms] SocketTube(1) trying to write: 27
05:07:43.580 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 249ms] SocketTube(1) wrote: 27
05:07:43.580 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 249ms] SocketTube(1) write: requesting more...
05:07:43.580 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 249ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.580 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 249ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.580 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 249ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.580 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 249ms] Http1Exchange initiating completion of bodySentCF
05:07:43.580 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 249ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.580 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 249ms] Http1Exchange reading headers
05:07:43.580 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 249ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.580 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 249ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.580 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 249ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.580 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 249ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@c0d575e
05:07:43.580 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 249ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.623 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 292ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.623 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 293ms] SocketTube(1) read bytes: 122
05:07:43.623 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 293ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.623 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 293ms] SocketTube(1) resuming read event
05:07:43.624 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 293ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.624 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 293ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.624 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 293ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@55b6a5b5
05:07:43.624 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 293ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.624 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 293ms] HttpClientImpl(1) next timeout: 299952
05:07:43.624 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 293ms] HttpClientImpl(1) next expired: 0
05:07:43.624 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 293ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.624 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 293ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@55b6a5b5
05:07:43.624 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 293ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.624 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 294ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.624 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@55b6a5b5
05:07:43.624 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 294ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.624 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 294ms] Http1Exchange getResponseAsync completed successfully
05:07:43.624 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 294ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.625 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 294ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.625 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@370f50f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@654ad690 queue.isEmpty: false
05:07:43.625 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.625 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 294ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.625 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@370f50f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@654ad690, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.625 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@370f50f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@654ad690
05:07:43.625 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.625 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@370f50f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@654ad690
05:07:43.625 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 294ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.625 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 294ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.625 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 294ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.625 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 294ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.625 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 295ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.625 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 295ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.625 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 295ms] SocketTube(1) connecting flows
05:07:43.625 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 295ms] SocketTube(1) read publisher got subscriber
05:07:43.625 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 295ms] SocketTube(1) registering subscribe event
05:07:43.625 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 295ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.625 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 295ms] SocketTube(1) subscribe event raised
05:07:43.625 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 295ms] SocketTube(1) subscribed for writing
05:07:43.626 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 295ms] SocketTube(1) write: resetting demand to 0
05:07:43.626 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 295ms] SocketTube(1) write: registering startSubscription event
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 295ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.626 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 295ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 295ms] SocketTube(1) read demand reset to 0
05:07:43.626 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 295ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 295ms] SocketTube(1) calling onSubscribe
05:07:43.626 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 295ms] Http1Response(id=21, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.626 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value in 51ms
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 295ms] SocketTube(1) got some demand for reading
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) resuming read event
05:07:43.626 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 295ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.626 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 296ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.626 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.626 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) onSubscribe called
05:07:43.627 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) pending subscriber subscribed
05:07:43.626 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=ce7e360ba7d62469, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=6392192d1dab2793, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663575000000, endEpochNanos=1735189663626318605, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 296ms] HttpClientImpl(1) next timeout: 0
05:07:43.626 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 296ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.627 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=88ab797fe16ad718, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=6392192d1dab2793, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663575000000, endEpochNanos=1735189663626842822, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 296ms] HttpClientImpl(1) next expired: 1199373
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 296ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.627 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) write: starting subscription
05:07:43.627 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 296ms] SocketTube(1) write: offloading requestMore
05:07:43.627 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=6392192d1dab2793, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=5524a4537cebf0a2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663574000000, endEpochNanos=1735189663626672539, attributes=AttributesMap{data={http.method=POST, random.key=bd0531ae-7d6b-46f6-969e-0ec7142d7b2b, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="27", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value"}, epochNanos=1735189663626662871, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.627 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 296ms] SocketTube(1) write: requesting more...
05:07:43.627 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 297ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 296ms] HttpClientImpl(1) next timeout: 0
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 297ms] HttpClientImpl(1) next expired: 1199373
05:07:43.627 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 297ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.628 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "aea0b3dccbf74703014eb8f858cde084","eventTime": 1735189663626662871,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "27","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32\u002fvalue"}}

05:07:43.628 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=46e78267fd656e6f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=5524a4537cebf0a2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663574000000, endEpochNanos=1735189663628032003, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.628 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=aea0b3dccbf74703014eb8f858cde084, spanId=5524a4537cebf0a2, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663573000000, endEpochNanos=1735189663627863223, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.32/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.629 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.629 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.629 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 384)), decoderResult: success)
05:07:43.629 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 44, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 384)), decoderResult: success)
05:07:43.630 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=abe8dc24f869d451b37ebbd16f915e05,spanId=5e162dd6f02b7182} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.632 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.632 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 301ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.632 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 302ms] HttpClientImpl(1) next timeout: 300000
05:07:43.632 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 302ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.632 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 302ms] HttpClientImpl(1) next expired: 1199368
05:07:43.632 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 302ms] Http2ClientImpl not found in connection pool
05:07:43.632 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 302ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.632 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 302ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.633 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 302ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.633 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 302ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.633 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 302ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.633 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 302ms] Exchange checkFor407: all clear
05:07:43.633 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 302ms] Http1Exchange Sending headers only
05:07:43.633 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 302ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@5d7c09db queue.isEmpty: true
05:07:43.633 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 302ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@5d7c09db, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.633 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 302ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.633 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 303ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.633 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 303ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.633 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 303ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.633 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 303ms] Http1Exchange response created in advance
05:07:43.633 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 303ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.633 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 303ms] SocketTube(1) connecting flows
05:07:43.633 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 303ms] SocketTube(1) read publisher got subscriber
05:07:43.633 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 303ms] SocketTube(1) registering subscribe event
05:07:43.634 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 303ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) subscribe event raised
05:07:43.634 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 303ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.634 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 303ms] SocketTube(1) subscribed for writing
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@2c2f4e2f
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) read demand reset to 0
05:07:43.634 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 303ms] SocketTube(1) write: resetting demand to 0
05:07:43.634 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 303ms] SocketTube(1) write: registering startSubscription event
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) calling onSubscribe
05:07:43.634 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 303ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.634 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 303ms] Http1Exchange requestAction.headers
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) onSubscribe called
05:07:43.634 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 303ms] SocketTube(1) pending subscriber subscribed
05:07:43.634 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 303ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.634 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) next timeout: 299998
05:07:43.634 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 304ms] Http1Exchange setting outgoing with headers
05:07:43.634 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 304ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.634 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 304ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.634 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 304ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.634 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) next expired: 0
05:07:43.634 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 304ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.634 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 304ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.635 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 304ms] SocketTube(1) got some demand for reading
05:07:43.635 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 304ms] SocketTube(1) resuming read event
05:07:43.635 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 304ms] SocketTube(1) write: starting subscription
05:07:43.635 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 304ms] SocketTube(1) write: offloading requestMore
05:07:43.635 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 304ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) next timeout: 299997
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) next expired: 0
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 304ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.635 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 304ms] SocketTube(1) write: requesting more...
05:07:43.635 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 304ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.635 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 304ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.635 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 305ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 305ms] HttpClientImpl(1) next timeout: 299997
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 305ms] HttpClientImpl(1) next expired: 0
05:07:43.635 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 305ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.635 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 305ms] Http1Exchange initiating completion of headersSentCF
05:07:43.635 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 305ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.635 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 305ms] Exchange checkFor407: all clear
05:07:43.636 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 305ms] Exchange sendRequestBody
05:07:43.636 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 305ms] Http1Exchange sendBodyAsync
05:07:43.636 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 305ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.636 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 305ms] Http1Exchange requesting more request body from the subscriber
05:07:43.636 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 305ms] jdk.internal.net.http.Http1Request@23f4c0b1 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@10397a70
05:07:43.636 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 305ms] jdk.internal.net.http.Http1Request@23f4c0b1 onNext
05:07:43.636 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 305ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=44 cap=16384]], throwable=null]
05:07:43.636 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 305ms] jdk.internal.net.http.Http1Request@23f4c0b1 onComplete
05:07:43.636 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 305ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.636 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 305ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 305ms] SocketTube(1) trying to write: 460
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 305ms] SocketTube(1) wrote: 460
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 305ms] SocketTube(1) write: requesting more...
05:07:43.636 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 305ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.636 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 305ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.636 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 305ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.636 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 305ms] Http1Exchange requesting more request body from the subscriber
05:07:43.636 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 306ms] jdk.internal.net.http.Http1Request@23f4c0b1 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@10397a70
05:07:43.636 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 306ms] Http1Publisher(SocketTube(1)) onNext with 44 bytes
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 306ms] SocketTube(1) trying to write: 44
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 306ms] SocketTube(1) wrote: 44
05:07:43.636 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 306ms] SocketTube(1) write: requesting more...
05:07:43.636 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 306ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.636 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 306ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.636 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 306ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.636 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 306ms] Http1Exchange initiating completion of bodySentCF
05:07:43.636 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 306ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.636 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 306ms] Http1Exchange reading headers
05:07:43.636 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 306ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.637 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 306ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.637 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 306ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.637 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 306ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@7078bdbe
05:07:43.637 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 306ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.647 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 316ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.647 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 316ms] SocketTube(1) read bytes: 235
05:07:43.647 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 316ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.647 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 316ms] SocketTube(1) resuming read event
05:07:43.647 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 316ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.647 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 316ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@5d7c09db
05:07:43.647 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 316ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.647 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 316ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.647 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 316ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@5d7c09db
05:07:43.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 317ms] HttpClientImpl(1) next timeout: 299985
05:07:43.647 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 317ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 317ms] HttpClientImpl(1) next expired: 0
05:07:43.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 317ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.647 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 317ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.647 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@5d7c09db
05:07:43.648 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 317ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.648 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 317ms] Http1Exchange getResponseAsync completed successfully
05:07:43.648 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 317ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.648 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 317ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.648 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4df750bb/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1646598f queue.isEmpty: false
05:07:43.648 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.648 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 317ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.648 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4df750bb/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1646598f, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.648 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4df750bb/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1646598f
05:07:43.648 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 317ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.648 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 318ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4df750bb/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@1646598f
05:07:43.648 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 318ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.648 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 318ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.648 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 318ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.648 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 318ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.648 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 318ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.648 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 318ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.648 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 318ms] SocketTube(1) connecting flows
05:07:43.648 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 318ms] SocketTube(1) read publisher got subscriber
05:07:43.648 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 318ms] SocketTube(1) registering subscribe event
05:07:43.649 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 318ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.649 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 318ms] SocketTube(1) subscribed for writing
05:07:43.649 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 318ms] SocketTube(1) write: resetting demand to 0
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) subscribe event raised
05:07:43.649 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 318ms] SocketTube(1) write: registering startSubscription event
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.649 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 318ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) read demand reset to 0
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) calling onSubscribe
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) got some demand for reading
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 318ms] SocketTube(1) resuming read event
05:07:43.649 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 318ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.649 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 318ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.649 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 319ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 319ms] SocketTube(1) onSubscribe called
05:07:43.649 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 319ms] SocketTube(1) pending subscriber subscribed
05:07:43.649 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 17ms
05:07:43.649 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 318ms] Http1Response(id=22, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.649 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 319ms] HttpClientImpl(1) next timeout: 0
05:07:43.650 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 319ms] HttpClientImpl(1) next expired: 1199350
05:07:43.650 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 319ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.650 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=af8fde9ce3daf119, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=5e162dd6f02b7182, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663632000000, endEpochNanos=1735189663649869956, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.650 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 319ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.650 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=25c9a879e02b5692, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=5e162dd6f02b7182, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663631000000, endEpochNanos=1735189663649297654, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.650 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 319ms] SocketTube(1) write: starting subscription
05:07:43.650 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=4da914fb9511a22c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=5e162dd6f02b7182, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663631000000, endEpochNanos=1735189663650165041, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.650 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 319ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.650 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 319ms] SocketTube(1) write: offloading requestMore
05:07:43.650 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=abe8dc24f869d451b37ebbd16f915e05, spanId=5e162dd6f02b7182, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663630000000, endEpochNanos=1735189663649656287, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.650 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 319ms] SocketTube(1) write: requesting more...
05:07:43.650 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 319ms] HttpClientImpl(1) next timeout: 0
05:07:43.650 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 320ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.650 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 320ms] HttpClientImpl(1) next expired: 1199350
05:07:43.650 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 320ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.651 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 22
05:07:43.651 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 22
05:07:43.651 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 22, cap: 22/22, unwrapped: PooledUnsafeDirectByteBuf(ridx: 291, widx: 291, cap: 368)), decoderResult: success)
05:07:43.651 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 22, widx: 22, cap: 22/22, unwrapped: PooledUnsafeDirectByteBuf(ridx: 291, widx: 291, cap: 368)), decoderResult: success)
05:07:43.652 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value into OpenTelemetrySpan{traceId=f0b580dc5e1589dcd4cdc24ebfde8631,spanId=1e8970405e703bcd} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.653 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=3e3ae19ae6e936a1, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=1e8970405e703bcd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663652000000, endEpochNanos=0}}, span id=3e3ae19ae6e936a1, trace id=f0b580dc5e1589dcd4cdc24ebfde8631} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=360b6a8440173352, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=1e8970405e703bcd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=97309941-be20-4082-ae36-096ad2eb17b7}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663653000000, endEpochNanos=0}}, span id=360b6a8440173352, trace id=f0b580dc5e1589dcd4cdc24ebfde8631}
05:07:43.653 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value into OpenTelemetrySpan{traceId=f0b580dc5e1589dcd4cdc24ebfde8631,spanId=360b6a8440173352} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.653 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value
05:07:43.654 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 323ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value POST
05:07:43.654 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 323ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value POST,
	 proxy=null
05:07:43.654 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 323ms] Http2ClientImpl not found in connection pool
05:07:43.654 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 323ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.654 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 324ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.654 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 324ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.654 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 323ms] HttpClientImpl(1) next timeout: 300000
05:07:43.654 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 324ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.654 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 324ms] HttpClientImpl(1) next expired: 0
05:07:43.654 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 324ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.654 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 324ms] Exchange checkFor407: all clear
05:07:43.655 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 324ms] Http1Exchange Sending headers only
05:07:43.655 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@2692383b queue.isEmpty: true
05:07:43.655 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@2692383b, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.655 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.655 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.655 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.655 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 324ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.655 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 324ms] Http1Exchange response created in advance
05:07:43.655 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 324ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.655 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 324ms] SocketTube(1) connecting flows
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 324ms] SocketTube(1) read publisher got subscriber
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 324ms] SocketTube(1) registering subscribe event
05:07:43.655 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 324ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 324ms] SocketTube(1) subscribe event raised
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 324ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@16b59a65
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 324ms] SocketTube(1) read demand reset to 0
05:07:43.655 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 324ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.655 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 325ms] SocketTube(1) subscribed for writing
05:07:43.655 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 325ms] SocketTube(1) write: resetting demand to 0
05:07:43.655 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 325ms] SocketTube(1) write: registering startSubscription event
05:07:43.655 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 325ms] Http1Exchange requestAction.headers
05:07:43.655 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 325ms] Http1Exchange setting outgoing with headers
05:07:43.656 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 325ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:43.655 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 325ms] SocketTube(1) calling onSubscribe
05:07:43.656 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 325ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.656 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 325ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.656 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 325ms] SocketTube(1) onSubscribe called
05:07:43.656 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 325ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.656 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 325ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.656 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 325ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.656 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 325ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.656 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 325ms] SocketTube(1) got some demand for reading
05:07:43.656 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 326ms] SocketTube(1) resuming read event
05:07:43.656 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 325ms] SocketTube(1) pending subscriber subscribed
05:07:43.656 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 326ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.656 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) next timeout: 299998
05:07:43.656 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) next expired: 0
05:07:43.656 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.656 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 326ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.656 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 326ms] SocketTube(1) write: starting subscription
05:07:43.657 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 326ms] SocketTube(1) write: offloading requestMore
05:07:43.657 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) next timeout: 299997
05:07:43.657 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) next expired: 0
05:07:43.657 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 326ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.657 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 326ms] SocketTube(1) write: requesting more...
05:07:43.657 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 326ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.657 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 326ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.657 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 326ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.657 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 326ms] Http1Exchange initiating completion of headersSentCF
05:07:43.657 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 326ms] Exchange checkFor407: all clear
05:07:43.657 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 326ms] Exchange sendRequestBody
05:07:43.657 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 326ms] Http1Exchange sendBodyAsync
05:07:43.657 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 326ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.657 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 326ms] Http1Exchange requesting more request body from the subscriber
05:07:43.657 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 326ms] jdk.internal.net.http.Http1Request@3c8dbf01 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@6fa8ab5
05:07:43.657 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 327ms] jdk.internal.net.http.Http1Request@3c8dbf01 onNext
05:07:43.657 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 327ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=22 cap=16384]], throwable=null]
05:07:43.657 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 327ms] jdk.internal.net.http.Http1Request@3c8dbf01 onComplete
05:07:43.657 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 327ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.657 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 327ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:43.657 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 327ms] SocketTube(1) trying to write: 516
05:07:43.658 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 327ms] SocketTube(1) wrote: 516
05:07:43.658 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 327ms] SocketTube(1) write: requesting more...
05:07:43.658 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 327ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.658 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 327ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.658 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 327ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.658 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 327ms] Http1Exchange requesting more request body from the subscriber
05:07:43.658 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 327ms] jdk.internal.net.http.Http1Request@3c8dbf01 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@6fa8ab5
05:07:43.658 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 327ms] Http1Publisher(SocketTube(1)) onNext with 22 bytes
05:07:43.658 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 327ms] SocketTube(1) trying to write: 22
05:07:43.658 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 327ms] SocketTube(1) wrote: 22
05:07:43.658 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 327ms] SocketTube(1) write: requesting more...
05:07:43.658 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 328ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.658 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 328ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.658 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 328ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.658 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 328ms] Http1Exchange initiating completion of bodySentCF
05:07:43.658 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 328ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.658 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 328ms] Http1Exchange reading headers
05:07:43.658 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 328ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.658 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 328ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.658 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 328ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.659 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 328ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1d3f2994
05:07:43.659 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 328ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.701 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 371ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.702 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 371ms] SocketTube(1) read bytes: 122
05:07:43.702 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 371ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.702 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 371ms] SocketTube(1) resuming read event
05:07:43.702 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 371ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.702 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 371ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.702 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 371ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@2692383b
05:07:43.702 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 371ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.702 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 371ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@2692383b
05:07:43.702 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 371ms] HttpClientImpl(1) next timeout: 299952
05:07:43.702 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 372ms] HttpClientImpl(1) next expired: 0
05:07:43.702 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 372ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.702 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 371ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.702 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 372ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.702 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 372ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@2692383b
05:07:43.702 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 372ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.703 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 372ms] Http1Exchange getResponseAsync completed successfully
05:07:43.703 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 372ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.703 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 372ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.703 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 372ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@7d44ac8b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2f392eb4 queue.isEmpty: false
05:07:43.703 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 372ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.703 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 372ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.703 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 372ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@7d44ac8b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2f392eb4, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.703 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@7d44ac8b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2f392eb4
05:07:43.703 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.703 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@7d44ac8b/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2f392eb4
05:07:43.703 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 373ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.703 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 373ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.703 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 373ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.703 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.703 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 373ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.703 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 373ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.703 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 373ms] SocketTube(1) connecting flows
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 373ms] SocketTube(1) read publisher got subscriber
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 373ms] SocketTube(1) registering subscribe event
05:07:43.704 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 373ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.704 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 373ms] SocketTube(1) subscribed for writing
05:07:43.704 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 373ms] SocketTube(1) write: resetting demand to 0
05:07:43.704 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 373ms] SocketTube(1) write: registering startSubscription event
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 373ms] SocketTube(1) subscribe event raised
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 373ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.704 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 373ms] SocketTube(1) read demand reset to 0
05:07:43.704 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 373ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.704 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 373ms] Http1Response(id=23, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 373ms] SocketTube(1) calling onSubscribe
05:07:43.704 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value in 50ms
05:07:43.704 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 373ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.704 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 374ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 373ms] SocketTube(1) got some demand for reading
05:07:43.704 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=5f009fd24932d60e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=360b6a8440173352, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663653000000, endEpochNanos=1735189663703818001, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.704 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 374ms] SocketTube(1) resuming read event
05:07:43.705 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 374ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.705 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=8ddee934e5739c13, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=360b6a8440173352, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663653000000, endEpochNanos=1735189663704438022, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.705 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 374ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.705 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 374ms] SocketTube(1) onSubscribe called
05:07:43.705 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 374ms] SocketTube(1) pending subscriber subscribed
05:07:43.705 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 374ms] HttpClientImpl(1) next timeout: 0
05:07:43.705 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=360b6a8440173352, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=1e8970405e703bcd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663653000000, endEpochNanos=1735189663705093393, attributes=AttributesMap{data={http.method=POST, random.key=97309941-be20-4082-ae36-096ad2eb17b7, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="22", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value"}, epochNanos=1735189663705082643, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.705 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 374ms] HttpClientImpl(1) next expired: 1199295
05:07:43.705 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 375ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.705 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 375ms] SocketTube(1) write: starting subscription
05:07:43.705 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 375ms] SocketTube(1) write: offloading requestMore
05:07:43.705 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 375ms] HttpClientImpl(1) next timeout: 0
05:07:43.705 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 375ms] SocketTube(1) write: requesting more...
05:07:43.706 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 375ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.706 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "f0b580dc5e1589dcd4cdc24ebfde8631","eventTime": 1735189663705082643,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "22","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34\u002fvalue"}}

05:07:43.706 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 375ms] HttpClientImpl(1) next expired: 1199294
05:07:43.706 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=3e3ae19ae6e936a1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=1e8970405e703bcd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663652000000, endEpochNanos=1735189663705435816, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.706 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 375ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.706 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=f0b580dc5e1589dcd4cdc24ebfde8631, spanId=1e8970405e703bcd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663652000000, endEpochNanos=1735189663705850940, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.34/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.707 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.708 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 2
05:07:43.708 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 368)), decoderResult: success)
05:07:43.708 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 2, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 270, widx: 270, cap: 368)), decoderResult: success)
05:07:43.709 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click into OpenTelemetrySpan{traceId=2d5018778e642f74cd7f6f284dc72fce,spanId=66eb56751740e945} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.710 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=bbdf72540913b0c4, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=66eb56751740e945, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663709000000, endEpochNanos=0}}, span id=bbdf72540913b0c4, trace id=2d5018778e642f74cd7f6f284dc72fce} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=d7459bc4c4c0f66d, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=66eb56751740e945, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=b453fff1-b6fb-4d85-804e-c2cd4a7ac3fb}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663710000000, endEpochNanos=0}}, span id=d7459bc4c4c0f66d, trace id=2d5018778e642f74cd7f6f284dc72fce}
05:07:43.710 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click into OpenTelemetrySpan{traceId=2d5018778e642f74cd7f6f284dc72fce,spanId=d7459bc4c4c0f66d} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.710 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click
05:07:43.710 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 380ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click POST
05:07:43.711 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 380ms] HttpClientImpl(1) next timeout: 300000
05:07:43.711 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 380ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click POST,
	 proxy=null
05:07:43.711 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 380ms] HttpClientImpl(1) next expired: 1199289
05:07:43.711 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 380ms] Http2ClientImpl not found in connection pool
05:07:43.711 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 380ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.711 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 380ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.711 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 380ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.711 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 381ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.711 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 381ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.712 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 381ms] Exchange checkFor407: all clear
05:07:43.712 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 381ms] Http1Exchange Sending headers only
05:07:43.712 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@1a8a0c2b queue.isEmpty: true
05:07:43.712 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@1a8a0c2b, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.712 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.712 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.712 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.712 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 381ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.712 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 381ms] Http1Exchange response created in advance
05:07:43.712 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 381ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.712 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 381ms] SocketTube(1) connecting flows
05:07:43.712 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 381ms] SocketTube(1) read publisher got subscriber
05:07:43.712 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 381ms] SocketTube(1) registering subscribe event
05:07:43.712 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 381ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.712 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 381ms] SocketTube(1) subscribe event raised
05:07:43.712 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 381ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.712 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 382ms] SocketTube(1) subscribed for writing
05:07:43.712 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 382ms] SocketTube(1) write: resetting demand to 0
05:07:43.712 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 382ms] SocketTube(1) write: registering startSubscription event
05:07:43.712 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 382ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@21e354fa
05:07:43.713 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 382ms] SocketTube(1) read demand reset to 0
05:07:43.712 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 382ms] Http1Exchange requestAction.headers
05:07:43.713 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 382ms] SocketTube(1) calling onSubscribe
05:07:43.713 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 382ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.713 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 382ms] SocketTube(1) onSubscribe called
05:07:43.713 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 382ms] Http1Exchange setting outgoing with headers
05:07:43.713 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 382ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=515 cap=515]], throwable=null]
05:07:43.713 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 382ms] SocketTube(1) pending subscriber subscribed
05:07:43.713 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 382ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 382ms] HttpClientImpl(1) next timeout: 299998
05:07:43.713 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 382ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 383ms] HttpClientImpl(1) next expired: 0
05:07:43.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 383ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.713 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 383ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.713 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 383ms] SocketTube(1) write: starting subscription
05:07:43.714 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 383ms] SocketTube(1) write: offloading requestMore
05:07:43.714 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 383ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.714 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 383ms] SocketTube(1) write: requesting more...
05:07:43.714 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 383ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.714 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 383ms] HttpClientImpl(1) next timeout: 299997
05:07:43.714 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 383ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.714 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 383ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.714 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 383ms] Http1Exchange initiating completion of headersSentCF
05:07:43.714 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 384ms] Exchange checkFor407: all clear
05:07:43.714 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 384ms] Exchange sendRequestBody
05:07:43.714 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 384ms] Http1Exchange sendBodyAsync
05:07:43.714 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 383ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.714 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 384ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.714 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 384ms] Http1Exchange requesting more request body from the subscriber
05:07:43.714 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 384ms] jdk.internal.net.http.Http1Request@24d81161 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@42f2db05
05:07:43.714 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 383ms] HttpClientImpl(1) next expired: 0
05:07:43.715 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 384ms] jdk.internal.net.http.Http1Request@24d81161 onNext
05:07:43.715 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 384ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=2 cap=16384]], throwable=null]
05:07:43.714 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 384ms] SocketTube(1) got some demand for reading
05:07:43.715 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 384ms] jdk.internal.net.http.Http1Request@24d81161 onComplete
05:07:43.715 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 384ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.715 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 384ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.715 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 384ms] Http1Publisher(SocketTube(1)) onNext with 515 bytes
05:07:43.715 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 384ms] SocketTube(1) resuming read event
05:07:43.715 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 384ms] SocketTube(1) trying to write: 515
05:07:43.715 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 385ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.715 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 385ms] SocketTube(1) wrote: 515
05:07:43.715 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 385ms] SocketTube(1) write: requesting more...
05:07:43.715 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 385ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.715 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 385ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.715 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 385ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.715 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 385ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.716 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 385ms] Http1Exchange requesting more request body from the subscriber
05:07:43.716 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 385ms] jdk.internal.net.http.Http1Request@24d81161 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@42f2db05
05:07:43.716 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 385ms] HttpClientImpl(1) next timeout: 299995
05:07:43.716 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 385ms] HttpClientImpl(1) next expired: 0
05:07:43.716 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 385ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.716 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 385ms] Http1Publisher(SocketTube(1)) onNext with 2 bytes
05:07:43.716 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 385ms] SocketTube(1) trying to write: 2
05:07:43.716 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 385ms] SocketTube(1) wrote: 2
05:07:43.716 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 386ms] SocketTube(1) write: requesting more...
05:07:43.716 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 386ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.716 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 386ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.716 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 386ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.716 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 386ms] Http1Exchange initiating completion of bodySentCF
05:07:43.716 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 386ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.716 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 386ms] Http1Exchange reading headers
05:07:43.717 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 386ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.717 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 386ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.717 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 386ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.717 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 386ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@351b96ce
05:07:43.717 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 386ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.765 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 434ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.765 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 435ms] SocketTube(1) read bytes: 122
05:07:43.765 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 435ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.765 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 435ms] SocketTube(1) resuming read event
05:07:43.766 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 435ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@1a8a0c2b
05:07:43.766 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 435ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.766 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 435ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.766 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 435ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.766 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 435ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@1a8a0c2b
05:07:43.766 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 435ms] HttpClientImpl(1) next timeout: 299945
05:07:43.766 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 435ms] HttpClientImpl(1) next expired: 0
05:07:43.766 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 435ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.766 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 435ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.766 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 436ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.766 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@1a8a0c2b
05:07:43.766 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 436ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.766 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 436ms] Http1Exchange getResponseAsync completed successfully
05:07:43.766 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 436ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.767 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 436ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.767 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@7fba3f12/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2b44f913 queue.isEmpty: false
05:07:43.767 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.767 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 436ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.767 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@7fba3f12/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2b44f913, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.767 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@7fba3f12/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2b44f913
05:07:43.767 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.767 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 436ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@7fba3f12/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2b44f913
05:07:43.767 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 436ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.767 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 436ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.767 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 436ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.767 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 437ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.767 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 437ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.767 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 437ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.767 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 437ms] SocketTube(1) connecting flows
05:07:43.767 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 437ms] SocketTube(1) read publisher got subscriber
05:07:43.767 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 437ms] SocketTube(1) registering subscribe event
05:07:43.767 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 437ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.767 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 437ms] SocketTube(1) subscribed for writing
05:07:43.767 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) subscribe event raised
05:07:43.767 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 437ms] SocketTube(1) write: resetting demand to 0
05:07:43.768 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.768 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 437ms] SocketTube(1) write: registering startSubscription event
05:07:43.768 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 437ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.768 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) read demand reset to 0
05:07:43.768 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) calling onSubscribe
05:07:43.768 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 437ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.768 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 437ms] Http1Response(id=24, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.768 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) got some demand for reading
05:07:43.768 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 437ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.768 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click in 58ms
05:07:43.768 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 437ms] SocketTube(1) resuming read event
05:07:43.768 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 437ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.768 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=c2db8ca400548d9f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=d7459bc4c4c0f66d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663710000000, endEpochNanos=1735189663768127349, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.768 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 438ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.769 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 438ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.769 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=24e874079a133552, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=d7459bc4c4c0f66d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663710000000, endEpochNanos=1735189663768419604, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.769 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 438ms] SocketTube(1) onSubscribe called
05:07:43.769 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 438ms] SocketTube(1) pending subscriber subscribed
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 438ms] HttpClientImpl(1) next timeout: 0
05:07:43.769 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=d7459bc4c4c0f66d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=66eb56751740e945, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663710000000, endEpochNanos=1735189663769108499, attributes=AttributesMap{data={http.method=POST, random.key=b453fff1-b6fb-4d85-804e-c2cd4a7ac3fb, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="2", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click"}, epochNanos=1735189663769099692, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 438ms] HttpClientImpl(1) next expired: 1199231
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 438ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.769 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 438ms] SocketTube(1) write: starting subscription
05:07:43.769 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 438ms] SocketTube(1) write: offloading requestMore
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 438ms] HttpClientImpl(1) next timeout: 0
05:07:43.769 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 438ms] SocketTube(1) write: requesting more...
05:07:43.769 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 439ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 438ms] HttpClientImpl(1) next expired: 1199231
05:07:43.769 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 439ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.769 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "2d5018778e642f74cd7f6f284dc72fce","eventTime": 1735189663769099692,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "2","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35\u002fclick"}}

05:07:43.770 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=bbdf72540913b0c4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=66eb56751740e945, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663709000000, endEpochNanos=1735189663769140462, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.770 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2d5018778e642f74cd7f6f284dc72fce, spanId=66eb56751740e945, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663709000000, endEpochNanos=1735189663769786146, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.883C61062796B43A84815AE71D5B272A.e.35/click, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.771 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.771 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
GET /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:43.772 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:43.772 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:43.773 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=37f95b2e4b9d13fac5fd3722ce178fda,spanId=dee13746a524b2d1} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.773 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=5f633ce8b94460d4, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=dee13746a524b2d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663773000000, endEpochNanos=0}}, span id=5f633ce8b94460d4, trace id=37f95b2e4b9d13fac5fd3722ce178fda} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=9fd339a536123cff, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=dee13746a524b2d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=0f091451-af31-4b61-8ce3-fd838d0f2053}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663773000000, endEpochNanos=0}}, span id=9fd339a536123cff, trace id=37f95b2e4b9d13fac5fd3722ce178fda}
05:07:43.773 DEBUG [HttpTracing.inject] - Injecting (GET) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=37f95b2e4b9d13fac5fd3722ce178fda,spanId=9fd339a536123cff} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.774 DEBUG [JdkHttpClient.execute0] - Executing request: (GET) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:43.774 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 443ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url GET
05:07:43.774 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 444ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url GET,
	 proxy=null
05:07:43.774 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 444ms] HttpClientImpl(1) next timeout: 300000
05:07:43.774 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 444ms] Http2ClientImpl not found in connection pool
05:07:43.774 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 444ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.774 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 444ms] HttpClientImpl(1) next expired: 1199226
05:07:43.774 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 444ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.774 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 444ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.775 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 444ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.775 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 444ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.775 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 444ms] Exchange checkFor407: all clear
05:07:43.775 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 444ms] Http1Exchange Sending headers only
05:07:43.775 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@2637e4d5 queue.isEmpty: true
05:07:43.775 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@2637e4d5, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.775 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.775 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.775 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.775 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 444ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.775 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 444ms] Http1Exchange response created in advance
05:07:43.775 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 444ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.775 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 444ms] SocketTube(1) connecting flows
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 444ms] SocketTube(1) read publisher got subscriber
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 444ms] SocketTube(1) registering subscribe event
05:07:43.775 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 445ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) subscribe event raised
05:07:43.775 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 445ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.775 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 445ms] SocketTube(1) subscribed for writing
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@3c86d84e
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) read demand reset to 0
05:07:43.775 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) calling onSubscribe
05:07:43.776 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 445ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.775 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 445ms] SocketTube(1) write: resetting demand to 0
05:07:43.776 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 445ms] SocketTube(1) write: registering startSubscription event
05:07:43.776 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) onSubscribe called
05:07:43.776 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 445ms] SocketTube(1) pending subscriber subscribed
05:07:43.776 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 445ms] Http1Exchange requestAction.headers
05:07:43.776 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 445ms] HttpClientImpl(1) next timeout: 299998
05:07:43.776 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 445ms] HttpClientImpl(1) next expired: 0
05:07:43.776 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 445ms] Http1Exchange setting outgoing with headers
05:07:43.776 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 445ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.776 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 445ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=429 cap=429]], throwable=null]
05:07:43.776 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 446ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.776 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 445ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.776 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 446ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.776 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 446ms] SocketTube(1) write: starting subscription
05:07:43.776 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 446ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.777 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 446ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.776 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 446ms] SocketTube(1) write: offloading requestMore
05:07:43.777 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 446ms] SocketTube(1) got some demand for reading
05:07:43.777 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 446ms] SocketTube(1) write: requesting more...
05:07:43.777 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 446ms] HttpClientImpl(1) next timeout: 299997
05:07:43.777 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 446ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.777 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 446ms] SocketTube(1) resuming read event
05:07:43.777 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 446ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.777 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 446ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.777 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 447ms] Http1Exchange initiating completion of headersSentCF
05:07:43.777 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 446ms] HttpClientImpl(1) next expired: 0
05:07:43.777 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 447ms] Exchange checkFor407: all clear
05:07:43.777 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 447ms] Exchange sendRequestBody
05:07:43.778 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 447ms] Http1Exchange sendBodyAsync
05:07:43.778 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 447ms] Http1Exchange bodySubscriber is null
05:07:43.777 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 446ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.778 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 447ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.777 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 447ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.778 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 447ms] Http1Publisher(SocketTube(1)) onNext with 429 bytes
05:07:43.778 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 447ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.778 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 447ms] HttpClientImpl(1) next timeout: 299996
05:07:43.778 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 447ms] HttpClientImpl(1) next expired: 0
05:07:43.778 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 447ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.778 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 447ms] SocketTube(1) trying to write: 429
05:07:43.778 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 448ms] SocketTube(1) wrote: 429
05:07:43.778 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 448ms] SocketTube(1) write: requesting more...
05:07:43.778 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 448ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.778 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 448ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.779 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 448ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.779 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 448ms] Http1Exchange initiating completion of bodySentCF
05:07:43.779 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 448ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.779 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 448ms] Http1Exchange reading headers
05:07:43.779 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 448ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.779 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 448ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.779 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 448ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.779 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 448ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@85b1dae
05:07:43.779 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 448ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.786 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 455ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.786 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 455ms] SocketTube(1) read bytes: 873
05:07:43.786 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 456ms] Http1AsyncReceiver(SocketTube(1)) Putting 873 bytes into the queue
05:07:43.786 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 456ms] SocketTube(1) resuming read event
05:07:43.786 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 456ms] Http1AsyncReceiver(SocketTube(1)) Got 873 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@2637e4d5
05:07:43.786 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 456ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.786 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 456ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.786 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 456ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 873 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@2637e4d5
05:07:43.787 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 456ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.787 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 456ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Sending 873/873 bytes to header parser
05:07:43.787 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 456ms] HttpClientImpl(1) next timeout: 299987
05:07:43.787 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 456ms] HttpClientImpl(1) next expired: 0
05:07:43.787 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 456ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.787 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 456ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=128
05:07:43.787 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 456ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@2637e4d5
05:07:43.787 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 456ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.787 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 456ms] Http1Exchange getResponseAsync completed successfully
05:07:43.787 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 456ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.787 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 457ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.787 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4dbe1d7/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@56ca1ce1 queue.isEmpty: false
05:07:43.787 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 745
05:07:43.787 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 457ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=745, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.787 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4dbe1d7/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@56ca1ce1, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.787 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) Got 745 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4dbe1d7/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@56ca1ce1
05:07:43.788 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.788 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 745 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4dbe1d7/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@56ca1ce1
05:07:43.788 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 457ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Sending 745/873 bytes to body parser
05:07:43.788 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 457ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 745 bytes (745 remaining / 745)
05:07:43.788 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 457ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.788 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 457ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.788 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 457ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.788 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 457ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.788 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 457ms] SocketTube(1) connecting flows
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 457ms] SocketTube(1) read publisher got subscriber
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 457ms] SocketTube(1) registering subscribe event
05:07:43.788 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 457ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.788 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 457ms] SocketTube(1) subscribed for writing
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 457ms] SocketTube(1) subscribe event raised
05:07:43.788 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 457ms] SocketTube(1) write: resetting demand to 0
05:07:43.788 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 457ms] SocketTube(1) write: registering startSubscription event
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 457ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.788 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 458ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 458ms] SocketTube(1) read demand reset to 0
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 458ms] SocketTube(1) calling onSubscribe
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 458ms] SocketTube(1) got some demand for reading
05:07:43.788 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 458ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.788 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 458ms] SocketTube(1) resuming read event
05:07:43.788 DEBUG [JdkHttpClient.execute0] - Ending request (GET) /session/2945f8180331255e70d350e8d06dbbf1/url in 14ms
05:07:43.789 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 458ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.789 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=fbb9e1a29a49cf23, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=9fd339a536123cff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663774000000, endEpochNanos=1735189663789067644, attributes=AttributesMap{data={http.method=GET, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=500}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: INTERNAL Description:}, hasEnded=true}
05:07:43.789 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 458ms] Http1Response(id=25, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.789 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=68253f40ff6b6ee1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=9fd339a536123cff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663774000000, endEpochNanos=1735189663789319353, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=500}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: INTERNAL Description:}, hasEnded=true}
05:07:43.789 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 458ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.789 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 458ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.789 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=9fd339a536123cff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=dee13746a524b2d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663773000000, endEpochNanos=1735189663789028375, attributes=AttributesMap{data={http.method=GET, random.key=0f091451-af31-4b61-8ce3-fd838d0f2053, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=500}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="GET", http.request_content_length="0", http.scheme="HTTP", http.status_code=500, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189663788985865, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: INTERNAL Description:}, hasEnded=true}
05:07:43.789 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 458ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.789 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 459ms] SocketTube(1) onSubscribe called
05:07:43.789 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 459ms] SocketTube(1) pending subscriber subscribed
05:07:43.789 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) next timeout: 0
05:07:43.789 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) next expired: 1199211
05:07:43.789 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.789 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 459ms] SocketTube(1) write: starting subscription
05:07:43.790 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 459ms] SocketTube(1) write: offloading requestMore
05:07:43.790 WARN [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "37f95b2e4b9d13fac5fd3722ce178fda","eventTime": 1735189663788985865,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "GET","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 500,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:43.790 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 459ms] SocketTube(1) write: requesting more...
05:07:43.790 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=5f633ce8b94460d4, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=dee13746a524b2d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663773000000, endEpochNanos=1735189663789904178, attributes=AttributesMap{data={http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=500}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: INTERNAL Description:}, hasEnded=true}
05:07:43.790 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) next timeout: 0
05:07:43.790 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=37f95b2e4b9d13fac5fd3722ce178fda, spanId=dee13746a524b2d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663772000000, endEpochNanos=1735189663789354618, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=GET, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=500}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: INTERNAL Description:}, hasEnded=true}
05:07:43.790 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 459ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.790 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) next expired: 1199210
05:07:43.790 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 459ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.792 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.792 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.792 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 352)), decoderResult: success)
05:07:43.792 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 48, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 352)), decoderResult: success)
05:07:43.793 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=98461a298eb7f21cc505076d1dffa8b6,spanId=c6ea04e38a49d82c} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.794 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=7d34b597039a4b49, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c6ea04e38a49d82c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663793000000, endEpochNanos=0}}, span id=7d34b597039a4b49, trace id=98461a298eb7f21cc505076d1dffa8b6} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c5efe93af7d63f3f, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c6ea04e38a49d82c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=fb0d77b0-53b1-46cb-a92d-646e14345fd0}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663794000000, endEpochNanos=0}}, span id=c5efe93af7d63f3f, trace id=98461a298eb7f21cc505076d1dffa8b6}
05:07:43.794 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=98461a298eb7f21cc505076d1dffa8b6,spanId=c5efe93af7d63f3f} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.794 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:43.794 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 464ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST
05:07:43.795 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 464ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST,
	 proxy=null
05:07:43.795 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 464ms] HttpClientImpl(1) next timeout: 300000
05:07:43.795 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 464ms] Http2ClientImpl not found in connection pool
05:07:43.795 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 464ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.795 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 464ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.795 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 464ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.795 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 464ms] HttpClientImpl(1) next expired: 1199205
05:07:43.795 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 464ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.795 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 464ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.795 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 465ms] Exchange checkFor407: all clear
05:07:43.795 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 465ms] Http1Exchange Sending headers only
05:07:43.795 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@1f24999a queue.isEmpty: true
05:07:43.795 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@1f24999a, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.795 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.795 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.795 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.796 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.796 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 465ms] Http1Exchange response created in advance
05:07:43.796 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 465ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.796 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 465ms] SocketTube(1) connecting flows
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 465ms] SocketTube(1) read publisher got subscriber
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 465ms] SocketTube(1) registering subscribe event
05:07:43.796 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 465ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.796 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 465ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.796 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 465ms] SocketTube(1) subscribed for writing
05:07:43.796 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 465ms] SocketTube(1) write: resetting demand to 0
05:07:43.796 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 465ms] SocketTube(1) write: registering startSubscription event
05:07:43.796 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 465ms] Http1Exchange requestAction.headers
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 465ms] SocketTube(1) subscribe event raised
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 465ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@6a8ea7c7
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 465ms] SocketTube(1) read demand reset to 0
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 465ms] SocketTube(1) calling onSubscribe
05:07:43.796 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 465ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.796 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 465ms] Http1Exchange setting outgoing with headers
05:07:43.796 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 466ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 465ms] SocketTube(1) onSubscribe called
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 466ms] SocketTube(1) pending subscriber subscribed
05:07:43.796 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 466ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.796 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 466ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 466ms] SocketTube(1) got some demand for reading
05:07:43.796 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 466ms] SocketTube(1) resuming read event
05:07:43.797 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 466ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.796 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 466ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=431 cap=431]], throwable=null]
05:07:43.796 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 466ms] HttpClientImpl(1) next timeout: 299999
05:07:43.797 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 466ms] HttpClientImpl(1) next expired: 0
05:07:43.797 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 466ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.797 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 466ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.797 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 466ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.797 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 466ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.797 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 466ms] SocketTube(1) write: starting subscription
05:07:43.797 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 466ms] SocketTube(1) write: offloading requestMore
05:07:43.797 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 466ms] HttpClientImpl(1) next timeout: 299998
05:07:43.797 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 466ms] SocketTube(1) write: requesting more...
05:07:43.797 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 467ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.797 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 467ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.797 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 467ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.797 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 467ms] Http1Exchange initiating completion of headersSentCF
05:07:43.797 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 466ms] HttpClientImpl(1) next expired: 0
05:07:43.797 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 467ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.797 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 467ms] Exchange checkFor407: all clear
05:07:43.798 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 467ms] Exchange sendRequestBody
05:07:43.798 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 467ms] Http1Exchange sendBodyAsync
05:07:43.798 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 467ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.798 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 467ms] Http1Exchange requesting more request body from the subscriber
05:07:43.798 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 467ms] jdk.internal.net.http.Http1Request@42012790 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@44aa06f0
05:07:43.798 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 467ms] jdk.internal.net.http.Http1Request@42012790 onNext
05:07:43.798 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 467ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=48 cap=16384]], throwable=null]
05:07:43.798 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 467ms] jdk.internal.net.http.Http1Request@42012790 onComplete
05:07:43.798 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 467ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.798 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 467ms] Http1Publisher(SocketTube(1)) onNext with 431 bytes
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 467ms] SocketTube(1) trying to write: 431
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 467ms] SocketTube(1) wrote: 431
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 467ms] SocketTube(1) write: requesting more...
05:07:43.798 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 467ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.798 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 467ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.798 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 467ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.798 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 467ms] Http1Exchange requesting more request body from the subscriber
05:07:43.798 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 468ms] jdk.internal.net.http.Http1Request@42012790 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@44aa06f0
05:07:43.798 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 468ms] Http1Publisher(SocketTube(1)) onNext with 48 bytes
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 468ms] SocketTube(1) trying to write: 48
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 468ms] SocketTube(1) wrote: 48
05:07:43.798 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 468ms] SocketTube(1) write: requesting more...
05:07:43.798 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 468ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.798 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 468ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.798 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 468ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.798 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 468ms] Http1Exchange initiating completion of bodySentCF
05:07:43.798 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 468ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.798 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 468ms] Http1Exchange reading headers
05:07:43.799 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 468ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.799 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 468ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.799 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 468ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.799 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 468ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1fc36322
05:07:43.799 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 468ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.822 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 491ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.822 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 491ms] SocketTube(1) read bytes: 122
05:07:43.822 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 491ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.822 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 491ms] SocketTube(1) resuming read event
05:07:43.822 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 492ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.822 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 492ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.822 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@1f24999a
05:07:43.822 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.822 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@1f24999a
05:07:43.822 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 492ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.823 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 492ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.823 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@1f24999a
05:07:43.823 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 492ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.823 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 492ms] Http1Exchange getResponseAsync completed successfully
05:07:43.823 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 492ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.823 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 492ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.823 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@2490d109/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3099ceed queue.isEmpty: false
05:07:43.823 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 492ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.823 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 492ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.823 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@2490d109/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3099ceed, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.823 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@2490d109/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3099ceed
05:07:43.823 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.823 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@2490d109/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3099ceed
05:07:43.823 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 493ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.823 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 493ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.823 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 493ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.823 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.824 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 493ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.824 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 493ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.824 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 493ms] SocketTube(1) connecting flows
05:07:43.824 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 493ms] SocketTube(1) read publisher got subscriber
05:07:43.824 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 493ms] SocketTube(1) registering subscribe event
05:07:43.824 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 493ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.824 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 493ms] SocketTube(1) subscribed for writing
05:07:43.824 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 493ms] SocketTube(1) write: resetting demand to 0
05:07:43.824 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 493ms] SocketTube(1) write: registering startSubscription event
05:07:43.824 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 493ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.824 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 493ms] Http1Response(id=26, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.824 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.824 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 493ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.824 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/url in 30ms
05:07:43.822 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 492ms] HttpClientImpl(1) next timeout: 299973
05:07:43.824 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 494ms] HttpClientImpl(1) next expired: 1199176
05:07:43.824 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=0d5051e7c61617aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c5efe93af7d63f3f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663794000000, endEpochNanos=1735189663824232725, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.824 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 494ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) subscribe event raised
05:07:43.825 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=db4a75be7724f544, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c5efe93af7d63f3f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663794000000, endEpochNanos=1735189663824515362, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.825 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 494ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) read demand reset to 0
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) calling onSubscribe
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) got some demand for reading
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) resuming read event
05:07:43.825 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c5efe93af7d63f3f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c6ea04e38a49d82c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663794000000, endEpochNanos=1735189663825102206, attributes=AttributesMap{data={http.method=POST, random.key=fb0d77b0-53b1-46cb-a92d-646e14345fd0, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="48", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189663825091105, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.825 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 494ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.825 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) onSubscribe called
05:07:43.825 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) pending subscriber subscribed
05:07:43.825 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) write: starting subscription
05:07:43.825 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 494ms] SocketTube(1) write: offloading requestMore
05:07:43.825 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 494ms] HttpClientImpl(1) next timeout: 0
05:07:43.825 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 494ms] SocketTube(1) write: requesting more...
05:07:43.825 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 495ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.825 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 494ms] HttpClientImpl(1) next expired: 1199175
05:07:43.825 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 495ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.825 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "98461a298eb7f21cc505076d1dffa8b6","eventTime": 1735189663825091105,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "48","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:43.825 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=7d34b597039a4b49, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c6ea04e38a49d82c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663793000000, endEpochNanos=1735189663825245788, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.826 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=98461a298eb7f21cc505076d1dffa8b6, spanId=c6ea04e38a49d82c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663793000000, endEpochNanos=1735189663825682542, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.827 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 40
05:07:43.827 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 40
05:07:43.827 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 40, cap: 40/40, unwrapped: PooledUnsafeDirectByteBuf(ridx: 228, widx: 228, cap: 336)), decoderResult: success)
05:07:43.827 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 40, widx: 40, cap: 40/40, unwrapped: PooledUnsafeDirectByteBuf(ridx: 228, widx: 228, cap: 336)), decoderResult: success)
05:07:43.829 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=c794cb15f577d3a1fbe81d7a441da436,spanId=24fab27d3102adea} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.830 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.830 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 499ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.830 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 499ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.830 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 499ms] Http2ClientImpl not found in connection pool
05:07:43.830 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 500ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.830 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 500ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.830 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 500ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.830 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 500ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.831 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 500ms] Exchange checkFor407: all clear
05:07:43.831 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 500ms] Http1Exchange Sending headers only
05:07:43.831 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@7fb1f4e5 queue.isEmpty: true
05:07:43.831 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@7fb1f4e5, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.831 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.831 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.831 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.831 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 500ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.831 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 500ms] HttpClientImpl(1) next timeout: 299999
05:07:43.831 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 500ms] HttpClientImpl(1) next expired: 0
05:07:43.831 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 500ms] Http1Exchange response created in advance
05:07:43.831 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 500ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.831 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 500ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.831 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 501ms] SocketTube(1) connecting flows
05:07:43.831 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 501ms] SocketTube(1) read publisher got subscriber
05:07:43.831 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 501ms] SocketTube(1) registering subscribe event
05:07:43.831 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 501ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.831 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) subscribe event raised
05:07:43.831 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 501ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.831 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 501ms] SocketTube(1) subscribed for writing
05:07:43.831 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@50d26e41
05:07:43.832 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) read demand reset to 0
05:07:43.832 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) calling onSubscribe
05:07:43.831 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 501ms] SocketTube(1) write: resetting demand to 0
05:07:43.832 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 501ms] SocketTube(1) write: registering startSubscription event
05:07:43.832 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 501ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.832 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 501ms] Http1Exchange requestAction.headers
05:07:43.832 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 501ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.832 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) onSubscribe called
05:07:43.832 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 501ms] Http1Exchange setting outgoing with headers
05:07:43.832 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 501ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.832 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 501ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.832 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 502ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.832 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 501ms] SocketTube(1) pending subscriber subscribed
05:07:43.832 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 502ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.832 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 501ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.832 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) next timeout: 299998
05:07:43.832 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) next expired: 0
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.832 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 502ms] SocketTube(1) got some demand for reading
05:07:43.833 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 502ms] SocketTube(1) resuming read event
05:07:43.833 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 502ms] SocketTube(1) write: starting subscription
05:07:43.833 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 502ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.833 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 502ms] SocketTube(1) write: offloading requestMore
05:07:43.833 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 502ms] SocketTube(1) write: requesting more...
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) next timeout: 299997
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) next expired: 0
05:07:43.833 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 502ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 502ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.833 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 502ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.833 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 503ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.833 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 502ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 503ms] HttpClientImpl(1) next timeout: 299997
05:07:43.833 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 503ms] Http1Exchange initiating completion of headersSentCF
05:07:43.833 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 503ms] Exchange checkFor407: all clear
05:07:43.833 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 503ms] Exchange sendRequestBody
05:07:43.833 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 503ms] Http1Exchange sendBodyAsync
05:07:43.833 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 503ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.834 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 503ms] Http1Exchange requesting more request body from the subscriber
05:07:43.834 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 503ms] jdk.internal.net.http.Http1Request@75b96746 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5197c6da
05:07:43.834 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 503ms] jdk.internal.net.http.Http1Request@75b96746 onNext
05:07:43.834 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 503ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=40 cap=16384]], throwable=null]
05:07:43.834 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 503ms] jdk.internal.net.http.Http1Request@75b96746 onComplete
05:07:43.833 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 503ms] HttpClientImpl(1) next expired: 0
05:07:43.834 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 503ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.834 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 503ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.834 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 503ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.834 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 503ms] SocketTube(1) trying to write: 460
05:07:43.834 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 503ms] SocketTube(1) wrote: 460
05:07:43.834 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 503ms] SocketTube(1) write: requesting more...
05:07:43.834 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 504ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.834 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 504ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.834 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 504ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.834 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 504ms] Http1Exchange requesting more request body from the subscriber
05:07:43.834 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 504ms] jdk.internal.net.http.Http1Request@75b96746 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5197c6da
05:07:43.834 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 504ms] Http1Publisher(SocketTube(1)) onNext with 40 bytes
05:07:43.834 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 504ms] SocketTube(1) trying to write: 40
05:07:43.834 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 504ms] SocketTube(1) wrote: 40
05:07:43.835 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 504ms] SocketTube(1) write: requesting more...
05:07:43.835 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 504ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.835 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 504ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.835 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 504ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.835 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 504ms] Http1Exchange initiating completion of bodySentCF
05:07:43.835 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 504ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.835 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 504ms] Http1Exchange reading headers
05:07:43.835 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 504ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.835 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 504ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.835 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 504ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.835 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 504ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@719a5c4d
05:07:43.835 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 504ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.853 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 522ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.853 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 522ms] SocketTube(1) read bytes: 973
05:07:43.853 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 522ms] Http1AsyncReceiver(SocketTube(1)) Putting 973 bytes into the queue
05:07:43.853 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 522ms] SocketTube(1) resuming read event
05:07:43.853 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 522ms] Http1AsyncReceiver(SocketTube(1)) Got 973 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@7fb1f4e5
05:07:43.853 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.853 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 973 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@7fb1f4e5
05:07:43.853 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 522ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.853 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 523ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.853 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 523ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Sending 973/973 bytes to header parser
05:07:43.853 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 523ms] HttpClientImpl(1) next timeout: 299977
05:07:43.853 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 523ms] HttpClientImpl(1) next expired: 0
05:07:43.853 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 523ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.853 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 523ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=116
05:07:43.854 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@7fb1f4e5
05:07:43.854 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 523ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.854 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 523ms] Http1Exchange getResponseAsync completed successfully
05:07:43.854 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 523ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.854 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 523ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.854 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@467ef1a5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@29304ea6 queue.isEmpty: false
05:07:43.854 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 857
05:07:43.854 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 523ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=857, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.854 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@467ef1a5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@29304ea6, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.854 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Got 857 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@467ef1a5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@29304ea6
05:07:43.854 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.854 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 523ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 857 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@467ef1a5/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@29304ea6
05:07:43.854 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 524ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Sending 857/973 bytes to body parser
05:07:43.854 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 524ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 857 bytes (857 remaining / 857)
05:07:43.854 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 524ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.854 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 524ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.854 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 524ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.854 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 524ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.854 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 524ms] SocketTube(1) connecting flows
05:07:43.854 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 524ms] SocketTube(1) read publisher got subscriber
05:07:43.854 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 524ms] SocketTube(1) registering subscribe event
05:07:43.854 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 524ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.855 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 524ms] SocketTube(1) subscribed for writing
05:07:43.855 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 524ms] SocketTube(1) write: resetting demand to 0
05:07:43.855 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 524ms] SocketTube(1) write: registering startSubscription event
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) subscribe event raised
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.855 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 524ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) read demand reset to 0
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) calling onSubscribe
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) got some demand for reading
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) resuming read event
05:07:43.855 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 524ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.855 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 524ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.855 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 524ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 525ms] SocketTube(1) onSubscribe called
05:07:43.855 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 25ms
05:07:43.855 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 525ms] SocketTube(1) pending subscriber subscribed
05:07:43.855 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 525ms] HttpClientImpl(1) next timeout: 0
05:07:43.855 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 524ms] Http1Response(id=27, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.855 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 525ms] HttpClientImpl(1) next expired: 1199145
05:07:43.855 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 525ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.855 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=59110b3d641b7902, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=24fab27d3102adea, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663830000000, endEpochNanos=1735189663855790015, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:43.856 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 525ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.856 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=ca84ba23472e7132, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=24fab27d3102adea, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663829000000, endEpochNanos=1735189663855247839, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:43.856 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=19dd3b5089f961fe, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=24fab27d3102adea, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663829000000, endEpochNanos=1735189663856041038, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:43.856 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=c794cb15f577d3a1fbe81d7a441da436, spanId=24fab27d3102adea, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663828000000, endEpochNanos=1735189663855593439, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:43.856 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 525ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.857 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 526ms] SocketTube(1) write: starting subscription
05:07:43.857 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 526ms] SocketTube(1) write: offloading requestMore
05:07:43.857 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 526ms] HttpClientImpl(1) next timeout: 0
05:07:43.857 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 526ms] SocketTube(1) write: requesting more...
05:07:43.857 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 526ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.857 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 526ms] HttpClientImpl(1) next expired: 1199143
05:07:43.857 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 526ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.858 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 33
05:07:43.858 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 33
05:07:43.858 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 33, cap: 33/33, unwrapped: PooledUnsafeDirectByteBuf(ridx: 217, widx: 217, cap: 336)), decoderResult: success)
05:07:43.858 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 33, widx: 33, cap: 33/33, unwrapped: PooledUnsafeDirectByteBuf(ridx: 217, widx: 217, cap: 336)), decoderResult: success)
05:07:43.859 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=3bfe13a24482460d1d9b4b7bc4462801,spanId=08116b3889e012b6} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.859 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=96ebb19b33ff26bb, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=08116b3889e012b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663859000000, endEpochNanos=0}}, span id=96ebb19b33ff26bb, trace id=3bfe13a24482460d1d9b4b7bc4462801} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=9d90f038b5dc1a76, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=08116b3889e012b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=c390242e-7cbf-4529-b910-0f4c1dca51f2}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663859000000, endEpochNanos=0}}, span id=9d90f038b5dc1a76, trace id=3bfe13a24482460d1d9b4b7bc4462801}
05:07:43.860 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=3bfe13a24482460d1d9b4b7bc4462801,spanId=9d90f038b5dc1a76} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.860 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:43.860 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 530ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST
05:07:43.860 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 530ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST,
	 proxy=null
05:07:43.860 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 530ms] HttpClientImpl(1) next timeout: 300000
05:07:43.861 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 530ms] HttpClientImpl(1) next expired: 1199139
05:07:43.861 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 530ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.861 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 530ms] Http2ClientImpl not found in connection pool
05:07:43.861 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 530ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.861 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 530ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.861 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 530ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.861 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 530ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.861 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 530ms] Exchange checkFor407: all clear
05:07:43.861 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 530ms] Http1Exchange Sending headers only
05:07:43.861 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 530ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@34d6d119 queue.isEmpty: true
05:07:43.861 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@34d6d119, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.861 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.861 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.861 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.861 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.861 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 531ms] Http1Exchange response created in advance
05:07:43.861 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 531ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.861 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 531ms] SocketTube(1) connecting flows
05:07:43.861 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 531ms] SocketTube(1) read publisher got subscriber
05:07:43.861 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 531ms] SocketTube(1) registering subscribe event
05:07:43.862 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 531ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) subscribe event raised
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@6b2db425
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) read demand reset to 0
05:07:43.862 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 531ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.862 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 531ms] SocketTube(1) subscribed for writing
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) calling onSubscribe
05:07:43.862 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.862 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 531ms] SocketTube(1) write: resetting demand to 0
05:07:43.862 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 531ms] SocketTube(1) write: registering startSubscription event
05:07:43.862 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) onSubscribe called
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 531ms] SocketTube(1) pending subscriber subscribed
05:07:43.862 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 531ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.862 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 532ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 532ms] SocketTube(1) got some demand for reading
05:07:43.862 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 532ms] SocketTube(1) resuming read event
05:07:43.862 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 531ms] Http1Exchange requestAction.headers
05:07:43.862 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 532ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.863 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 532ms] Http1Exchange setting outgoing with headers
05:07:43.862 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 532ms] HttpClientImpl(1) next timeout: 299998
05:07:43.863 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 532ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=431 cap=431]], throwable=null]
05:07:43.863 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 532ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.863 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 532ms] HttpClientImpl(1) next expired: 0
05:07:43.863 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 532ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.863 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 532ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.863 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 532ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.863 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 532ms] SocketTube(1) write: starting subscription
05:07:43.863 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 532ms] SocketTube(1) write: offloading requestMore
05:07:43.863 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 532ms] HttpClientImpl(1) next timeout: 299997
05:07:43.863 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 532ms] SocketTube(1) write: requesting more...
05:07:43.863 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 532ms] HttpClientImpl(1) next expired: 0
05:07:43.863 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 533ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.863 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 533ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.863 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 533ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.863 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 533ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.864 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 533ms] Http1Exchange initiating completion of headersSentCF
05:07:43.864 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 533ms] Exchange checkFor407: all clear
05:07:43.864 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 533ms] Exchange sendRequestBody
05:07:43.864 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 533ms] Http1Exchange sendBodyAsync
05:07:43.864 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 533ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.864 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 533ms] Http1Exchange requesting more request body from the subscriber
05:07:43.864 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 533ms] jdk.internal.net.http.Http1Request@2efad695 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@594edff
05:07:43.864 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 533ms] jdk.internal.net.http.Http1Request@2efad695 onNext
05:07:43.864 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 533ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=33 cap=16384]], throwable=null]
05:07:43.864 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 533ms] jdk.internal.net.http.Http1Request@2efad695 onComplete
05:07:43.864 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 534ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.864 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 534ms] Http1Publisher(SocketTube(1)) onNext with 431 bytes
05:07:43.864 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 534ms] SocketTube(1) trying to write: 431
05:07:43.864 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 534ms] SocketTube(1) wrote: 431
05:07:43.864 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 534ms] SocketTube(1) write: requesting more...
05:07:43.864 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 534ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.864 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 534ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.864 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 534ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.864 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 534ms] Http1Exchange requesting more request body from the subscriber
05:07:43.865 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 534ms] jdk.internal.net.http.Http1Request@2efad695 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@594edff
05:07:43.865 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 534ms] Http1Publisher(SocketTube(1)) onNext with 33 bytes
05:07:43.865 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 534ms] SocketTube(1) trying to write: 33
05:07:43.865 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 534ms] SocketTube(1) wrote: 33
05:07:43.865 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 534ms] SocketTube(1) write: requesting more...
05:07:43.865 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 534ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.865 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 534ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.865 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 534ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.865 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 534ms] Http1Exchange initiating completion of bodySentCF
05:07:43.865 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 534ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.865 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 534ms] Http1Exchange reading headers
05:07:43.865 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 534ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.865 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 534ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.865 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 534ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.865 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 534ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@55f025dc
05:07:43.865 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 534ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.896 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 565ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.896 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 566ms] SocketTube(1) read bytes: 122
05:07:43.896 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 566ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.896 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 566ms] SocketTube(1) resuming read event
05:07:43.896 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 566ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@34d6d119
05:07:43.897 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 566ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.897 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 566ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@34d6d119
05:07:43.896 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 566ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.897 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 566ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.897 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 566ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.897 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 566ms] HttpClientImpl(1) next timeout: 299963
05:07:43.897 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 566ms] HttpClientImpl(1) next expired: 0
05:07:43.897 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 566ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.897 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 566ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.897 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 566ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@34d6d119
05:07:43.897 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 566ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.897 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 566ms] Http1Exchange getResponseAsync completed successfully
05:07:43.897 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 566ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.897 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 567ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.897 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@57ac7862/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@75f58c7d queue.isEmpty: false
05:07:43.897 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.897 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 567ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.898 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@57ac7862/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@75f58c7d, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.898 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@57ac7862/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@75f58c7d
05:07:43.898 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.898 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@57ac7862/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@75f58c7d
05:07:43.898 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 567ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.898 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 567ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.898 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 567ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.898 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 567ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.898 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 567ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.898 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 567ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.898 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 567ms] SocketTube(1) connecting flows
05:07:43.898 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 567ms] SocketTube(1) read publisher got subscriber
05:07:43.898 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 567ms] SocketTube(1) registering subscribe event
05:07:43.898 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 567ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.898 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 567ms] SocketTube(1) subscribed for writing
05:07:43.898 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 567ms] SocketTube(1) write: resetting demand to 0
05:07:43.898 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 567ms] SocketTube(1) write: registering startSubscription event
05:07:43.898 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 568ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.898 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 568ms] Http1Response(id=28, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.898 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 568ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.898 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 568ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.898 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) subscribe event raised
05:07:43.898 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.898 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 568ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) read demand reset to 0
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) calling onSubscribe
05:07:43.898 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/url in 38ms
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) got some demand for reading
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) resuming read event
05:07:43.899 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 568ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.899 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.899 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=086fe7aabb6a88ac, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=9d90f038b5dc1a76, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663860000000, endEpochNanos=1735189663898837072, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) onSubscribe called
05:07:43.899 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) pending subscriber subscribed
05:07:43.899 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) write: starting subscription
05:07:43.899 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 568ms] SocketTube(1) write: offloading requestMore
05:07:43.899 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 568ms] HttpClientImpl(1) next timeout: 0
05:07:43.899 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 568ms] SocketTube(1) write: requesting more...
05:07:43.899 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 569ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.899 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=058577775830a1c0, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=9d90f038b5dc1a76, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663860000000, endEpochNanos=1735189663899229704, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.899 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 569ms] HttpClientImpl(1) next expired: 1199101
05:07:43.899 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 569ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.900 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=9d90f038b5dc1a76, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=08116b3889e012b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663859000000, endEpochNanos=1735189663899133248, attributes=AttributesMap{data={http.method=POST, random.key=c390242e-7cbf-4529-b910-0f4c1dca51f2, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="33", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189663899121857, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.900 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "3bfe13a24482460d1d9b4b7bc4462801","eventTime": 1735189663899121857,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "33","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:43.900 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=96ebb19b33ff26bb, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=08116b3889e012b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663859000000, endEpochNanos=1735189663900280758, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.900 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3bfe13a24482460d1d9b4b7bc4462801, spanId=08116b3889e012b6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663858000000, endEpochNanos=1735189663899757798, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.902 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.902 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 44
05:07:43.902 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 320)), decoderResult: success)
05:07:43.902 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 44, widx: 44, cap: 44/44, unwrapped: PooledUnsafeDirectByteBuf(ridx: 232, widx: 232, cap: 320)), decoderResult: success)
05:07:43.903 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=1ee7dbed3019b85c1d16c283a16d3b25,spanId=5f556cbb17c189dd} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.904 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.904 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 573ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.904 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 574ms] HttpClientImpl(1) next timeout: 300000
05:07:43.904 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 574ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.904 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 574ms] HttpClientImpl(1) next expired: 1199096
05:07:43.904 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 574ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.905 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 574ms] Http2ClientImpl not found in connection pool
05:07:43.905 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 574ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.905 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 574ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.905 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 574ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.905 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 574ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.905 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 574ms] Exchange checkFor407: all clear
05:07:43.905 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 575ms] Http1Exchange Sending headers only
05:07:43.905 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@59c9b899 queue.isEmpty: true
05:07:43.905 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@59c9b899, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.905 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.905 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.906 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.906 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 575ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.906 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 575ms] Http1Exchange response created in advance
05:07:43.906 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 575ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.906 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 575ms] SocketTube(1) connecting flows
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 575ms] SocketTube(1) read publisher got subscriber
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 575ms] SocketTube(1) registering subscribe event
05:07:43.906 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 575ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 575ms] SocketTube(1) subscribe event raised
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 575ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@61e355a6
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 575ms] SocketTube(1) read demand reset to 0
05:07:43.906 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 575ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.906 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 575ms] SocketTube(1) subscribed for writing
05:07:43.906 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 575ms] SocketTube(1) write: resetting demand to 0
05:07:43.906 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 576ms] SocketTube(1) write: registering startSubscription event
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 575ms] SocketTube(1) calling onSubscribe
05:07:43.906 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 576ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.906 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 576ms] Http1Exchange requestAction.headers
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 576ms] SocketTube(1) onSubscribe called
05:07:43.906 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 576ms] SocketTube(1) pending subscriber subscribed
05:07:43.906 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 576ms] HttpClientImpl(1) next timeout: 299998
05:07:43.907 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 576ms] HttpClientImpl(1) next expired: 0
05:07:43.907 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 576ms] Http1Exchange setting outgoing with headers
05:07:43.906 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 576ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.907 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 576ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.907 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 576ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.907 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 576ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.907 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 576ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.907 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 576ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.907 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 576ms] SocketTube(1) write: starting subscription
05:07:43.907 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 576ms] SocketTube(1) write: offloading requestMore
05:07:43.907 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 576ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.907 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 576ms] SocketTube(1) write: requesting more...
05:07:43.907 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 576ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.907 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 576ms] HttpClientImpl(1) next timeout: 299997
05:07:43.907 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 577ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.907 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 577ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.907 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 576ms] SocketTube(1) got some demand for reading
05:07:43.907 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 577ms] Http1Exchange initiating completion of headersSentCF
05:07:43.907 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 577ms] HttpClientImpl(1) next expired: 0
05:07:43.907 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 577ms] Exchange checkFor407: all clear
05:07:43.907 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 577ms] SocketTube(1) resuming read event
05:07:43.908 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 577ms] Exchange sendRequestBody
05:07:43.907 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 577ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.908 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 577ms] Http1Exchange sendBodyAsync
05:07:43.908 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 577ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.908 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 577ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.908 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 577ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.908 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 577ms] HttpClientImpl(1) next timeout: 299996
05:07:43.908 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 577ms] HttpClientImpl(1) next expired: 0
05:07:43.908 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 577ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.908 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 577ms] Http1Exchange requesting more request body from the subscriber
05:07:43.908 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 577ms] jdk.internal.net.http.Http1Request@345d5b11 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@6d12a4aa
05:07:43.908 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 577ms] jdk.internal.net.http.Http1Request@345d5b11 onNext
05:07:43.908 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 578ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=44 cap=16384]], throwable=null]
05:07:43.908 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 578ms] jdk.internal.net.http.Http1Request@345d5b11 onComplete
05:07:43.908 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 578ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.908 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 578ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.908 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 578ms] SocketTube(1) trying to write: 460
05:07:43.908 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 578ms] SocketTube(1) wrote: 460
05:07:43.908 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 578ms] SocketTube(1) write: requesting more...
05:07:43.908 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 578ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.909 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 578ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.909 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 578ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.909 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 578ms] Http1Exchange requesting more request body from the subscriber
05:07:43.909 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 578ms] jdk.internal.net.http.Http1Request@345d5b11 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@6d12a4aa
05:07:43.909 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 578ms] Http1Publisher(SocketTube(1)) onNext with 44 bytes
05:07:43.909 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 578ms] SocketTube(1) trying to write: 44
05:07:43.909 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 578ms] SocketTube(1) wrote: 44
05:07:43.909 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 578ms] SocketTube(1) write: requesting more...
05:07:43.909 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 578ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.909 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 578ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.909 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 578ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.909 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 578ms] Http1Exchange initiating completion of bodySentCF
05:07:43.909 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 578ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.909 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 578ms] Http1Exchange reading headers
05:07:43.909 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 578ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.909 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 578ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.909 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 578ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.909 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 578ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@241f6d40
05:07:43.909 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 578ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.919 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 589ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.919 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 589ms] SocketTube(1) read bytes: 235
05:07:43.919 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.919 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 589ms] SocketTube(1) resuming read event
05:07:43.919 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@59c9b899
05:07:43.919 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.919 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 589ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.920 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 589ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.920 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@59c9b899
05:07:43.920 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 589ms] HttpClientImpl(1) next timeout: 299984
05:07:43.920 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 589ms] HttpClientImpl(1) next expired: 0
05:07:43.920 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 589ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.920 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 589ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.920 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 589ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.920 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@59c9b899
05:07:43.920 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 589ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.920 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 589ms] Http1Exchange getResponseAsync completed successfully
05:07:43.920 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 589ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.920 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 589ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.920 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 589ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@3086142a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4849c164 queue.isEmpty: false
05:07:43.920 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.920 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 590ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.920 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@3086142a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4849c164, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.920 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@3086142a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4849c164
05:07:43.920 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.920 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@3086142a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@4849c164
05:07:43.920 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 590ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.920 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 590ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.920 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 590ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.920 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.921 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 590ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.921 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 590ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.921 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 590ms] SocketTube(1) connecting flows
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 590ms] SocketTube(1) read publisher got subscriber
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 590ms] SocketTube(1) registering subscribe event
05:07:43.921 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 590ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.921 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 590ms] SocketTube(1) subscribed for writing
05:07:43.921 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 590ms] SocketTube(1) write: resetting demand to 0
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) subscribe event raised
05:07:43.921 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 590ms] SocketTube(1) write: registering startSubscription event
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.921 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 590ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) read demand reset to 0
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) calling onSubscribe
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) got some demand for reading
05:07:43.921 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 590ms] SocketTube(1) resuming read event
05:07:43.921 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 590ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.921 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 590ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.921 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 590ms] Http1Response(id=29, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.921 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 17ms
05:07:43.921 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 591ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.922 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=4ca8c6aaea59300c, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=5f556cbb17c189dd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663904000000, endEpochNanos=1735189663921853513, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.922 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 591ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.921 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 591ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.922 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=49d1802dd144d668, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=5f556cbb17c189dd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663904000000, endEpochNanos=1735189663922029622, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.922 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 591ms] SocketTube(1) onSubscribe called
05:07:43.922 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=c69b9fbf9a4e4783, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=5f556cbb17c189dd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663903000000, endEpochNanos=1735189663921648716, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.922 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 591ms] SocketTube(1) pending subscriber subscribed
05:07:43.922 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=1ee7dbed3019b85c1d16c283a16d3b25, spanId=5f556cbb17c189dd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663903000000, endEpochNanos=1735189663922046197, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 591ms] HttpClientImpl(1) next timeout: 0
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 591ms] HttpClientImpl(1) next expired: 1199078
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 591ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.922 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 591ms] SocketTube(1) write: starting subscription
05:07:43.922 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 591ms] SocketTube(1) write: offloading requestMore
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 591ms] HttpClientImpl(1) next timeout: 0
05:07:43.922 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 591ms] SocketTube(1) write: requesting more...
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 591ms] HttpClientImpl(1) next expired: 1199078
05:07:43.922 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 592ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.922 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 592ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.923 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 20
05:07:43.923 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 20
05:07:43.923 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 20, cap: 20/20, unwrapped: PooledUnsafeDirectByteBuf(ridx: 289, widx: 289, cap: 320)), decoderResult: success)
05:07:43.923 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 20, widx: 20, cap: 20/20, unwrapped: PooledUnsafeDirectByteBuf(ridx: 289, widx: 289, cap: 320)), decoderResult: success)
05:07:43.924 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value into OpenTelemetrySpan{traceId=2e3ceb6853f3770be6b2360a72ec9051,spanId=ab302336e76d1e2b} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.925 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=1fe7f1e7819031e9, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=ab302336e76d1e2b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663924000000, endEpochNanos=0}}, span id=1fe7f1e7819031e9, trace id=2e3ceb6853f3770be6b2360a72ec9051} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=b4b5c4859d78b017, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=ab302336e76d1e2b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=7ae30e65-9edf-4051-9dbf-9065d63406e4}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663925000000, endEpochNanos=0}}, span id=b4b5c4859d78b017, trace id=2e3ceb6853f3770be6b2360a72ec9051}
05:07:43.925 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value into OpenTelemetrySpan{traceId=2e3ceb6853f3770be6b2360a72ec9051,spanId=b4b5c4859d78b017} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.925 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value
05:07:43.925 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 595ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value POST
05:07:43.925 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 595ms] HttpClientImpl(1) next timeout: 300000
05:07:43.925 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 595ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value POST,
	 proxy=null
05:07:43.926 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 595ms] HttpClientImpl(1) next expired: 1199074
05:07:43.926 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 595ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.926 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 595ms] Http2ClientImpl not found in connection pool
05:07:43.926 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 595ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.926 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 595ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.926 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 595ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.926 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 596ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.926 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 596ms] Exchange checkFor407: all clear
05:07:43.926 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 596ms] Http1Exchange Sending headers only
05:07:43.926 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@49388450 queue.isEmpty: true
05:07:43.926 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@49388450, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.927 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.927 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.927 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.927 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 596ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.927 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 596ms] Http1Exchange response created in advance
05:07:43.927 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 596ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.927 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 596ms] SocketTube(1) connecting flows
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 596ms] SocketTube(1) read publisher got subscriber
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 596ms] SocketTube(1) registering subscribe event
05:07:43.927 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 596ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 596ms] SocketTube(1) subscribe event raised
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 597ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@7ecc66c2
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 597ms] SocketTube(1) read demand reset to 0
05:07:43.927 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 596ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.927 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 597ms] SocketTube(1) subscribed for writing
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 597ms] SocketTube(1) calling onSubscribe
05:07:43.927 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 597ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.927 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 597ms] SocketTube(1) write: resetting demand to 0
05:07:43.927 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 597ms] SocketTube(1) write: registering startSubscription event
05:07:43.928 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 597ms] Http1Exchange requestAction.headers
05:07:43.927 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 597ms] SocketTube(1) onSubscribe called
05:07:43.928 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 597ms] SocketTube(1) pending subscriber subscribed
05:07:43.927 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 597ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.928 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 597ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.928 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 597ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.928 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 597ms] SocketTube(1) got some demand for reading
05:07:43.928 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 597ms] SocketTube(1) resuming read event
05:07:43.928 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 597ms] Http1Exchange setting outgoing with headers
05:07:43.928 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 597ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:43.928 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 597ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.928 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 597ms] HttpClientImpl(1) next timeout: 299997
05:07:43.928 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 597ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.928 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 597ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.928 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 598ms] HttpClientImpl(1) next expired: 0
05:07:43.928 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 598ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.928 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 598ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.928 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 598ms] SocketTube(1) write: starting subscription
05:07:43.928 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 598ms] SocketTube(1) write: offloading requestMore
05:07:43.929 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 598ms] HttpClientImpl(1) next timeout: 299996
05:07:43.929 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 598ms] HttpClientImpl(1) next expired: 0
05:07:43.929 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 598ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.929 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 598ms] SocketTube(1) write: requesting more...
05:07:43.929 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 598ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.929 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 598ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.929 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 598ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.929 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 598ms] Http1Exchange initiating completion of headersSentCF
05:07:43.929 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 598ms] Exchange checkFor407: all clear
05:07:43.929 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 598ms] Exchange sendRequestBody
05:07:43.929 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 598ms] Http1Exchange sendBodyAsync
05:07:43.929 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 598ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.929 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 598ms] Http1Exchange requesting more request body from the subscriber
05:07:43.929 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 598ms] jdk.internal.net.http.Http1Request@239b2969 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5d0b7a83
05:07:43.929 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 598ms] jdk.internal.net.http.Http1Request@239b2969 onNext
05:07:43.929 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 598ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=20 cap=16384]], throwable=null]
05:07:43.929 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 598ms] jdk.internal.net.http.Http1Request@239b2969 onComplete
05:07:43.929 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 598ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.929 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 599ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:43.929 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 599ms] SocketTube(1) trying to write: 516
05:07:43.929 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 599ms] SocketTube(1) wrote: 516
05:07:43.929 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 599ms] SocketTube(1) write: requesting more...
05:07:43.929 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 599ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.929 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 599ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.929 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 599ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.930 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 599ms] Http1Exchange requesting more request body from the subscriber
05:07:43.930 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 599ms] jdk.internal.net.http.Http1Request@239b2969 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@5d0b7a83
05:07:43.930 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 599ms] Http1Publisher(SocketTube(1)) onNext with 20 bytes
05:07:43.930 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 599ms] SocketTube(1) trying to write: 20
05:07:43.930 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 599ms] SocketTube(1) wrote: 20
05:07:43.930 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 599ms] SocketTube(1) write: requesting more...
05:07:43.930 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 599ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.930 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 599ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.930 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 599ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.930 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 599ms] Http1Exchange initiating completion of bodySentCF
05:07:43.930 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 599ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.930 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 599ms] Http1Exchange reading headers
05:07:43.930 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 599ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.930 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 599ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.930 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 599ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.930 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 599ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@22e3ced9
05:07:43.930 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 599ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.973 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 642ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.973 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 642ms] SocketTube(1) read bytes: 122
05:07:43.973 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 642ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:43.973 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 642ms] SocketTube(1) resuming read event
05:07:43.973 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 642ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@49388450
05:07:43.973 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 642ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.973 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 642ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.973 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 642ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.973 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 642ms] HttpClientImpl(1) next timeout: 299952
05:07:43.973 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@49388450
05:07:43.973 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 643ms] HttpClientImpl(1) next expired: 0
05:07:43.973 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:43.973 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 643ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.973 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:43.973 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@49388450
05:07:43.974 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.974 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 643ms] Http1Exchange getResponseAsync completed successfully
05:07:43.974 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.974 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.974 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@520500bc/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@545ca71d queue.isEmpty: false
05:07:43.974 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:43.974 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 643ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.974 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@520500bc/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@545ca71d, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.974 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@520500bc/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@545ca71d
05:07:43.974 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.974 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@520500bc/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@545ca71d
05:07:43.974 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 643ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:43.974 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 643ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:43.974 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 643ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.974 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 643ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.974 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 644ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.974 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 644ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.974 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 644ms] SocketTube(1) connecting flows
05:07:43.974 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 644ms] SocketTube(1) read publisher got subscriber
05:07:43.974 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 644ms] SocketTube(1) registering subscribe event
05:07:43.974 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 644ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.974 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) subscribe event raised
05:07:43.974 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 644ms] SocketTube(1) subscribed for writing
05:07:43.975 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 644ms] SocketTube(1) write: resetting demand to 0
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.975 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 644ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) read demand reset to 0
05:07:43.975 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 644ms] SocketTube(1) write: registering startSubscription event
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) calling onSubscribe
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) got some demand for reading
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) resuming read event
05:07:43.975 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 644ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.975 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) onSubscribe called
05:07:43.975 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 644ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.975 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 644ms] SocketTube(1) pending subscriber subscribed
05:07:43.975 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 644ms] HttpClientImpl(1) next timeout: 0
05:07:43.975 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 644ms] Http1Response(id=30, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.975 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value in 50ms
05:07:43.975 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 644ms] HttpClientImpl(1) next expired: 1199025
05:07:43.975 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 644ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.975 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 645ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.975 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 645ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.975 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=9009f9dc30683990, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=b4b5c4859d78b017, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663925000000, endEpochNanos=1735189663975207212, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.975 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 645ms] SocketTube(1) write: starting subscription
05:07:43.975 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 645ms] SocketTube(1) write: offloading requestMore
05:07:43.975 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=e467286c6ecb703a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=b4b5c4859d78b017, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663925000000, endEpochNanos=1735189663975539492, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.975 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 645ms] HttpClientImpl(1) next timeout: 0
05:07:43.976 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 645ms] HttpClientImpl(1) next expired: 1199024
05:07:43.976 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 645ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.976 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 645ms] SocketTube(1) write: requesting more...
05:07:43.976 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=b4b5c4859d78b017, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=ab302336e76d1e2b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663925000000, endEpochNanos=1735189663976032501, attributes=AttributesMap{data={http.method=POST, random.key=7ae30e65-9edf-4051-9dbf-9065d63406e4, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="20", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value"}, epochNanos=1735189663976023113, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.976 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 645ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.976 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "2e3ceb6853f3770be6b2360a72ec9051","eventTime": 1735189663976023113,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "20","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57\u002fvalue"}}

05:07:43.976 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=1fe7f1e7819031e9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=ab302336e76d1e2b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663924000000, endEpochNanos=1735189663976003161, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.976 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=2e3ceb6853f3770be6b2360a72ec9051, spanId=ab302336e76d1e2b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663924000000, endEpochNanos=1735189663976307648, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.57/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.978 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.978 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:43.978 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:43.978 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 48, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:43.979 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336,spanId=edbd5d43912bc4d9} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.980 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:43.980 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 649ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:43.980 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 650ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:43.980 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 650ms] HttpClientImpl(1) next timeout: 300000
05:07:43.980 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 650ms] Http2ClientImpl not found in connection pool
05:07:43.980 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 650ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.980 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 650ms] HttpClientImpl(1) next expired: 1199020
05:07:43.981 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 650ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.980 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 650ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.981 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 650ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.981 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 650ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.981 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 650ms] Exchange checkFor407: all clear
05:07:43.981 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 650ms] Http1Exchange Sending headers only
05:07:43.981 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@125f8a9f queue.isEmpty: true
05:07:43.981 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@125f8a9f, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.981 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.981 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.981 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.981 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 650ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.981 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 650ms] Http1Exchange response created in advance
05:07:43.981 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 650ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.981 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 650ms] SocketTube(1) connecting flows
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 650ms] SocketTube(1) read publisher got subscriber
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 650ms] SocketTube(1) registering subscribe event
05:07:43.981 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 651ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) subscribe event raised
05:07:43.981 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 651ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.981 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 651ms] SocketTube(1) subscribed for writing
05:07:43.981 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 651ms] SocketTube(1) write: resetting demand to 0
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@3d2faf3c
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) read demand reset to 0
05:07:43.981 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 651ms] SocketTube(1) write: registering startSubscription event
05:07:43.981 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 651ms] Http1Exchange requestAction.headers
05:07:43.981 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) calling onSubscribe
05:07:43.982 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 651ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.982 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) onSubscribe called
05:07:43.982 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 651ms] SocketTube(1) pending subscriber subscribed
05:07:43.982 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 651ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.982 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 651ms] Http1Exchange setting outgoing with headers
05:07:43.982 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 651ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 651ms] HttpClientImpl(1) next timeout: 299998
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 651ms] HttpClientImpl(1) next expired: 0
05:07:43.982 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 651ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.982 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 651ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.982 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 651ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.982 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 651ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 651ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.982 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 652ms] SocketTube(1) write: starting subscription
05:07:43.982 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 652ms] SocketTube(1) got some demand for reading
05:07:43.982 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 652ms] SocketTube(1) resuming read event
05:07:43.982 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 652ms] SocketTube(1) write: offloading requestMore
05:07:43.982 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 652ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) next timeout: 299998
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) next expired: 0
05:07:43.982 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.982 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 652ms] SocketTube(1) write: requesting more...
05:07:43.982 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 652ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.983 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) next timeout: 299997
05:07:43.983 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) next expired: 0
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 652ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 652ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.983 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 652ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 652ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.983 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 652ms] Http1Exchange initiating completion of headersSentCF
05:07:43.983 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 652ms] Exchange checkFor407: all clear
05:07:43.983 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 652ms] Exchange sendRequestBody
05:07:43.983 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 652ms] Http1Exchange sendBodyAsync
05:07:43.983 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 652ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.983 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 652ms] Http1Exchange requesting more request body from the subscriber
05:07:43.983 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 652ms] jdk.internal.net.http.Http1Request@59705ece Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@68a56888
05:07:43.983 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 652ms] jdk.internal.net.http.Http1Request@59705ece onNext
05:07:43.983 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 652ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=48 cap=16384]], throwable=null]
05:07:43.983 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 652ms] jdk.internal.net.http.Http1Request@59705ece onComplete
05:07:43.983 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 652ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 653ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:43.983 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 653ms] SocketTube(1) trying to write: 460
05:07:43.983 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 653ms] SocketTube(1) wrote: 460
05:07:43.983 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 653ms] SocketTube(1) write: requesting more...
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 653ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.983 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 653ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.983 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 653ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.983 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 653ms] Http1Exchange requesting more request body from the subscriber
05:07:43.983 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 653ms] jdk.internal.net.http.Http1Request@59705ece Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@68a56888
05:07:43.983 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 653ms] Http1Publisher(SocketTube(1)) onNext with 48 bytes
05:07:43.984 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 653ms] SocketTube(1) trying to write: 48
05:07:43.984 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 653ms] SocketTube(1) wrote: 48
05:07:43.984 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 653ms] SocketTube(1) write: requesting more...
05:07:43.984 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 653ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.984 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 653ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.984 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 653ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.984 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 653ms] Http1Exchange initiating completion of bodySentCF
05:07:43.984 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 653ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.984 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 653ms] Http1Exchange reading headers
05:07:43.984 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 653ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.984 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 653ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.984 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 653ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.984 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 653ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@47fcab92
05:07:43.984 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 653ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.989 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 659ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:43.989 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 659ms] SocketTube(1) read bytes: 235
05:07:43.989 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:43.990 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 659ms] SocketTube(1) resuming read event
05:07:43.990 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 659ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.990 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 659ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.990 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@125f8a9f
05:07:43.990 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.990 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 659ms] HttpClientImpl(1) next timeout: 299990
05:07:43.990 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 659ms] HttpClientImpl(1) next expired: 0
05:07:43.990 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 659ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.990 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@125f8a9f
05:07:43.990 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 659ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:43.990 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 659ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:43.990 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@125f8a9f
05:07:43.990 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 659ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:43.990 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 659ms] Http1Exchange getResponseAsync completed successfully
05:07:43.990 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 659ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:43.990 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 659ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.990 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 659ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@2919ca80/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@6a3b0603 queue.isEmpty: false
05:07:43.990 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:43.990 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 660ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:43.990 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@2919ca80/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@6a3b0603, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:43.990 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@2919ca80/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@6a3b0603
05:07:43.990 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:43.990 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@2919ca80/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@6a3b0603
05:07:43.990 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 660ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:43.990 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 660ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:43.990 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 660ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:43.990 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:43.990 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 660ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:43.991 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 660ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:43.991 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 660ms] SocketTube(1) connecting flows
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 660ms] SocketTube(1) read publisher got subscriber
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 660ms] SocketTube(1) registering subscribe event
05:07:43.991 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 660ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:43.991 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 660ms] SocketTube(1) subscribed for writing
05:07:43.991 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 660ms] SocketTube(1) write: resetting demand to 0
05:07:43.991 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 660ms] SocketTube(1) write: registering startSubscription event
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 660ms] SocketTube(1) subscribe event raised
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 660ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:43.991 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 660ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:43.991 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 660ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 660ms] SocketTube(1) read demand reset to 0
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) calling onSubscribe
05:07:43.991 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 660ms] Http1Response(id=31, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) got some demand for reading
05:07:43.991 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 661ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:43.991 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 11ms
05:07:43.991 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 661ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:43.991 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) resuming read event
05:07:43.991 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=d5f7544e0ebf0ed5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=edbd5d43912bc4d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663980000000, endEpochNanos=1735189663991675459, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.991 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 661ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.992 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:43.992 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) onSubscribe called
05:07:43.992 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) pending subscriber subscribed
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) next timeout: 0
05:07:43.992 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=86e18c318ae311e6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=edbd5d43912bc4d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663980000000, endEpochNanos=1735189663991934893, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) next expired: 1199008
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.992 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) write: starting subscription
05:07:43.992 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 661ms] SocketTube(1) write: offloading requestMore
05:07:43.992 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=2a6523fd5025dec5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=edbd5d43912bc4d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663979000000, endEpochNanos=1735189663991795447, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) next timeout: 0
05:07:43.992 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0a525e0efc2b58d7e6a4c9d6f4c8f336, spanId=edbd5d43912bc4d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663979000000, endEpochNanos=1735189663992257138, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:43.992 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 661ms] SocketTube(1) write: requesting more...
05:07:43.992 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 661ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) next expired: 1199008
05:07:43.992 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 661ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.993 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 21
05:07:43.993 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 21
05:07:43.994 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 21, cap: 21/21, unwrapped: PooledUnsafeDirectByteBuf(ridx: 290, widx: 290, cap: 304)), decoderResult: success)
05:07:43.994 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 21, widx: 21, cap: 21/21, unwrapped: PooledUnsafeDirectByteBuf(ridx: 290, widx: 290, cap: 304)), decoderResult: success)
05:07:43.994 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value into OpenTelemetrySpan{traceId=76de7a0de48e7400e58a64e1ecc3d8f3,spanId=f7ee086b7ca29685} at org.openqa.selenium.grid.router.HandleSession:178
05:07:43.995 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=eca40fada6e6410e, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=f7ee086b7ca29685, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663994000000, endEpochNanos=0}}, span id=eca40fada6e6410e, trace id=76de7a0de48e7400e58a64e1ecc3d8f3} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=7e0abe3485d0511d, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=f7ee086b7ca29685, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=51174811-322e-4d7d-88ef-c4a0056dc8ed}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189663995000000, endEpochNanos=0}}, span id=7e0abe3485d0511d, trace id=76de7a0de48e7400e58a64e1ecc3d8f3}
05:07:43.995 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value into OpenTelemetrySpan{traceId=76de7a0de48e7400e58a64e1ecc3d8f3,spanId=7e0abe3485d0511d} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:43.995 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value
05:07:43.995 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 665ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value POST
05:07:43.995 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 665ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value POST,
	 proxy=null
05:07:43.995 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 665ms] HttpClientImpl(1) next timeout: 300000
05:07:43.996 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 665ms] HttpClientImpl(1) next expired: 1199004
05:07:43.996 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 665ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.996 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 665ms] Http2ClientImpl not found in connection pool
05:07:43.996 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 665ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:43.996 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 665ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:43.996 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 665ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:43.996 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 665ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:43.996 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 665ms] Exchange checkFor407: all clear
05:07:43.996 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 665ms] Http1Exchange Sending headers only
05:07:43.996 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 665ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@13e42e21 queue.isEmpty: true
05:07:43.996 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 665ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@13e42e21, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:43.996 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 665ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.996 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 666ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.996 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 666ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.996 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 666ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.996 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 666ms] Http1Exchange response created in advance
05:07:43.996 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 666ms] Http1Exchange SocketTube(1) connecting flows
05:07:43.996 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 666ms] SocketTube(1) connecting flows
05:07:43.996 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 666ms] SocketTube(1) read publisher got subscriber
05:07:43.996 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 666ms] SocketTube(1) registering subscribe event
05:07:43.996 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 666ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.996 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 666ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:43.996 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 666ms] SocketTube(1) subscribed for writing
05:07:43.996 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 666ms] SocketTube(1) write: resetting demand to 0
05:07:43.996 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 666ms] SocketTube(1) write: registering startSubscription event
05:07:43.996 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) subscribe event raised
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@3ba5b820
05:07:43.996 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 666ms] Http1Exchange requestAction.headers
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) read demand reset to 0
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) calling onSubscribe
05:07:43.997 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 666ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:43.997 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 666ms] Http1Exchange setting outgoing with headers
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) onSubscribe called
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 666ms] SocketTube(1) pending subscriber subscribed
05:07:43.997 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 666ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:43.997 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 666ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.997 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 666ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.997 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 666ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:43.997 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 666ms] HttpClientImpl(1) next timeout: 299998
05:07:43.997 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 667ms] HttpClientImpl(1) next expired: 0
05:07:43.997 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 667ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.997 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 667ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:43.997 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 667ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:43.997 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 667ms] SocketTube(1) write: starting subscription
05:07:43.998 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 667ms] SocketTube(1) write: offloading requestMore
05:07:43.997 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 667ms] SocketTube(1) got some demand for reading
05:07:43.998 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 667ms] SocketTube(1) resuming read event
05:07:43.998 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 667ms] SocketTube(1) write: requesting more...
05:07:43.998 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 667ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 667ms] HttpClientImpl(1) next timeout: 299997
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 667ms] HttpClientImpl(1) next expired: 0
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 667ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.998 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 667ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:43.998 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 667ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:43.998 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 667ms] Http1Exchange initiating completion of headersSentCF
05:07:43.998 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 667ms] Exchange checkFor407: all clear
05:07:43.998 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 667ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.998 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 667ms] Exchange sendRequestBody
05:07:43.998 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 668ms] Http1Exchange sendBodyAsync
05:07:43.998 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 667ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 668ms] HttpClientImpl(1) next timeout: 299997
05:07:43.998 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 668ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 668ms] HttpClientImpl(1) next expired: 0
05:07:43.998 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 668ms] HttpClientImpl(1) Next deadline is 3000
05:07:43.998 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 668ms] Http1Exchange requesting more request body from the subscriber
05:07:43.998 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 668ms] jdk.internal.net.http.Http1Request@4677a083 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@744eab17
05:07:43.998 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 668ms] jdk.internal.net.http.Http1Request@4677a083 onNext
05:07:43.998 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 668ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=21 cap=16384]], throwable=null]
05:07:43.999 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 668ms] jdk.internal.net.http.Http1Request@4677a083 onComplete
05:07:43.999 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 668ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:43.999 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 668ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 668ms] SocketTube(1) trying to write: 516
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 668ms] SocketTube(1) wrote: 516
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 668ms] SocketTube(1) write: requesting more...
05:07:43.999 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 668ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.999 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 668ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.999 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 668ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.999 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 668ms] Http1Exchange requesting more request body from the subscriber
05:07:43.999 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 668ms] jdk.internal.net.http.Http1Request@4677a083 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@744eab17
05:07:43.999 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 668ms] Http1Publisher(SocketTube(1)) onNext with 21 bytes
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 668ms] SocketTube(1) trying to write: 21
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 668ms] SocketTube(1) wrote: 21
05:07:43.999 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 669ms] SocketTube(1) write: requesting more...
05:07:43.999 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 669ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:43.999 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 669ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.999 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 669ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:43.999 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 669ms] Http1Exchange initiating completion of bodySentCF
05:07:43.999 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 669ms] Http1Exchange sendBodyAsync completed successfully
05:07:43.999 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 669ms] Http1Exchange reading headers
05:07:43.999 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 669ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:43.999 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 669ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) First time around
05:07:43.999 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 669ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:43.999 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 669ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@4288d07a
05:07:43.999 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 669ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.049 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 718ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.049 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 718ms] SocketTube(1) read bytes: 122
05:07:44.049 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 718ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.049 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 718ms] SocketTube(1) resuming read event
05:07:44.049 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 718ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@13e42e21
05:07:44.049 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 718ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.049 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 719ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.049 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 719ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.049 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 719ms] HttpClientImpl(1) next timeout: 299946
05:07:44.049 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 719ms] HttpClientImpl(1) next expired: 0
05:07:44.049 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 719ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.049 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 719ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@13e42e21
05:07:44.049 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 719ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.050 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 719ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.050 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 719ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@13e42e21
05:07:44.050 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 719ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.050 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 719ms] Http1Exchange getResponseAsync completed successfully
05:07:44.050 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 719ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.050 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 719ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.050 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 719ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@702f7b2c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71b8602d queue.isEmpty: false
05:07:44.050 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.050 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 720ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.050 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@702f7b2c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71b8602d, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.050 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@702f7b2c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71b8602d
05:07:44.050 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.050 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@702f7b2c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@71b8602d
05:07:44.050 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 720ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.050 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 720ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.051 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 720ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.051 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.051 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 720ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.051 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 720ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.051 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 720ms] SocketTube(1) connecting flows
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 720ms] SocketTube(1) read publisher got subscriber
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 720ms] SocketTube(1) registering subscribe event
05:07:44.051 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 720ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.051 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 720ms] SocketTube(1) subscribed for writing
05:07:44.051 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 720ms] SocketTube(1) write: resetting demand to 0
05:07:44.051 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 720ms] SocketTube(1) write: registering startSubscription event
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) subscribe event raised
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.051 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 720ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) read demand reset to 0
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) calling onSubscribe
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) got some demand for reading
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 720ms] SocketTube(1) resuming read event
05:07:44.051 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 721ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.051 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 721ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.051 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 721ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 721ms] SocketTube(1) onSubscribe called
05:07:44.051 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 721ms] SocketTube(1) pending subscriber subscribed
05:07:44.051 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 721ms] Http1Response(id=32, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.051 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) next timeout: 0
05:07:44.051 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value in 56ms
05:07:44.051 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) next expired: 1199949
05:07:44.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.052 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=b21b1eacc181c39a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=7e0abe3485d0511d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189663995000000, endEpochNanos=1735189664051521545, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.051 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 721ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.052 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 721ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.052 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 721ms] SocketTube(1) write: starting subscription
05:07:44.052 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=a6568db4067000c9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=7e0abe3485d0511d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663995000000, endEpochNanos=1735189664051754379, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.052 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 721ms] SocketTube(1) write: offloading requestMore
05:07:44.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) next timeout: 0
05:07:44.052 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 721ms] SocketTube(1) write: requesting more...
05:07:44.052 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=7e0abe3485d0511d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=f7ee086b7ca29685, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189663995000000, endEpochNanos=1735189664052383743, attributes=AttributesMap{data={http.method=POST, random.key=51174811-322e-4d7d-88ef-c4a0056dc8ed, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="21", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value"}, epochNanos=1735189664052374786, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) next expired: 1199948
05:07:44.052 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 721ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.052 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 721ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.052 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "76de7a0de48e7400e58a64e1ecc3d8f3","eventTime": 1735189664052374786,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "21","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59\u002fvalue"}}

05:07:44.053 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=eca40fada6e6410e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=f7ee086b7ca29685, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189663994000000, endEpochNanos=1735189664052184055, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.053 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=76de7a0de48e7400e58a64e1ecc3d8f3, spanId=f7ee086b7ca29685, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189663994000000, endEpochNanos=1735189664052478745, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.59/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.054 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 49
05:07:44.054 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 49
05:07:44.054 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 49, cap: 49/49, unwrapped: PooledUnsafeDirectByteBuf(ridx: 237, widx: 237, cap: 304)), decoderResult: success)
05:07:44.054 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 49, widx: 49, cap: 49/49, unwrapped: PooledUnsafeDirectByteBuf(ridx: 237, widx: 237, cap: 304)), decoderResult: success)
05:07:44.055 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=099b700c313e7e71c153fdcaa210aa8e,spanId=f8a37bbbdbdc246a} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.056 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.057 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 726ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.057 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 726ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.057 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 726ms] HttpClientImpl(1) next timeout: 300000
05:07:44.057 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 726ms] HttpClientImpl(1) next expired: 1199943
05:07:44.057 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 726ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.057 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 726ms] Http2ClientImpl not found in connection pool
05:07:44.057 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 726ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.057 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 726ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.057 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 726ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.057 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 727ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.057 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 727ms] Exchange checkFor407: all clear
05:07:44.057 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 727ms] Http1Exchange Sending headers only
05:07:44.058 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@e3faf0d queue.isEmpty: true
05:07:44.058 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@e3faf0d, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.058 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.058 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.058 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.058 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 727ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.058 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 727ms] Http1Exchange response created in advance
05:07:44.058 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 727ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.058 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 727ms] SocketTube(1) connecting flows
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 727ms] SocketTube(1) read publisher got subscriber
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 727ms] SocketTube(1) registering subscribe event
05:07:44.058 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 727ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.058 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 727ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.058 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 727ms] SocketTube(1) subscribed for writing
05:07:44.058 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 727ms] SocketTube(1) write: resetting demand to 0
05:07:44.058 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 727ms] SocketTube(1) write: registering startSubscription event
05:07:44.058 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 727ms] Http1Exchange requestAction.headers
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 727ms] SocketTube(1) subscribe event raised
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 727ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@40109497
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 727ms] SocketTube(1) read demand reset to 0
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 727ms] SocketTube(1) calling onSubscribe
05:07:44.058 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 728ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 728ms] SocketTube(1) onSubscribe called
05:07:44.058 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 728ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.058 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 728ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.058 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 728ms] Http1Exchange setting outgoing with headers
05:07:44.058 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 728ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.058 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 728ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 728ms] SocketTube(1) got some demand for reading
05:07:44.059 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 728ms] SocketTube(1) resuming read event
05:07:44.058 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 728ms] SocketTube(1) pending subscriber subscribed
05:07:44.059 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 728ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.058 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 728ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) next timeout: 299998
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) next expired: 0
05:07:44.059 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 728ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.059 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 728ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.059 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 728ms] SocketTube(1) write: starting subscription
05:07:44.059 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 728ms] SocketTube(1) write: offloading requestMore
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) next timeout: 299998
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) next expired: 0
05:07:44.059 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 728ms] SocketTube(1) write: requesting more...
05:07:44.059 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 728ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.059 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 729ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.059 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 729ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.059 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 729ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.059 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 729ms] Http1Exchange initiating completion of headersSentCF
05:07:44.059 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 729ms] Exchange checkFor407: all clear
05:07:44.059 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 729ms] Exchange sendRequestBody
05:07:44.059 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 729ms] Http1Exchange sendBodyAsync
05:07:44.059 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 729ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.059 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 729ms] Http1Exchange requesting more request body from the subscriber
05:07:44.059 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 729ms] jdk.internal.net.http.Http1Request@3749e270 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@54253fd
05:07:44.059 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 729ms] jdk.internal.net.http.Http1Request@3749e270 onNext
05:07:44.061 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 731ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=49 cap=16384]], throwable=null]
05:07:44.062 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 731ms] jdk.internal.net.http.Http1Request@3749e270 onComplete
05:07:44.062 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 731ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.062 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 731ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.062 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 732ms] SocketTube(1) trying to write: 460
05:07:44.063 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 732ms] SocketTube(1) wrote: 460
05:07:44.063 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 732ms] SocketTube(1) write: requesting more...
05:07:44.063 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 732ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.063 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 732ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.063 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 732ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.063 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 732ms] Http1Exchange requesting more request body from the subscriber
05:07:44.063 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 732ms] jdk.internal.net.http.Http1Request@3749e270 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@54253fd
05:07:44.063 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 732ms] Http1Publisher(SocketTube(1)) onNext with 49 bytes
05:07:44.063 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 732ms] SocketTube(1) trying to write: 49
05:07:44.063 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 732ms] SocketTube(1) wrote: 49
05:07:44.063 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 732ms] SocketTube(1) write: requesting more...
05:07:44.063 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 732ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.063 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 732ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.063 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 732ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.063 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 732ms] Http1Exchange initiating completion of bodySentCF
05:07:44.063 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 732ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.063 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 732ms] Http1Exchange reading headers
05:07:44.063 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 733ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.063 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 733ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.063 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 733ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.063 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 733ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@385fc015
05:07:44.063 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 733ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.070 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 739ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.070 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 739ms] SocketTube(1) read bytes: 235
05:07:44.070 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 739ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:44.070 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 740ms] SocketTube(1) resuming read event
05:07:44.070 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 740ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.070 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 740ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.070 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 740ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@e3faf0d
05:07:44.070 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 740ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.070 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 740ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@e3faf0d
05:07:44.070 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 740ms] HttpClientImpl(1) next timeout: 299987
05:07:44.070 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 740ms] HttpClientImpl(1) next expired: 0
05:07:44.071 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 740ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.070 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 740ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:44.071 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 740ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:44.071 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 740ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@e3faf0d
05:07:44.071 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 740ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.071 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 740ms] Http1Exchange getResponseAsync completed successfully
05:07:44.071 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 740ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.071 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 741ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.071 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4b6b47d4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5ca128ff queue.isEmpty: false
05:07:44.071 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:44.071 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 741ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.071 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4b6b47d4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5ca128ff, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.071 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4b6b47d4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5ca128ff
05:07:44.071 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.071 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4b6b47d4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5ca128ff
05:07:44.072 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 741ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:44.072 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 741ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:44.072 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 741ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.072 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.072 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 741ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.072 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 741ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.072 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 741ms] SocketTube(1) connecting flows
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 741ms] SocketTube(1) read publisher got subscriber
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 741ms] SocketTube(1) registering subscribe event
05:07:44.072 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 741ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.072 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 741ms] SocketTube(1) subscribed for writing
05:07:44.072 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 741ms] SocketTube(1) write: resetting demand to 0
05:07:44.072 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 741ms] SocketTube(1) write: registering startSubscription event
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 741ms] SocketTube(1) subscribe event raised
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 741ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.072 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 741ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 741ms] SocketTube(1) read demand reset to 0
05:07:44.072 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 742ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.072 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 742ms] Http1Response(id=33, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.072 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 742ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) calling onSubscribe
05:07:44.072 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 742ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) got some demand for reading
05:07:44.072 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) resuming read event
05:07:44.072 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 16ms
05:07:44.073 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 742ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.073 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.073 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) onSubscribe called
05:07:44.073 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) pending subscriber subscribed
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 742ms] HttpClientImpl(1) next timeout: 0
05:07:44.073 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=03a9999a873ca126, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=f8a37bbbdbdc246a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664056000000, endEpochNanos=1735189664072464574, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 742ms] HttpClientImpl(1) next expired: 1199927
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 742ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.073 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) write: starting subscription
05:07:44.073 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=f8fcdd2d9ee407dc, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=f8a37bbbdbdc246a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664056000000, endEpochNanos=1735189664072768460, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.073 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 742ms] SocketTube(1) write: offloading requestMore
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 742ms] HttpClientImpl(1) next timeout: 0
05:07:44.073 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 742ms] SocketTube(1) write: requesting more...
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 742ms] HttpClientImpl(1) next expired: 1199927
05:07:44.073 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=2db74410afb1c0df, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=f8a37bbbdbdc246a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664055000000, endEpochNanos=1735189664072827014, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.073 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 743ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.073 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 742ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.073 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=099b700c313e7e71c153fdcaa210aa8e, spanId=f8a37bbbdbdc246a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664055000000, endEpochNanos=1735189664073327227, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.075 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 21
05:07:44.075 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 21
05:07:44.075 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 19, cap: 19/19, unwrapped: PooledUnsafeDirectByteBuf(ridx: 288, widx: 288, cap: 288)), decoderResult: success)
05:07:44.076 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 2, widx: 2, cap: 352)), decoderResult: success)
05:07:44.076 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 2, widx: 2, cap: 2/2, unwrapped: PooledUnsafeDirectByteBuf(ridx: 2, widx: 2, cap: 352)), decoderResult: success)
05:07:44.076 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value into OpenTelemetrySpan{traceId=606b2c3dfc20c66562db447364af2f09,spanId=fd4e88fc0bdfd1d1} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.078 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=606b2c3dfc20c66562db447364af2f09, spanId=79c704f806e9ff19, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=fd4e88fc0bdfd1d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664077000000, endEpochNanos=0}}, span id=79c704f806e9ff19, trace id=606b2c3dfc20c66562db447364af2f09} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=606b2c3dfc20c66562db447364af2f09, spanId=56f0e2293ed9c4eb, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=fd4e88fc0bdfd1d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=9032f1ab-2a84-4764-a3f8-df36ab9447a1}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664077000000, endEpochNanos=0}}, span id=56f0e2293ed9c4eb, trace id=606b2c3dfc20c66562db447364af2f09}
05:07:44.078 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value into OpenTelemetrySpan{traceId=606b2c3dfc20c66562db447364af2f09,spanId=56f0e2293ed9c4eb} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:44.078 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value
05:07:44.078 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 748ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value POST
05:07:44.078 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 748ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value POST,
	 proxy=null
05:07:44.079 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 748ms] HttpClientImpl(1) next timeout: 299999
05:07:44.079 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 748ms] HttpClientImpl(1) next expired: 1199921
05:07:44.079 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 748ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.079 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 748ms] Http2ClientImpl not found in connection pool
05:07:44.079 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 748ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.079 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 748ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.079 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 748ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.079 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 748ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.079 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 748ms] Exchange checkFor407: all clear
05:07:44.079 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 748ms] Http1Exchange Sending headers only
05:07:44.079 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 748ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@629a3884 queue.isEmpty: true
05:07:44.079 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 748ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@629a3884, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.079 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.079 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.079 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.079 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.079 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 749ms] Http1Exchange response created in advance
05:07:44.079 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 749ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.079 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 749ms] SocketTube(1) connecting flows
05:07:44.079 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 749ms] SocketTube(1) read publisher got subscriber
05:07:44.079 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 749ms] SocketTube(1) registering subscribe event
05:07:44.079 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 749ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.079 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 749ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.079 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 749ms] SocketTube(1) subscribed for writing
05:07:44.079 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 749ms] SocketTube(1) write: resetting demand to 0
05:07:44.080 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 749ms] SocketTube(1) write: registering startSubscription event
05:07:44.080 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 749ms] Http1Exchange requestAction.headers
05:07:44.079 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) subscribe event raised
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@5df70021
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) read demand reset to 0
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) calling onSubscribe
05:07:44.080 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.080 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 749ms] Http1Exchange setting outgoing with headers
05:07:44.080 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 749ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) onSubscribe called
05:07:44.080 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.080 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 749ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.080 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 749ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.080 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.080 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 749ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 749ms] SocketTube(1) got some demand for reading
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 750ms] SocketTube(1) resuming read event
05:07:44.080 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 749ms] SocketTube(1) pending subscriber subscribed
05:07:44.080 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 750ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.080 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) next timeout: 299998
05:07:44.080 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) next expired: 0
05:07:44.080 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.080 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 750ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.080 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 750ms] SocketTube(1) write: starting subscription
05:07:44.080 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 750ms] SocketTube(1) write: offloading requestMore
05:07:44.080 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) next timeout: 299998
05:07:44.081 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) next expired: 0
05:07:44.081 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 750ms] SocketTube(1) write: requesting more...
05:07:44.081 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 750ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.081 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 750ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.081 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 750ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.081 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 750ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.081 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 750ms] Http1Exchange initiating completion of headersSentCF
05:07:44.081 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 750ms] Exchange checkFor407: all clear
05:07:44.081 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 750ms] Exchange sendRequestBody
05:07:44.081 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 750ms] Http1Exchange sendBodyAsync
05:07:44.081 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 750ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.081 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 750ms] Http1Exchange requesting more request body from the subscriber
05:07:44.081 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 750ms] jdk.internal.net.http.Http1Request@4fdb54af Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@499ffe19
05:07:44.081 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 751ms] jdk.internal.net.http.Http1Request@4fdb54af onNext
05:07:44.081 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 751ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=21 cap=16384]], throwable=null]
05:07:44.081 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 751ms] jdk.internal.net.http.Http1Request@4fdb54af onComplete
05:07:44.081 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 751ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.081 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 751ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:44.081 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 751ms] SocketTube(1) trying to write: 516
05:07:44.081 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 751ms] SocketTube(1) wrote: 516
05:07:44.081 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 751ms] SocketTube(1) write: requesting more...
05:07:44.082 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 751ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.082 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 751ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.082 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 751ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.082 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 751ms] Http1Exchange requesting more request body from the subscriber
05:07:44.082 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 751ms] jdk.internal.net.http.Http1Request@4fdb54af Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@499ffe19
05:07:44.082 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 751ms] Http1Publisher(SocketTube(1)) onNext with 21 bytes
05:07:44.082 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 751ms] SocketTube(1) trying to write: 21
05:07:44.082 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 751ms] SocketTube(1) wrote: 21
05:07:44.082 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 751ms] SocketTube(1) write: requesting more...
05:07:44.082 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 751ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.082 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 751ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.082 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 751ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.082 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 751ms] Http1Exchange initiating completion of bodySentCF
05:07:44.082 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 751ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.082 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 751ms] Http1Exchange reading headers
05:07:44.082 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 751ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.082 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 751ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.082 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 751ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.082 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 751ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@4d3edc1d
05:07:44.082 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 751ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.127 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 796ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.127 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 796ms] SocketTube(1) read bytes: 122
05:07:44.127 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 796ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.127 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 796ms] SocketTube(1) resuming read event
05:07:44.127 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 796ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.127 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 796ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.127 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 796ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@629a3884
05:07:44.127 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 796ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.127 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 796ms] HttpClientImpl(1) next timeout: 299951
05:07:44.127 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 796ms] HttpClientImpl(1) next expired: 0
05:07:44.127 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 796ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@629a3884
05:07:44.127 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 796ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.127 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.127 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.127 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@629a3884
05:07:44.127 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.127 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 797ms] Http1Exchange getResponseAsync completed successfully
05:07:44.127 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.128 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.128 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4029dbee/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@76f09ac4 queue.isEmpty: false
05:07:44.128 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.128 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 797ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.128 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4029dbee/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@76f09ac4, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.128 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4029dbee/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@76f09ac4
05:07:44.128 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.128 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4029dbee/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@76f09ac4
05:07:44.128 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.128 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 797ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.128 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 797ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.128 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 797ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.128 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 797ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.128 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 797ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.128 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 797ms] SocketTube(1) connecting flows
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 797ms] SocketTube(1) read publisher got subscriber
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 797ms] SocketTube(1) registering subscribe event
05:07:44.128 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 797ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.128 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 797ms] SocketTube(1) subscribed for writing
05:07:44.128 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 798ms] SocketTube(1) write: resetting demand to 0
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 797ms] SocketTube(1) subscribe event raised
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.128 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 798ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) read demand reset to 0
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) calling onSubscribe
05:07:44.128 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 798ms] SocketTube(1) write: registering startSubscription event
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) got some demand for reading
05:07:44.128 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) resuming read event
05:07:44.129 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 798ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.129 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.129 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) onSubscribe called
05:07:44.129 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) pending subscriber subscribed
05:07:44.129 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 798ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 798ms] HttpClientImpl(1) next timeout: 0
05:07:44.129 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 798ms] Http1Response(id=34, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 798ms] HttpClientImpl(1) next expired: 1199871
05:07:44.129 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value in 51ms
05:07:44.129 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 798ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.129 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=ccf2d7d92dae8b3a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=56f0e2293ed9c4eb, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664078000000, endEpochNanos=1735189664128938595, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 798ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.129 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 798ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.129 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=0277c06639f5a461, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=56f0e2293ed9c4eb, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664078000000, endEpochNanos=1735189664129139420, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.129 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 798ms] SocketTube(1) write: starting subscription
05:07:44.129 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 799ms] SocketTube(1) write: offloading requestMore
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 799ms] HttpClientImpl(1) next timeout: 0
05:07:44.129 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 799ms] SocketTube(1) write: requesting more...
05:07:44.129 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 799ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 799ms] HttpClientImpl(1) next expired: 1199871
05:07:44.129 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 799ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.129 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=56f0e2293ed9c4eb, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=fd4e88fc0bdfd1d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189664077000000, endEpochNanos=1735189664128974917, attributes=AttributesMap{data={http.method=POST, random.key=9032f1ab-2a84-4764-a3f8-df36ab9447a1, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="21", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value"}, epochNanos=1735189664128943379, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.130 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "606b2c3dfc20c66562db447364af2f09","eventTime": 1735189664128943379,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "21","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60\u002fvalue"}}

05:07:44.130 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=79c704f806e9ff19, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=fd4e88fc0bdfd1d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664077000000, endEpochNanos=1735189664130481968, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.130 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=606b2c3dfc20c66562db447364af2f09, spanId=fd4e88fc0bdfd1d1, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664076000000, endEpochNanos=1735189664129917049, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.60/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.133 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 42
05:07:44.133 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 42
05:07:44.133 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 42, cap: 42/42, unwrapped: PooledUnsafeDirectByteBuf(ridx: 230, widx: 230, cap: 352)), decoderResult: success)
05:07:44.133 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 42, widx: 42, cap: 42/42, unwrapped: PooledUnsafeDirectByteBuf(ridx: 230, widx: 230, cap: 352)), decoderResult: success)
05:07:44.134 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=eb3d56f11be3df0d38aba855b5f1b54c,spanId=53bad320e846a538} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.135 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.135 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 805ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.136 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 805ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 805ms] HttpClientImpl(1) next timeout: 300000
05:07:44.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 805ms] HttpClientImpl(1) next expired: 1199864
05:07:44.136 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 805ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.136 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 805ms] Http2ClientImpl not found in connection pool
05:07:44.136 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 805ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.136 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 805ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.136 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 805ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.136 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 806ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.136 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 806ms] Exchange checkFor407: all clear
05:07:44.137 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 806ms] Http1Exchange Sending headers only
05:07:44.137 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@58fe30d3 queue.isEmpty: true
05:07:44.137 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@58fe30d3, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.137 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.137 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.137 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.137 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 806ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.137 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 806ms] Http1Exchange response created in advance
05:07:44.137 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 806ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.137 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 806ms] SocketTube(1) connecting flows
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 806ms] SocketTube(1) read publisher got subscriber
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 806ms] SocketTube(1) registering subscribe event
05:07:44.137 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 806ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.137 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 806ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.137 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 806ms] SocketTube(1) subscribed for writing
05:07:44.137 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 806ms] SocketTube(1) write: resetting demand to 0
05:07:44.137 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 806ms] SocketTube(1) write: registering startSubscription event
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 806ms] SocketTube(1) subscribe event raised
05:07:44.137 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 806ms] Http1Exchange requestAction.headers
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 806ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@1de102ec
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) read demand reset to 0
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) calling onSubscribe
05:07:44.137 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 807ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) onSubscribe called
05:07:44.137 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) pending subscriber subscribed
05:07:44.137 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 807ms] HttpClientImpl(1) next timeout: 299999
05:07:44.137 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 807ms] HttpClientImpl(1) next expired: 0
05:07:44.137 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 807ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.137 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 807ms] Http1Exchange setting outgoing with headers
05:07:44.137 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 807ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.138 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 807ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.138 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 807ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.138 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 807ms] SocketTube(1) got some demand for reading
05:07:44.138 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 807ms] SocketTube(1) resuming read event
05:07:44.138 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 807ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.138 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 807ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.138 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 807ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.137 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) write: starting subscription
05:07:44.138 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 807ms] SocketTube(1) write: offloading requestMore
05:07:44.138 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 807ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 807ms] HttpClientImpl(1) next timeout: 299998
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 808ms] HttpClientImpl(1) next expired: 0
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 808ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.138 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 808ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 808ms] HttpClientImpl(1) next timeout: 299998
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 808ms] HttpClientImpl(1) next expired: 0
05:07:44.138 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 808ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.138 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 808ms] SocketTube(1) write: requesting more...
05:07:44.138 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 808ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.138 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 808ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.138 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 808ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.138 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 808ms] Http1Exchange initiating completion of headersSentCF
05:07:44.139 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 808ms] Exchange checkFor407: all clear
05:07:44.139 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 808ms] Exchange sendRequestBody
05:07:44.139 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 808ms] Http1Exchange sendBodyAsync
05:07:44.139 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 808ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.139 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 808ms] Http1Exchange requesting more request body from the subscriber
05:07:44.139 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 808ms] jdk.internal.net.http.Http1Request@2452e027 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@56867689
05:07:44.139 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 808ms] jdk.internal.net.http.Http1Request@2452e027 onNext
05:07:44.139 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 808ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=42 cap=16384]], throwable=null]
05:07:44.139 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 808ms] jdk.internal.net.http.Http1Request@2452e027 onComplete
05:07:44.139 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 808ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.139 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 808ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 808ms] SocketTube(1) trying to write: 460
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 808ms] SocketTube(1) wrote: 460
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 809ms] SocketTube(1) write: requesting more...
05:07:44.139 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 809ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.139 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 809ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.139 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 809ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.139 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 809ms] Http1Exchange requesting more request body from the subscriber
05:07:44.139 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 809ms] jdk.internal.net.http.Http1Request@2452e027 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@56867689
05:07:44.139 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 809ms] Http1Publisher(SocketTube(1)) onNext with 42 bytes
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 809ms] SocketTube(1) trying to write: 42
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 809ms] SocketTube(1) wrote: 42
05:07:44.139 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 809ms] SocketTube(1) write: requesting more...
05:07:44.139 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 809ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.140 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 809ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.140 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 809ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.140 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 809ms] Http1Exchange initiating completion of bodySentCF
05:07:44.140 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 809ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.140 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 809ms] Http1Exchange reading headers
05:07:44.140 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 809ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.140 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 809ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.140 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 809ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.140 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 809ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1940d53a
05:07:44.140 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 809ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.146 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 815ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.146 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 815ms] SocketTube(1) read bytes: 235
05:07:44.146 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 815ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:44.146 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 815ms] SocketTube(1) resuming read event
05:07:44.146 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 815ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@58fe30d3
05:07:44.146 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 815ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.146 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 815ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@58fe30d3
05:07:44.146 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 815ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.146 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 815ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.146 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 815ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:44.146 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 815ms] HttpClientImpl(1) next timeout: 299990
05:07:44.146 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 815ms] HttpClientImpl(1) next expired: 0
05:07:44.146 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 815ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:44.146 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 815ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@58fe30d3
05:07:44.146 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 815ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.146 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 815ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.146 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 816ms] Http1Exchange getResponseAsync completed successfully
05:07:44.146 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.146 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.146 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@30111669/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@55460cdc queue.isEmpty: false
05:07:44.146 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:44.146 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 816ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.146 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@30111669/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@55460cdc, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@30111669/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@55460cdc
05:07:44.147 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@30111669/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@55460cdc
05:07:44.147 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:44.147 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 816ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:44.147 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 816ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.147 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.147 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.147 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 816ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.147 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 816ms] SocketTube(1) connecting flows
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 816ms] SocketTube(1) read publisher got subscriber
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 816ms] SocketTube(1) registering subscribe event
05:07:44.147 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 816ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.147 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 816ms] SocketTube(1) subscribed for writing
05:07:44.147 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 816ms] SocketTube(1) write: resetting demand to 0
05:07:44.147 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 816ms] SocketTube(1) write: registering startSubscription event
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 816ms] SocketTube(1) subscribe event raised
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 816ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.147 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 816ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 816ms] SocketTube(1) read demand reset to 0
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 816ms] SocketTube(1) calling onSubscribe
05:07:44.147 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.147 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 816ms] Http1Response(id=35, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 816ms] SocketTube(1) got some demand for reading
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) resuming read event
05:07:44.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 817ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.147 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 817ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.147 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) onSubscribe called
05:07:44.147 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) pending subscriber subscribed
05:07:44.147 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 12ms
05:07:44.147 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 817ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.148 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=f66a5dc64f7d98c5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=53bad320e846a538, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664135000000, endEpochNanos=1735189664147515526, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.147 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) next timeout: 0
05:07:44.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) next expired: 1199852
05:07:44.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.148 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) write: starting subscription
05:07:44.148 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 817ms] SocketTube(1) write: offloading requestMore
05:07:44.148 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=333b5d52dfbd5baf, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=53bad320e846a538, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664135000000, endEpochNanos=1735189664147814753, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.148 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 817ms] SocketTube(1) write: requesting more...
05:07:44.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) next timeout: 0
05:07:44.148 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=36cfbfe48f578738, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=53bad320e846a538, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664134000000, endEpochNanos=1735189664147485414, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.148 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 817ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.148 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=eb3d56f11be3df0d38aba855b5f1b54c, spanId=53bad320e846a538, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664134000000, endEpochNanos=1735189664147997278, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) next expired: 1199852
05:07:44.148 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 817ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.149 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 12
05:07:44.149 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 12
05:07:44.149 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 12, cap: 12/12, unwrapped: PooledUnsafeDirectByteBuf(ridx: 281, widx: 281, cap: 336)), decoderResult: success)
05:07:44.149 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 12, widx: 12, cap: 12/12, unwrapped: PooledUnsafeDirectByteBuf(ridx: 281, widx: 281, cap: 336)), decoderResult: success)
05:07:44.150 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value into OpenTelemetrySpan{traceId=87428f6de365ca571ddab40f33c73940,spanId=a2b224367869ef07} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.151 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=87428f6de365ca571ddab40f33c73940, spanId=ef83cc4224bf8d92, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=a2b224367869ef07, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664150000000, endEpochNanos=0}}, span id=ef83cc4224bf8d92, trace id=87428f6de365ca571ddab40f33c73940} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=87428f6de365ca571ddab40f33c73940, spanId=999cd5ff56835e38, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=a2b224367869ef07, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=39be4462-cca1-4e75-b66f-9f732ac88717}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664151000000, endEpochNanos=0}}, span id=999cd5ff56835e38, trace id=87428f6de365ca571ddab40f33c73940}
05:07:44.151 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value into OpenTelemetrySpan{traceId=87428f6de365ca571ddab40f33c73940,spanId=999cd5ff56835e38} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:44.151 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value
05:07:44.152 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 821ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value POST
05:07:44.152 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 821ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value POST,
	 proxy=null
05:07:44.152 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 821ms] HttpClientImpl(1) next timeout: 300000
05:07:44.152 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 821ms] HttpClientImpl(1) next expired: 1199848
05:07:44.152 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 821ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.152 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 821ms] Http2ClientImpl not found in connection pool
05:07:44.152 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 821ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.152 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 821ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.152 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 821ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.152 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 822ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.152 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 822ms] Exchange checkFor407: all clear
05:07:44.152 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 822ms] Http1Exchange Sending headers only
05:07:44.152 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@79506d70 queue.isEmpty: true
05:07:44.152 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@79506d70, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.152 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.152 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.152 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.153 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.153 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 822ms] Http1Exchange response created in advance
05:07:44.153 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 822ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.153 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 822ms] SocketTube(1) connecting flows
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 822ms] SocketTube(1) read publisher got subscriber
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 822ms] SocketTube(1) registering subscribe event
05:07:44.153 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 822ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.153 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 822ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.153 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 822ms] SocketTube(1) subscribed for writing
05:07:44.153 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 822ms] SocketTube(1) write: resetting demand to 0
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 822ms] SocketTube(1) subscribe event raised
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 822ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@b93cdc8
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 822ms] SocketTube(1) read demand reset to 0
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 822ms] SocketTube(1) calling onSubscribe
05:07:44.153 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.153 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 822ms] SocketTube(1) write: registering startSubscription event
05:07:44.153 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 822ms] Http1Exchange requestAction.headers
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 822ms] SocketTube(1) onSubscribe called
05:07:44.153 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 823ms] SocketTube(1) pending subscriber subscribed
05:07:44.153 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 822ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.153 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 823ms] Http1Exchange setting outgoing with headers
05:07:44.153 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 823ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:44.153 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 823ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.153 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 823ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.153 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) next timeout: 299999
05:07:44.153 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) next expired: 0
05:07:44.154 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.153 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 823ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.154 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 823ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.154 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 823ms] SocketTube(1) write: starting subscription
05:07:44.154 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 823ms] SocketTube(1) write: offloading requestMore
05:07:44.154 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 823ms] SocketTube(1) got some demand for reading
05:07:44.154 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 823ms] SocketTube(1) resuming read event
05:07:44.154 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) next timeout: 299998
05:07:44.154 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) next expired: 0
05:07:44.154 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 823ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.154 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 823ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.154 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 823ms] SocketTube(1) write: requesting more...
05:07:44.154 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 823ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.154 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 823ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.154 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 823ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.154 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 824ms] Http1Exchange initiating completion of headersSentCF
05:07:44.154 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 824ms] Exchange checkFor407: all clear
05:07:44.154 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 824ms] Exchange sendRequestBody
05:07:44.154 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 824ms] Http1Exchange sendBodyAsync
05:07:44.154 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 823ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.154 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 824ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.154 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 824ms] Http1Exchange requesting more request body from the subscriber
05:07:44.154 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 824ms] jdk.internal.net.http.Http1Request@240f5a64 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@41ca9e6d
05:07:44.154 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 824ms] HttpClientImpl(1) next timeout: 299998
05:07:44.155 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 824ms] HttpClientImpl(1) next expired: 0
05:07:44.155 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 824ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.154 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 824ms] jdk.internal.net.http.Http1Request@240f5a64 onNext
05:07:44.155 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 824ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=12 cap=16384]], throwable=null]
05:07:44.155 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 824ms] jdk.internal.net.http.Http1Request@240f5a64 onComplete
05:07:44.155 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 824ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.155 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 824ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 824ms] SocketTube(1) trying to write: 516
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 824ms] SocketTube(1) wrote: 516
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 824ms] SocketTube(1) write: requesting more...
05:07:44.155 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 824ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.155 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 824ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.155 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 824ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.155 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 824ms] Http1Exchange requesting more request body from the subscriber
05:07:44.155 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 824ms] jdk.internal.net.http.Http1Request@240f5a64 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@41ca9e6d
05:07:44.155 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 824ms] Http1Publisher(SocketTube(1)) onNext with 12 bytes
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 824ms] SocketTube(1) trying to write: 12
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 824ms] SocketTube(1) wrote: 12
05:07:44.155 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 824ms] SocketTube(1) write: requesting more...
05:07:44.155 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 824ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.155 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 824ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.155 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 824ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.155 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 824ms] Http1Exchange initiating completion of bodySentCF
05:07:44.155 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 824ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.155 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 824ms] Http1Exchange reading headers
05:07:44.155 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 825ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.155 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 825ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.155 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 825ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.155 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 825ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@761741ab
05:07:44.155 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 825ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.191 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 860ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.191 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 860ms] SocketTube(1) read bytes: 122
05:07:44.191 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 860ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.191 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 860ms] SocketTube(1) resuming read event
05:07:44.191 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 860ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.191 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 860ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@79506d70
05:07:44.191 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 860ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.191 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 860ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.191 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 860ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@79506d70
05:07:44.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 860ms] HttpClientImpl(1) next timeout: 299961
05:07:44.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 860ms] HttpClientImpl(1) next expired: 0
05:07:44.191 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 860ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.191 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 860ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.191 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.191 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@79506d70
05:07:44.191 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.191 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 861ms] Http1Exchange getResponseAsync completed successfully
05:07:44.191 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.191 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.191 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@cd699f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@19fa47f5 queue.isEmpty: false
05:07:44.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.192 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 861ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.192 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@cd699f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@19fa47f5, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@cd699f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@19fa47f5
05:07:44.192 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.192 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@cd699f4/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@19fa47f5
05:07:44.192 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.192 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 861ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.192 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 861ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.192 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 861ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.192 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 861ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.192 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 861ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.192 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 861ms] SocketTube(1) connecting flows
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 861ms] SocketTube(1) read publisher got subscriber
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 861ms] SocketTube(1) registering subscribe event
05:07:44.192 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 861ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.192 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 861ms] SocketTube(1) subscribed for writing
05:07:44.192 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 861ms] SocketTube(1) write: resetting demand to 0
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 861ms] SocketTube(1) subscribe event raised
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 861ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.192 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 862ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) read demand reset to 0
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) calling onSubscribe
05:07:44.192 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 861ms] SocketTube(1) write: registering startSubscription event
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) got some demand for reading
05:07:44.192 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) resuming read event
05:07:44.192 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 862ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.192 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 862ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.192 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 862ms] Http1Response(id=36, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.192 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.193 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) onSubscribe called
05:07:44.193 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 862ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.193 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value in 42ms
05:07:44.193 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) pending subscriber subscribed
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 862ms] HttpClientImpl(1) next timeout: 0
05:07:44.193 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 862ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 862ms] HttpClientImpl(1) next expired: 1199807
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 862ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.193 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=0c2438fdfcce9cb6, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=999cd5ff56835e38, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664151000000, endEpochNanos=1735189664192569097, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.193 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) write: starting subscription
05:07:44.193 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 862ms] SocketTube(1) write: offloading requestMore
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 862ms] HttpClientImpl(1) next timeout: 0
05:07:44.193 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=b1d759ca6ac7601d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=999cd5ff56835e38, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664151000000, endEpochNanos=1735189664192920602, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 863ms] HttpClientImpl(1) next expired: 1199807
05:07:44.193 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 863ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.193 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 862ms] SocketTube(1) write: requesting more...
05:07:44.193 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 863ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.193 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=999cd5ff56835e38, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=a2b224367869ef07, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189664151000000, endEpochNanos=1735189664193664348, attributes=AttributesMap{data={http.method=POST, random.key=39be4462-cca1-4e75-b66f-9f732ac88717, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="12", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value"}, epochNanos=1735189664193654510, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.194 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "87428f6de365ca571ddab40f33c73940","eventTime": 1735189664193654510,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "12","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54\u002fvalue"}}

05:07:44.194 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=ef83cc4224bf8d92, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=a2b224367869ef07, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664150000000, endEpochNanos=1735189664193560800, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.194 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=87428f6de365ca571ddab40f33c73940, spanId=a2b224367869ef07, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664150000000, endEpochNanos=1735189664193891306, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.54/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.195 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:44.195 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:44.195 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 336)), decoderResult: success)
05:07:44.195 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 41, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 336)), decoderResult: success)
05:07:44.196 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=84c74778b71b444bd181e033acaeabe2,spanId=3960947cf4775628} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.197 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.197 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 866ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.197 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 866ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.197 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 866ms] HttpClientImpl(1) next timeout: 300000
05:07:44.197 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 867ms] Http2ClientImpl not found in connection pool
05:07:44.197 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 867ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.197 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 867ms] HttpClientImpl(1) next expired: 1199803
05:07:44.197 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 867ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.197 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 867ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.197 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 867ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.198 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 867ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.198 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 867ms] Exchange checkFor407: all clear
05:07:44.198 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 867ms] Http1Exchange Sending headers only
05:07:44.198 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@b2ef999 queue.isEmpty: true
05:07:44.198 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@b2ef999, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.198 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.198 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.198 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.198 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 867ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.198 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 867ms] Http1Exchange response created in advance
05:07:44.198 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 867ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.198 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 867ms] SocketTube(1) connecting flows
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 867ms] SocketTube(1) read publisher got subscriber
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 867ms] SocketTube(1) registering subscribe event
05:07:44.198 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 867ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.198 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 868ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.198 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 868ms] SocketTube(1) subscribed for writing
05:07:44.198 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 868ms] SocketTube(1) write: resetting demand to 0
05:07:44.198 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 868ms] SocketTube(1) write: registering startSubscription event
05:07:44.198 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 868ms] Http1Exchange requestAction.headers
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) subscribe event raised
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@4f634401
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) read demand reset to 0
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) calling onSubscribe
05:07:44.198 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 868ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.198 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 868ms] Http1Exchange setting outgoing with headers
05:07:44.198 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 868ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.198 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) onSubscribe called
05:07:44.199 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 868ms] SocketTube(1) pending subscriber subscribed
05:07:44.199 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 868ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.199 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 868ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.199 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 868ms] SocketTube(1) got some demand for reading
05:07:44.199 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 868ms] SocketTube(1) resuming read event
05:07:44.198 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 868ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.199 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 868ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 868ms] HttpClientImpl(1) next timeout: 299998
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 868ms] HttpClientImpl(1) next expired: 0
05:07:44.199 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 868ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.199 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 868ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 868ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.199 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 869ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.199 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 869ms] SocketTube(1) write: starting subscription
05:07:44.199 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 869ms] SocketTube(1) write: offloading requestMore
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 869ms] HttpClientImpl(1) next timeout: 299998
05:07:44.199 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 869ms] SocketTube(1) write: requesting more...
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 869ms] HttpClientImpl(1) next expired: 0
05:07:44.199 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 869ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.199 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.199 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.199 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.199 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 869ms] Http1Exchange initiating completion of headersSentCF
05:07:44.199 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 869ms] Exchange checkFor407: all clear
05:07:44.200 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 869ms] Exchange sendRequestBody
05:07:44.200 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 869ms] Http1Exchange sendBodyAsync
05:07:44.200 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 869ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.200 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 869ms] Http1Exchange requesting more request body from the subscriber
05:07:44.200 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 869ms] jdk.internal.net.http.Http1Request@7881f44a Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@330fc831
05:07:44.200 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 869ms] jdk.internal.net.http.Http1Request@7881f44a onNext
05:07:44.200 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 869ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=41 cap=16384]], throwable=null]
05:07:44.200 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 869ms] jdk.internal.net.http.Http1Request@7881f44a onComplete
05:07:44.200 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 869ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.200 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 869ms] SocketTube(1) trying to write: 460
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 869ms] SocketTube(1) wrote: 460
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 869ms] SocketTube(1) write: requesting more...
05:07:44.200 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.200 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 869ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.200 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 869ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.200 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 869ms] Http1Exchange requesting more request body from the subscriber
05:07:44.200 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 869ms] jdk.internal.net.http.Http1Request@7881f44a Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@330fc831
05:07:44.200 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 869ms] Http1Publisher(SocketTube(1)) onNext with 41 bytes
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 869ms] SocketTube(1) trying to write: 41
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 869ms] SocketTube(1) wrote: 41
05:07:44.200 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 870ms] SocketTube(1) write: requesting more...
05:07:44.200 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 870ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.200 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 870ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.200 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 870ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.200 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 870ms] Http1Exchange initiating completion of bodySentCF
05:07:44.200 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 870ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.200 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 870ms] Http1Exchange reading headers
05:07:44.200 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 870ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.200 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 870ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.200 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 870ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.200 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 870ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@786fd7dc
05:07:44.200 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 870ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.206 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 876ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.206 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 876ms] SocketTube(1) read bytes: 235
05:07:44.206 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Putting 235 bytes into the queue
05:07:44.206 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 876ms] SocketTube(1) resuming read event
05:07:44.206 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Got 235 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@b2ef999
05:07:44.206 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.206 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 876ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.206 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 876ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.206 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 235 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@b2ef999
05:07:44.207 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 876ms] HttpClientImpl(1) next timeout: 299990
05:07:44.207 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 876ms] HttpClientImpl(1) next expired: 0
05:07:44.207 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 876ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Sending 235/235 bytes to header parser
05:07:44.207 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 876ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.207 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 876ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=109
05:07:44.207 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@b2ef999
05:07:44.207 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 876ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.207 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 876ms] Http1Exchange getResponseAsync completed successfully
05:07:44.207 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 876ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.207 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 876ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.207 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@4710b79/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@49f21586 queue.isEmpty: false
05:07:44.207 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 876ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 126
05:07:44.207 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 876ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=126, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.207 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@4710b79/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@49f21586, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.207 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) Got 126 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@4710b79/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@49f21586
05:07:44.207 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.207 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 126 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@4710b79/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@49f21586
05:07:44.207 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 877ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Sending 126/235 bytes to body parser
05:07:44.207 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 877ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 126 bytes (126 remaining / 126)
05:07:44.207 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 877ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.207 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.207 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 877ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.207 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 877ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.207 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 877ms] SocketTube(1) connecting flows
05:07:44.207 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 877ms] SocketTube(1) read publisher got subscriber
05:07:44.207 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 877ms] SocketTube(1) registering subscribe event
05:07:44.208 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 877ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.208 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 877ms] SocketTube(1) subscribed for writing
05:07:44.208 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 877ms] SocketTube(1) write: resetting demand to 0
05:07:44.208 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 877ms] SocketTube(1) write: registering startSubscription event
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) subscribe event raised
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.208 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 877ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) read demand reset to 0
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) calling onSubscribe
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) got some demand for reading
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) resuming read event
05:07:44.208 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 11ms
05:07:44.208 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 877ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.208 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=3e4091d6893561ec, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=3960947cf4775628, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664197000000, endEpochNanos=1735189664208283894, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.208 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 877ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.208 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.208 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=824382b773a91db9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=3960947cf4775628, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664197000000, endEpochNanos=1735189664208443792, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.208 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=455bce69ebbb0aab, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=3960947cf4775628, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664196000000, endEpochNanos=1735189664207973770, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.208 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=84c74778b71b444bd181e033acaeabe2, spanId=3960947cf4775628, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664196000000, endEpochNanos=1735189664208318553, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.208 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 877ms] Http1Response(id=37, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.209 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 878ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.209 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 878ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.209 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 12
05:07:44.209 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 12
05:07:44.209 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 12, cap: 12/12, unwrapped: PooledUnsafeDirectByteBuf(ridx: 281, widx: 281, cap: 320)), decoderResult: success)
05:07:44.209 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 12, widx: 12, cap: 12/12, unwrapped: PooledUnsafeDirectByteBuf(ridx: 281, widx: 281, cap: 320)), decoderResult: success)
05:07:44.208 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 877ms] SocketTube(1) onSubscribe called
05:07:44.209 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 879ms] SocketTube(1) pending subscriber subscribed
05:07:44.209 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) next timeout: 0
05:07:44.209 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) next expired: 1199791
05:07:44.209 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.209 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 879ms] SocketTube(1) write: starting subscription
05:07:44.209 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 879ms] SocketTube(1) write: offloading requestMore
05:07:44.209 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) next timeout: 0
05:07:44.210 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 879ms] SocketTube(1) write: requesting more...
05:07:44.210 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 879ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.210 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) next expired: 1199790
05:07:44.210 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 879ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.210 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value into OpenTelemetrySpan{traceId=4b9006823c68afae656cc84216a4e4ba,spanId=885d2d6073cc9911} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.210 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=00729637e21d2372, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=885d2d6073cc9911, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664210000000, endEpochNanos=0}}, span id=00729637e21d2372, trace id=4b9006823c68afae656cc84216a4e4ba} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=55bfae72fbaafddd, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=885d2d6073cc9911, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=81651a9d-cab9-4294-a144-e94ada851037}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664210000000, endEpochNanos=0}}, span id=55bfae72fbaafddd, trace id=4b9006823c68afae656cc84216a4e4ba}
05:07:44.210 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value into OpenTelemetrySpan{traceId=4b9006823c68afae656cc84216a4e4ba,spanId=55bfae72fbaafddd} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:44.211 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value
05:07:44.211 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 880ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value POST
05:07:44.211 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 880ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value POST,
	 proxy=null
05:07:44.211 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 880ms] HttpClientImpl(1) next timeout: 300000
05:07:44.211 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 880ms] Http2ClientImpl not found in connection pool
05:07:44.211 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 880ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.211 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 880ms] HttpClientImpl(1) next expired: 1199789
05:07:44.211 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 880ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.211 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 880ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.211 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 881ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.211 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 881ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.211 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 881ms] Exchange checkFor407: all clear
05:07:44.212 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 881ms] Http1Exchange Sending headers only
05:07:44.212 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@38f16a79 queue.isEmpty: true
05:07:44.212 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@38f16a79, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.212 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.212 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.212 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.212 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 881ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.212 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 881ms] Http1Exchange response created in advance
05:07:44.212 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 881ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.212 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 881ms] SocketTube(1) connecting flows
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 881ms] SocketTube(1) read publisher got subscriber
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 881ms] SocketTube(1) registering subscribe event
05:07:44.212 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 881ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.212 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 881ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.212 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 881ms] SocketTube(1) subscribed for writing
05:07:44.212 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 881ms] SocketTube(1) write: resetting demand to 0
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 881ms] SocketTube(1) subscribe event raised
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 881ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@2af0a3c4
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) read demand reset to 0
05:07:44.212 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 881ms] SocketTube(1) write: registering startSubscription event
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) calling onSubscribe
05:07:44.212 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 882ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.212 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 882ms] Http1Exchange requestAction.headers
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) onSubscribe called
05:07:44.212 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 882ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.212 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) pending subscriber subscribed
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) next timeout: 299998
05:07:44.212 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 882ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) next expired: 0
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.213 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 882ms] Http1Exchange setting outgoing with headers
05:07:44.213 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) write: starting subscription
05:07:44.213 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 882ms] SocketTube(1) write: offloading requestMore
05:07:44.213 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 882ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.213 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-1] [1s 882ms] SocketTube(1) write: requesting more...
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) next timeout: 299998
05:07:44.213 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 882ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=516 cap=516]], throwable=null]
05:07:44.213 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 882ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.213 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 882ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) next expired: 0
05:07:44.213 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 882ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.213 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-1] [1s 882ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.213 DEBUG [SocketTube.debugState] - [pool-2-thread-1] [1s 883ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.213 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 882ms] SocketTube(1) got some demand for reading
05:07:44.213 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 883ms] SocketTube(1) resuming read event
05:07:44.213 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 882ms] Http1Exchange initiating completion of headersSentCF
05:07:44.213 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 883ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.213 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) onNext with 516 bytes
05:07:44.213 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 883ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.214 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 883ms] HttpClientImpl(1) next timeout: 299997
05:07:44.214 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 883ms] HttpClientImpl(1) next expired: 0
05:07:44.213 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 883ms] SocketTube(1) trying to write: 516
05:07:44.214 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 883ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.214 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 883ms] SocketTube(1) wrote: 516
05:07:44.214 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 883ms] SocketTube(1) write: requesting more...
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.214 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 883ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.214 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 883ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:44.214 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 883ms] Exchange checkFor407: all clear
05:07:44.214 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 883ms] Exchange sendRequestBody
05:07:44.214 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 883ms] Http1Exchange sendBodyAsync
05:07:44.214 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 883ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.214 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 883ms] Http1Exchange requesting more request body from the subscriber
05:07:44.214 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 883ms] jdk.internal.net.http.Http1Request@6d50f9e4 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@34d794dd
05:07:44.214 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 883ms] jdk.internal.net.http.Http1Request@6d50f9e4 onNext
05:07:44.214 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 883ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=12 cap=16384]], throwable=null]
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 883ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.214 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 884ms] Http1Exchange requesting more request body from the subscriber
05:07:44.214 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 884ms] jdk.internal.net.http.Http1Request@6d50f9e4 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@34d794dd
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) onNext with 12 bytes
05:07:44.214 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 884ms] SocketTube(1) trying to write: 12
05:07:44.214 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 884ms] SocketTube(1) wrote: 12
05:07:44.214 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 884ms] SocketTube(1) write: requesting more...
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.214 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 884ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.214 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 884ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) hasOutgoing = false
05:07:44.214 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 884ms] jdk.internal.net.http.Http1Request@6d50f9e4 onComplete
05:07:44.214 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 884ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.214 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 884ms] Http1Exchange initiating completion of bodySentCF
05:07:44.214 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 884ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@67262333
05:07:44.215 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 884ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.215 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 884ms] Http1Exchange reading headers
05:07:44.215 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 884ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.215 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 884ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.215 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 884ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.247 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 917ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.247 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 917ms] SocketTube(1) read bytes: 122
05:07:44.247 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 917ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.247 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 917ms] SocketTube(1) resuming read event
05:07:44.247 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 917ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.248 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 917ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.247 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 917ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@38f16a79
05:07:44.248 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 917ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.248 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 917ms] HttpClientImpl(1) next timeout: 299963
05:07:44.248 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 917ms] HttpClientImpl(1) next expired: 0
05:07:44.248 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 917ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@38f16a79
05:07:44.248 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 917ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.248 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 917ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.248 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [1s 917ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.248 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [1s 917ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@38f16a79
05:07:44.248 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [1s 917ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.248 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 917ms] Http1Exchange getResponseAsync completed successfully
05:07:44.248 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [1s 917ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.248 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [1s 918ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.248 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@54b73f0c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5cce283b queue.isEmpty: false
05:07:44.248 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.248 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [1s 918ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.248 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@54b73f0c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5cce283b, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.248 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@54b73f0c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5cce283b
05:07:44.248 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.248 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@54b73f0c/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5cce283b
05:07:44.248 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [1s 918ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.248 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 918ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.249 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [1s 918ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.249 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.249 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [1s 918ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.249 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [1s 918ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.249 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 918ms] SocketTube(1) connecting flows
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 918ms] SocketTube(1) read publisher got subscriber
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 918ms] SocketTube(1) registering subscribe event
05:07:44.249 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 918ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.249 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 918ms] SocketTube(1) subscribed for writing
05:07:44.249 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 918ms] SocketTube(1) write: resetting demand to 0
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) subscribe event raised
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.249 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 918ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) read demand reset to 0
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) calling onSubscribe
05:07:44.249 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 918ms] SocketTube(1) write: registering startSubscription event
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) got some demand for reading
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 918ms] SocketTube(1) resuming read event
05:07:44.249 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 918ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.249 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 919ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 919ms] SocketTube(1) onSubscribe called
05:07:44.249 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 919ms] SocketTube(1) pending subscriber subscribed
05:07:44.249 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [1s 919ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.249 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value in 38ms
05:07:44.249 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) next timeout: 0
05:07:44.249 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) next expired: 1199751
05:07:44.249 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [1s 919ms] Http1Response(id=38, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.249 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.250 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 919ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.250 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 919ms] SocketTube(1) write: starting subscription
05:07:44.250 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 919ms] SocketTube(1) write: offloading requestMore
05:07:44.249 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=afd853c2931597e0, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=55bfae72fbaafddd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664210000000, endEpochNanos=1735189664248922782, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.250 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 919ms] SocketTube(1) write: requesting more...
05:07:44.250 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 919ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.250 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) next timeout: 0
05:07:44.250 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) next expired: 1199750
05:07:44.250 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 919ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.250 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [1s 919ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.250 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=171db026f09ab358, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=55bfae72fbaafddd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664210000000, endEpochNanos=1735189664249336273, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.250 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=55bfae72fbaafddd, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=885d2d6073cc9911, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189664210000000, endEpochNanos=1735189664249955477, attributes=AttributesMap{data={http.method=POST, random.key=81651a9d-cab9-4294-a144-e94ada851037, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="12", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value"}, epochNanos=1735189664249945438, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.251 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "4b9006823c68afae656cc84216a4e4ba","eventTime": 1735189664249945438,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "12","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002felement\u002ff.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55\u002fvalue"}}

05:07:44.251 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=00729637e21d2372, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=885d2d6073cc9911, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664210000000, endEpochNanos=1735189664250723039, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.251 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=4b9006823c68afae656cc84216a4e4ba, spanId=885d2d6073cc9911, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664210000000, endEpochNanos=1735189664251056070, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element/f.FAC0CF7626772C4724A30DEBFD6C9BCB.d.E86359B638F4E56EC74C6D46CCF457BE.e.55/value, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.252 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 53
05:07:44.252 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 53
05:07:44.252 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 53, cap: 53/53, unwrapped: PooledUnsafeDirectByteBuf(ridx: 241, widx: 241, cap: 320)), decoderResult: success)
05:07:44.252 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 53, widx: 53, cap: 53/53, unwrapped: PooledUnsafeDirectByteBuf(ridx: 241, widx: 241, cap: 320)), decoderResult: success)
05:07:44.253 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=5e798710b8c112b6a928c2b8376ea538,spanId=cb766977cb652a1b} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.253 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.254 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 923ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.254 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [1s 923ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.254 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 923ms] HttpClientImpl(1) next timeout: 300000
05:07:44.254 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 923ms] HttpClientImpl(1) next expired: 1199746
05:07:44.254 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 923ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.254 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [1s 923ms] Http2ClientImpl not found in connection pool
05:07:44.254 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [1s 923ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.254 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 923ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.254 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [1s 924ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.254 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [1s 924ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.254 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 924ms] Exchange checkFor407: all clear
05:07:44.254 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 924ms] Http1Exchange Sending headers only
05:07:44.254 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@6052f7c0 queue.isEmpty: true
05:07:44.255 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@6052f7c0, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.255 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.255 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.255 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.255 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 924ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.255 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [1s 924ms] Http1Exchange response created in advance
05:07:44.255 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [1s 924ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.255 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [1s 924ms] SocketTube(1) connecting flows
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [1s 924ms] SocketTube(1) read publisher got subscriber
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [1s 924ms] SocketTube(1) registering subscribe event
05:07:44.255 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 924ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.255 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [1s 924ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 924ms] SocketTube(1) subscribe event raised
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 924ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@3f932214
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 924ms] SocketTube(1) read demand reset to 0
05:07:44.255 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 924ms] SocketTube(1) subscribed for writing
05:07:44.255 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [1s 924ms] SocketTube(1) write: resetting demand to 0
05:07:44.255 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [1s 924ms] SocketTube(1) write: registering startSubscription event
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 924ms] SocketTube(1) calling onSubscribe
05:07:44.255 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 925ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.255 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 924ms] Http1Exchange requestAction.headers
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 925ms] SocketTube(1) onSubscribe called
05:07:44.255 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 925ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 925ms] SocketTube(1) pending subscriber subscribed
05:07:44.255 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 925ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.255 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [1s 925ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.255 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [1s 925ms] Http1Exchange setting outgoing with headers
05:07:44.256 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 925ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.255 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) next timeout: 299999
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 925ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 925ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.255 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [1s 925ms] SocketTube(1) got some demand for reading
05:07:44.256 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [1s 925ms] SocketTube(1) resuming read event
05:07:44.256 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) next expired: 0
05:07:44.256 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.256 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 925ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.256 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 925ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.256 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 925ms] SocketTube(1) write: starting subscription
05:07:44.256 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 925ms] SocketTube(1) write: offloading requestMore
05:07:44.256 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 925ms] SocketTube(1) write: requesting more...
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 925ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.256 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) next timeout: 299998
05:07:44.256 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) next expired: 0
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 925ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.256 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 925ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 925ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.256 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 926ms] Http1Exchange initiating completion of headersSentCF
05:07:44.256 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 926ms] Exchange checkFor407: all clear
05:07:44.256 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 926ms] Exchange sendRequestBody
05:07:44.256 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 926ms] Http1Exchange sendBodyAsync
05:07:44.256 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 926ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.256 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 926ms] Http1Exchange requesting more request body from the subscriber
05:07:44.256 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 926ms] jdk.internal.net.http.Http1Request@266dbeb0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@73de86e4
05:07:44.256 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 926ms] jdk.internal.net.http.Http1Request@266dbeb0 onNext
05:07:44.256 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 926ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=53 cap=16384]], throwable=null]
05:07:44.256 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 926ms] jdk.internal.net.http.Http1Request@266dbeb0 onComplete
05:07:44.256 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 926ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.256 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 926ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 926ms] SocketTube(1) trying to write: 460
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 926ms] SocketTube(1) wrote: 460
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 926ms] SocketTube(1) write: requesting more...
05:07:44.257 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 926ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.257 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 926ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.257 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 926ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.257 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 926ms] Http1Exchange requesting more request body from the subscriber
05:07:44.257 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 926ms] jdk.internal.net.http.Http1Request@266dbeb0 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@73de86e4
05:07:44.257 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 926ms] Http1Publisher(SocketTube(1)) onNext with 53 bytes
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 926ms] SocketTube(1) trying to write: 53
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 926ms] SocketTube(1) wrote: 53
05:07:44.257 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 926ms] SocketTube(1) write: requesting more...
05:07:44.257 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 926ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.257 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 926ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.257 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 926ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.257 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 926ms] Http1Exchange initiating completion of bodySentCF
05:07:44.257 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 926ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.257 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 926ms] Http1Exchange reading headers
05:07:44.257 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 926ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.257 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 926ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.257 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 926ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.257 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 926ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@1a09b1d7
05:07:44.257 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 926ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.273 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 943ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.273 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 943ms] SocketTube(1) read bytes: 986
05:07:44.273 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) Putting 986 bytes into the queue
05:07:44.273 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 943ms] SocketTube(1) resuming read event
05:07:44.273 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) Got 986 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@6052f7c0
05:07:44.274 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.273 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 943ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.274 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 943ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 986 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@6052f7c0
05:07:44.274 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 943ms] HttpClientImpl(1) next timeout: 299980
05:07:44.274 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 943ms] HttpClientImpl(1) next expired: 0
05:07:44.274 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 943ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.274 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 943ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Sending 986/986 bytes to header parser
05:07:44.274 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 943ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=116
05:07:44.274 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@6052f7c0
05:07:44.274 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 943ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.274 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 943ms] Http1Exchange getResponseAsync completed successfully
05:07:44.274 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 943ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.274 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 943ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.274 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 943ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@29e4e40a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2e8aae74 queue.isEmpty: false
05:07:44.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 870
05:07:44.274 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=870, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.274 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@29e4e40a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2e8aae74, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) Got 870 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@29e4e40a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2e8aae74
05:07:44.274 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.274 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 870 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@29e4e40a/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2e8aae74
05:07:44.274 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 944ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Sending 870/986 bytes to body parser
05:07:44.274 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 870 bytes (870 remaining / 870)
05:07:44.274 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 944ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.274 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.274 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 944ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.274 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 944ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.274 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 944ms] SocketTube(1) connecting flows
05:07:44.274 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 944ms] SocketTube(1) read publisher got subscriber
05:07:44.274 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 944ms] SocketTube(1) registering subscribe event
05:07:44.275 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 944ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.275 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 944ms] SocketTube(1) subscribed for writing
05:07:44.275 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 944ms] SocketTube(1) write: resetting demand to 0
05:07:44.275 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 944ms] SocketTube(1) write: registering startSubscription event
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 944ms] SocketTube(1) subscribe event raised
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 944ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.275 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.275 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 22ms
05:07:44.275 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 944ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 944ms] SocketTube(1) read demand reset to 0
05:07:44.275 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=3397753999c4bfac, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=cb766977cb652a1b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664253000000, endEpochNanos=1735189664274489578, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.275 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 944ms] Http1Response(id=39, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 944ms] SocketTube(1) calling onSubscribe
05:07:44.275 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 944ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.275 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 945ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.275 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=dbddcf0f7ca3939a, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=cb766977cb652a1b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664253000000, endEpochNanos=1735189664274743852, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 944ms] SocketTube(1) got some demand for reading
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) resuming read event
05:07:44.275 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=e20979938dd53b67, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=cb766977cb652a1b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664253000000, endEpochNanos=1735189664275479734, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.275 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 945ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.275 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) onSubscribe called
05:07:44.275 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=5e798710b8c112b6a928c2b8376ea538, spanId=cb766977cb652a1b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664252000000, endEpochNanos=1735189664274871183, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.275 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) pending subscriber subscribed
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) next timeout: 0
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) next expired: 1199724
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.276 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) write: starting subscription
05:07:44.276 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 945ms] SocketTube(1) write: offloading requestMore
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) next timeout: 0
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) next expired: 1199724
05:07:44.276 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 945ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.276 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 945ms] SocketTube(1) write: requesting more...
05:07:44.276 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 945ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.276 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:44.276 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 48
05:07:44.277 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:44.277 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 48, widx: 48, cap: 48/48, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:44.277 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=3326d7a8e58fa0efab973046080a0c67,spanId=56bb61105674d1a9} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.278 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.278 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 948ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.279 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 948ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.279 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 948ms] HttpClientImpl(1) next timeout: 299999
05:07:44.279 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 948ms] HttpClientImpl(1) next expired: 1199721
05:07:44.279 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 948ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.279 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 948ms] Http2ClientImpl not found in connection pool
05:07:44.279 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 948ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.279 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 948ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.279 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 948ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.279 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 949ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.279 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 949ms] Exchange checkFor407: all clear
05:07:44.279 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 949ms] Http1Exchange Sending headers only
05:07:44.279 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@32098f5e queue.isEmpty: true
05:07:44.279 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@32098f5e, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.279 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.279 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.279 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.279 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.279 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 949ms] Http1Exchange response created in advance
05:07:44.279 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 949ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.279 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 949ms] SocketTube(1) connecting flows
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 949ms] SocketTube(1) read publisher got subscriber
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 949ms] SocketTube(1) registering subscribe event
05:07:44.280 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 949ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.280 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 949ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.280 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 949ms] SocketTube(1) subscribed for writing
05:07:44.280 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 949ms] SocketTube(1) write: resetting demand to 0
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) subscribe event raised
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@2a7b55a3
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) read demand reset to 0
05:07:44.280 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 949ms] SocketTube(1) write: registering startSubscription event
05:07:44.280 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 949ms] Http1Exchange requestAction.headers
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) calling onSubscribe
05:07:44.280 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) onSubscribe called
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 949ms] SocketTube(1) pending subscriber subscribed
05:07:44.280 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.280 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.280 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 949ms] Http1Exchange setting outgoing with headers
05:07:44.280 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 949ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.280 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.280 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 949ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 950ms] SocketTube(1) got some demand for reading
05:07:44.280 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 950ms] SocketTube(1) resuming read event
05:07:44.280 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 949ms] HttpClientImpl(1) next timeout: 299998
05:07:44.280 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 950ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.280 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.280 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 950ms] HttpClientImpl(1) next expired: 0
05:07:44.280 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 950ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.281 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 950ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 950ms] SocketTube(1) write: starting subscription
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 950ms] SocketTube(1) write: offloading requestMore
05:07:44.281 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 950ms] HttpClientImpl(1) next timeout: 299997
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 950ms] SocketTube(1) write: requesting more...
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.281 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 950ms] HttpClientImpl(1) next expired: 0
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.281 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 950ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.281 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 950ms] Http1Exchange initiating completion of headersSentCF
05:07:44.281 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 950ms] Exchange checkFor407: all clear
05:07:44.281 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [1s 950ms] Exchange sendRequestBody
05:07:44.281 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 950ms] Http1Exchange sendBodyAsync
05:07:44.281 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [1s 950ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.281 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 950ms] Http1Exchange requesting more request body from the subscriber
05:07:44.281 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 950ms] jdk.internal.net.http.Http1Request@47c10943 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@3cc3f9a1
05:07:44.281 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-3] [1s 950ms] jdk.internal.net.http.Http1Request@47c10943 onNext
05:07:44.281 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 950ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=48 cap=16384]], throwable=null]
05:07:44.281 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-3] [1s 950ms] jdk.internal.net.http.Http1Request@47c10943 onComplete
05:07:44.281 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 950ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 950ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 951ms] SocketTube(1) trying to write: 460
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 951ms] SocketTube(1) wrote: 460
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 951ms] SocketTube(1) write: requesting more...
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 951ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.281 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 951ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.281 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 951ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.281 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-3] [1s 951ms] Http1Exchange requesting more request body from the subscriber
05:07:44.281 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-3] [1s 951ms] jdk.internal.net.http.Http1Request@47c10943 Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@3cc3f9a1
05:07:44.281 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 951ms] Http1Publisher(SocketTube(1)) onNext with 48 bytes
05:07:44.281 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 951ms] SocketTube(1) trying to write: 48
05:07:44.282 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [1s 951ms] SocketTube(1) wrote: 48
05:07:44.282 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 951ms] SocketTube(1) write: requesting more...
05:07:44.282 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [1s 951ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.282 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 951ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.282 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 951ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.282 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [1s 951ms] Http1Exchange initiating completion of bodySentCF
05:07:44.282 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 951ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.282 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [1s 951ms] Http1Exchange reading headers
05:07:44.282 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 951ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.282 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 951ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.282 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [1s 951ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.282 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 951ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@6a5ce4d5
05:07:44.282 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 951ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.298 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 967ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.298 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 967ms] SocketTube(1) read bytes: 981
05:07:44.298 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [1s 967ms] Http1AsyncReceiver(SocketTube(1)) Putting 981 bytes into the queue
05:07:44.298 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 967ms] SocketTube(1) resuming read event
05:07:44.298 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 967ms] Http1AsyncReceiver(SocketTube(1)) Got 981 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@32098f5e
05:07:44.298 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 967ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.298 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 981 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@32098f5e
05:07:44.298 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 967ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.298 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 968ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.298 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Sending 981/981 bytes to header parser
05:07:44.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 968ms] HttpClientImpl(1) next timeout: 299980
05:07:44.298 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=116
05:07:44.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 968ms] HttpClientImpl(1) next expired: 0
05:07:44.298 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 968ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.298 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@32098f5e
05:07:44.298 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.298 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [1s 968ms] Http1Exchange getResponseAsync completed successfully
05:07:44.299 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.299 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.299 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@1451f5bf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@377c1865 queue.isEmpty: false
05:07:44.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 865
05:07:44.299 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [1s 968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=865, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.299 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@1451f5bf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@377c1865, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Got 865 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@1451f5bf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@377c1865
05:07:44.299 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 865 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@1451f5bf/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@377c1865
05:07:44.299 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Sending 865/981 bytes to body parser
05:07:44.299 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 865 bytes (865 remaining / 865)
05:07:44.299 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [1s 968ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.299 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [1s 968ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.299 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [1s 968ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.299 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [1s 968ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.299 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 968ms] SocketTube(1) connecting flows
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 968ms] SocketTube(1) read publisher got subscriber
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 969ms] SocketTube(1) registering subscribe event
05:07:44.299 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 969ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.299 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 969ms] SocketTube(1) subscribed for writing
05:07:44.299 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 969ms] SocketTube(1) write: resetting demand to 0
05:07:44.299 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 969ms] SocketTube(1) write: registering startSubscription event
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) subscribe event raised
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.299 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [1s 969ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) read demand reset to 0
05:07:44.299 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [1s 969ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.299 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [1s 969ms] Http1Response(id=40, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) calling onSubscribe
05:07:44.299 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 21ms
05:07:44.299 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 969ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.300 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [1s 969ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.299 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) got some demand for reading
05:07:44.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) resuming read event
05:07:44.300 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=2175e66aa599493d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=56bb61105674d1a9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664278000000, endEpochNanos=1735189664299541124, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.300 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 969ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.300 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.300 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) onSubscribe called
05:07:44.300 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=15bb967733e7e167, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=56bb61105674d1a9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664278000000, endEpochNanos=1735189664300037279, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.300 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) pending subscriber subscribed
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 969ms] HttpClientImpl(1) next timeout: 0
05:07:44.300 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=152720dfcd90b0a9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=56bb61105674d1a9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664277000000, endEpochNanos=1735189664299549825, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 969ms] HttpClientImpl(1) next expired: 1199700
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 969ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.300 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) write: starting subscription
05:07:44.300 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 969ms] SocketTube(1) write: offloading requestMore
05:07:44.300 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=3326d7a8e58fa0efab973046080a0c67, spanId=56bb61105674d1a9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664277000000, endEpochNanos=1735189664299924653, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 969ms] HttpClientImpl(1) next timeout: 0
05:07:44.300 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [1s 969ms] SocketTube(1) write: requesting more...
05:07:44.300 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 970ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 970ms] HttpClientImpl(1) next expired: 1199700
05:07:44.300 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 970ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.301 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 52
05:07:44.301 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/url HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 52
05:07:44.301 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 52, cap: 52/52, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:44.301 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 52, widx: 52, cap: 52/52, unwrapped: PooledUnsafeDirectByteBuf(ridx: 236, widx: 236, cap: 304)), decoderResult: success)
05:07:44.302 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=0e0618d49f6cdc1bbe278b3f35f723a4,spanId=e06d6d8655cb0109} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.302 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=dfd254a686930d1f, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=e06d6d8655cb0109, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664302000000, endEpochNanos=0}}, span id=dfd254a686930d1f, trace id=0e0618d49f6cdc1bbe278b3f35f723a4} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=59f2c3e2f854605b, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=e06d6d8655cb0109, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=84be60c3-ec46-4910-a738-10817c9ba51a}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664302000000, endEpochNanos=0}}, span id=59f2c3e2f854605b, trace id=0e0618d49f6cdc1bbe278b3f35f723a4}
05:07:44.302 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/url into OpenTelemetrySpan{traceId=0e0618d49f6cdc1bbe278b3f35f723a4,spanId=59f2c3e2f854605b} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:44.302 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/url
05:07:44.303 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [1s 972ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST
05:07:44.303 DEBUG [Exchange.establishExchange] - [pool-2-thread-3] [1s 972ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/url POST,
	 proxy=null
05:07:44.303 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 972ms] HttpClientImpl(1) next timeout: 300000
05:07:44.303 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-3] [1s 972ms] Http2ClientImpl not found in connection pool
05:07:44.303 DEBUG [ExchangeImpl.get] - [pool-2-thread-3] [1s 972ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.303 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 972ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.303 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-3] [1s 972ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.303 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 972ms] HttpClientImpl(1) next expired: 1199697
05:07:44.303 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 972ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.303 DEBUG [HttpConnection.getConnection] - [pool-2-thread-3] [1s 972ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.303 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [1s 973ms] Exchange checkFor407: all clear
05:07:44.303 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 973ms] Http1Exchange Sending headers only
05:07:44.303 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@754fad46 queue.isEmpty: true
05:07:44.303 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@754fad46, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.303 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.303 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.303 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.303 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.303 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-3] [1s 973ms] Http1Exchange response created in advance
05:07:44.303 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-3] [1s 973ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.303 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [1s 973ms] SocketTube(1) connecting flows
05:07:44.303 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [1s 973ms] SocketTube(1) read publisher got subscriber
05:07:44.303 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [1s 973ms] SocketTube(1) registering subscribe event
05:07:44.303 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [1s 973ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.303 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-3] [1s 973ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.304 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 973ms] SocketTube(1) subscribed for writing
05:07:44.304 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [1s 973ms] SocketTube(1) write: resetting demand to 0
05:07:44.304 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [1s 973ms] SocketTube(1) write: registering startSubscription event
05:07:44.304 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 973ms] Http1Exchange requestAction.headers
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) subscribe event raised
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@7fed5fa1
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) read demand reset to 0
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) calling onSubscribe
05:07:44.304 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.304 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-3] [1s 973ms] Http1Exchange setting outgoing with headers
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) onSubscribe called
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [1s 973ms] SocketTube(1) pending subscriber subscribed
05:07:44.304 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [1s 973ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=431 cap=431]], throwable=null]
05:07:44.304 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 973ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.304 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.304 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.304 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-2] [1s 973ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-2] [1s 974ms] SocketTube(1) got some demand for reading
05:07:44.304 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-2] [1s 974ms] SocketTube(1) resuming read event
05:07:44.304 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [1s 973ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.304 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 973ms] HttpClientImpl(1) next timeout: 299999
05:07:44.304 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 974ms] HttpClientImpl(1) next expired: 0
05:07:44.304 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 974ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.304 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 974ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.305 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [1s 974ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 974ms] SocketTube(1) write: starting subscription
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [1s 974ms] SocketTube(1) write: offloading requestMore
05:07:44.305 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 974ms] HttpClientImpl(1) next timeout: 299998
05:07:44.305 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 974ms] HttpClientImpl(1) next expired: 0
05:07:44.305 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [1s 974ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 974ms] SocketTube(1) write: requesting more...
05:07:44.305 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 974ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.305 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 974ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.305 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 974ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.305 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 974ms] Http1Exchange initiating completion of headersSentCF
05:07:44.305 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [1s 974ms] Exchange checkFor407: all clear
05:07:44.305 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [1s 974ms] Exchange sendRequestBody
05:07:44.305 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 974ms] Http1Exchange sendBodyAsync
05:07:44.305 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [1s 974ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.305 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 974ms] Http1Exchange requesting more request body from the subscriber
05:07:44.305 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 974ms] jdk.internal.net.http.Http1Request@205295fc Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@d70fb99
05:07:44.305 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [1s 974ms] jdk.internal.net.http.Http1Request@205295fc onNext
05:07:44.305 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 974ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=52 cap=16384]], throwable=null]
05:07:44.305 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [1s 974ms] jdk.internal.net.http.Http1Request@205295fc onComplete
05:07:44.305 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [1s 975ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.305 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 975ms] Http1Publisher(SocketTube(1)) onNext with 431 bytes
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 975ms] SocketTube(1) trying to write: 431
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 975ms] SocketTube(1) wrote: 431
05:07:44.305 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 975ms] SocketTube(1) write: requesting more...
05:07:44.305 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 975ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.305 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 975ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.305 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 975ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.305 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [1s 975ms] Http1Exchange requesting more request body from the subscriber
05:07:44.305 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [1s 975ms] jdk.internal.net.http.Http1Request@205295fc Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@d70fb99
05:07:44.306 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 975ms] Http1Publisher(SocketTube(1)) onNext with 52 bytes
05:07:44.306 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 975ms] SocketTube(1) trying to write: 52
05:07:44.306 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [1s 975ms] SocketTube(1) wrote: 52
05:07:44.306 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [1s 975ms] SocketTube(1) write: requesting more...
05:07:44.306 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [1s 975ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.306 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 975ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.306 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 975ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.306 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [1s 975ms] Http1Exchange initiating completion of bodySentCF
05:07:44.306 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [1s 975ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.306 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [1s 975ms] Http1Exchange reading headers
05:07:44.306 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 975ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.306 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 975ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.306 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [1s 975ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.306 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [1s 975ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@4da80be4
05:07:44.306 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [1s 975ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.331 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.331 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s] SocketTube(1) read bytes: 122
05:07:44.331 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [2s] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.331 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s] SocketTube(1) resuming read event
05:07:44.331 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 1ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.331 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 1ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@754fad46
05:07:44.331 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 1ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.331 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 1ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.331 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 1ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@754fad46
05:07:44.332 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [2s 1ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.332 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 1ms] HttpClientImpl(1) next timeout: 299972
05:07:44.332 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [2s 1ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.332 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 1ms] HttpClientImpl(1) next expired: 0
05:07:44.332 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 1ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.332 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [2s 1ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@754fad46
05:07:44.332 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [2s 1ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.332 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [2s 1ms] Http1Exchange getResponseAsync completed successfully
05:07:44.332 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [2s 1ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.332 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [2s 2ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.332 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@3a330966/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3095818a queue.isEmpty: false
05:07:44.332 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.332 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [2s 2ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.332 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@3a330966/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3095818a, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.332 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@3a330966/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3095818a
05:07:44.332 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.333 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@3a330966/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@3095818a
05:07:44.333 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [2s 2ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.333 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [2s 2ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.333 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [2s 2ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.333 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.333 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [2s 2ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.333 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [2s 2ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.333 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [2s 2ms] SocketTube(1) connecting flows
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [2s 2ms] SocketTube(1) read publisher got subscriber
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [2s 2ms] SocketTube(1) registering subscribe event
05:07:44.333 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 2ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [2s 2ms] SocketTube(1) subscribe event raised
05:07:44.333 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 2ms] SocketTube(1) subscribed for writing
05:07:44.333 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [2s 2ms] SocketTube(1) write: resetting demand to 0
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 2ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.333 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 2ms] SocketTube(1) write: registering startSubscription event
05:07:44.333 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [2s 2ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) read demand reset to 0
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) calling onSubscribe
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) got some demand for reading
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) resuming read event
05:07:44.333 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 3ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.333 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) onSubscribe called
05:07:44.333 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) pending subscriber subscribed
05:07:44.333 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [2s 3ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.333 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 3ms] HttpClientImpl(1) next timeout: 0
05:07:44.334 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [2s 3ms] Http1Response(id=41, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.333 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/url in 31ms
05:07:44.334 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 3ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.334 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 3ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.334 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 3ms] HttpClientImpl(1) next expired: 1199666
05:07:44.334 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 3ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.334 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=2cecdeb8af80d8c8, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=59f2c3e2f854605b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664302000000, endEpochNanos=1735189664333359440, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.334 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) write: starting subscription
05:07:44.334 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 3ms] SocketTube(1) write: offloading requestMore
05:07:44.334 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=2c81c33d6ee9d28e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=59f2c3e2f854605b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664302000000, endEpochNanos=1735189664333735090, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.334 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [2s 4ms] SocketTube(1) write: requesting more...
05:07:44.334 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 4ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.334 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 4ms] HttpClientImpl(1) next timeout: 0
05:07:44.334 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 4ms] HttpClientImpl(1) next expired: 1199666
05:07:44.334 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=59f2c3e2f854605b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=e06d6d8655cb0109, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189664302000000, endEpochNanos=1735189664334191291, attributes=AttributesMap{data={http.method=POST, random.key=84be60c3-ec46-4910-a738-10817c9ba51a, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="POST", http.request_content_length="52", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1/url"}, epochNanos=1735189664334181974, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.334 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 4ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.335 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "0e0618d49f6cdc1bbe278b3f35f723a4","eventTime": 1735189664334181974,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "POST","http.request_content_length": "52","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1\u002furl"}}

05:07:44.335 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=dfd254a686930d1f, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=e06d6d8655cb0109, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664302000000, endEpochNanos=1735189664335082783, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.335 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=0e0618d49f6cdc1bbe278b3f35f723a4, spanId=e06d6d8655cb0109, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664302000000, endEpochNanos=1735189664335402069, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/url, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.336 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:44.336 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
POST /wd/hub/session/2945f8180331255e70d350e8d06dbbf1/element HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 41
05:07:44.337 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 288)), decoderResult: success)
05:07:44.337 DEBUG [RequestConverter.channelRead0] - End of http request: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 41, widx: 41, cap: 41/41, unwrapped: PooledUnsafeDirectByteBuf(ridx: 229, widx: 229, cap: 288)), decoderResult: success)
05:07:44.338 DEBUG [HttpTracing.inject] - Injecting (POST) /session/2945f8180331255e70d350e8d06dbbf1/element into OpenTelemetrySpan{traceId=55853e29a2fff585c9d3efe22f0c9126,spanId=03ab85a5331d5191} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.339 DEBUG [JdkHttpClient.execute0] - Executing request: (POST) /session/2945f8180331255e70d350e8d06dbbf1/element
05:07:44.339 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [2s 8ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST
05:07:44.339 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [2s 8ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1/element POST,
	 proxy=null
05:07:44.339 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 8ms] HttpClientImpl(1) next timeout: 300000
05:07:44.339 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [2s 9ms] Http2ClientImpl not found in connection pool
05:07:44.339 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [2s 9ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.339 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 9ms] HttpClientImpl(1) next expired: 1199661
05:07:44.339 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 9ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.339 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [2s 9ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.339 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [2s 9ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.339 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [2s 9ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.340 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [2s 9ms] Exchange checkFor407: all clear
05:07:44.340 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [2s 9ms] Http1Exchange Sending headers only
05:07:44.340 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@9a6c345 queue.isEmpty: true
05:07:44.340 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@9a6c345, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.340 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.340 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.340 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.340 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [2s 9ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.340 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [2s 9ms] Http1Exchange response created in advance
05:07:44.340 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [2s 9ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.340 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [2s 9ms] SocketTube(1) connecting flows
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [2s 9ms] SocketTube(1) read publisher got subscriber
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [2s 9ms] SocketTube(1) registering subscribe event
05:07:44.340 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 9ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.340 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [2s 9ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.340 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 9ms] SocketTube(1) subscribed for writing
05:07:44.340 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [2s 9ms] SocketTube(1) write: resetting demand to 0
05:07:44.340 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 9ms] SocketTube(1) write: registering startSubscription event
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [2s 9ms] SocketTube(1) subscribe event raised
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@502c2d1b
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) read demand reset to 0
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) calling onSubscribe
05:07:44.340 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [2s 10ms] Http1Exchange requestAction.headers
05:07:44.340 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [2s 10ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) onSubscribe called
05:07:44.340 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) pending subscriber subscribed
05:07:44.341 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 10ms] HttpClientImpl(1) next timeout: 299999
05:07:44.341 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 10ms] HttpClientImpl(1) next expired: 0
05:07:44.341 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [2s 10ms] Http1Exchange setting outgoing with headers
05:07:44.341 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [2s 10ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=460 cap=460]], throwable=null]
05:07:44.341 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 10ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.341 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 10ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.341 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [2s 10ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.341 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 10ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.341 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [2s 10ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.341 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [2s 10ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.341 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 10ms] SocketTube(1) write: starting subscription
05:07:44.341 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 11ms] SocketTube(1) write: offloading requestMore
05:07:44.341 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [2s 10ms] SocketTube(1) got some demand for reading
05:07:44.341 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [2s 11ms] SocketTube(1) resuming read event
05:07:44.341 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [2s 11ms] SocketTube(1) write: requesting more...
05:07:44.341 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 11ms] HttpClientImpl(1) next timeout: 299998
05:07:44.341 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [2s 11ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.341 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 11ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.341 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 11ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.341 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 11ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.342 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [2s 12ms] Http1Exchange initiating completion of headersSentCF
05:07:44.341 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 11ms] HttpClientImpl(1) next expired: 0
05:07:44.342 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 12ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.342 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [2s 12ms] Exchange checkFor407: all clear
05:07:44.342 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 12ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.342 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-2] [2s 12ms] Exchange sendRequestBody
05:07:44.342 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [2s 12ms] Http1Exchange sendBodyAsync
05:07:44.342 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 12ms] HttpClientImpl(1) next timeout: 299997
05:07:44.343 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-2] [2s 12ms] Http1Exchange bodySubscriber is class jdk.internal.net.http.Http1Request$FixedContentSubscriber
05:07:44.343 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [2s 12ms] Http1Exchange requesting more request body from the subscriber
05:07:44.343 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 12ms] HttpClientImpl(1) next expired: 0
05:07:44.343 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 12ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.343 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [2s 12ms] jdk.internal.net.http.Http1Request@3779ce0a Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@2bfc932e
05:07:44.343 DEBUG [Http1Request$FixedContentSubscriber.onNext] - [pool-2-thread-2] [2s 12ms] jdk.internal.net.http.Http1Request@3779ce0a onNext
05:07:44.343 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [2s 12ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=41 cap=16384]], throwable=null]
05:07:44.343 DEBUG [Http1Request$FixedContentSubscriber.onComplete] - [pool-2-thread-2] [2s 12ms] jdk.internal.net.http.Http1Request@3779ce0a onComplete
05:07:44.343 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [2s 12ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.343 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 12ms] Http1Publisher(SocketTube(1)) onNext with 460 bytes
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [2s 12ms] SocketTube(1) trying to write: 460
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [2s 12ms] SocketTube(1) wrote: 460
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [2s 12ms] SocketTube(1) write: requesting more...
05:07:44.343 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [2s 12ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.343 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 12ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.343 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 13ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.343 DEBUG [Http1Exchange.requestMoreBody] - [pool-2-thread-2] [2s 13ms] Http1Exchange requesting more request body from the subscriber
05:07:44.343 DEBUG [Http1Exchange$Http1BodySubscriber.request] - [pool-2-thread-2] [2s 13ms] jdk.internal.net.http.Http1Request@3779ce0a Http1BodySubscriber requesting 1, from jdk.internal.net.http.PullPublisher$Subscription@2bfc932e
05:07:44.343 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 13ms] Http1Publisher(SocketTube(1)) onNext with 41 bytes
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [2s 13ms] SocketTube(1) trying to write: 41
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-2] [2s 13ms] SocketTube(1) wrote: 41
05:07:44.343 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [2s 13ms] SocketTube(1) write: requesting more...
05:07:44.343 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-2] [2s 13ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.343 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 13ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.343 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 13ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.343 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-2] [2s 13ms] Http1Exchange initiating completion of bodySentCF
05:07:44.343 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [2s 13ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.344 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-2] [2s 13ms] Http1Exchange reading headers
05:07:44.344 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [2s 13ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.344 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [2s 13ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.344 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-2] [2s 13ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.344 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 13ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@53b96b63
05:07:44.344 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 13ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.358 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 27ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.358 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 27ms] SocketTube(1) read bytes: 974
05:07:44.358 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Putting 974 bytes into the queue
05:07:44.358 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s 28ms] SocketTube(1) resuming read event
05:07:44.358 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 28ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.358 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 28ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.358 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Got 974 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@9a6c345
05:07:44.358 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.358 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 28ms] HttpClientImpl(1) next timeout: 299981
05:07:44.359 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 28ms] HttpClientImpl(1) next expired: 0
05:07:44.358 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 974 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@9a6c345
05:07:44.359 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 28ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.359 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [2s 28ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Sending 974/974 bytes to header parser
05:07:44.359 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-2] [2s 28ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=116
05:07:44.359 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@9a6c345
05:07:44.359 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-2] [2s 28ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.359 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-2] [2s 28ms] Http1Exchange getResponseAsync completed successfully
05:07:44.359 DEBUG [Http1Response.readBody] - [pool-2-thread-2] [2s 28ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.359 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-2] [2s 28ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.359 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@6cba36ba/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2390ade0 queue.isEmpty: false
05:07:44.359 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 28ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 858
05:07:44.359 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-2] [2s 28ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=858, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.359 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@6cba36ba/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2390ade0, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.359 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) Got 858 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@6cba36ba/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2390ade0
05:07:44.359 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.359 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 858 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@6cba36ba/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@2390ade0
05:07:44.359 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-2] [2s 29ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Sending 858/974 bytes to body parser
05:07:44.359 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [2s 29ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 858 bytes (858 remaining / 858)
05:07:44.359 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-2] [2s 29ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.359 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-2] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.359 DEBUG [Http1Response.onFinished] - [pool-2-thread-2] [2s 29ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.359 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-2] [2s 29ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.359 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [2s 29ms] SocketTube(1) connecting flows
05:07:44.359 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [2s 29ms] SocketTube(1) read publisher got subscriber
05:07:44.359 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [2s 29ms] SocketTube(1) registering subscribe event
05:07:44.360 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 29ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) subscribe event raised
05:07:44.360 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 29ms] SocketTube(1) subscribed for writing
05:07:44.360 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [2s 29ms] SocketTube(1) write: resetting demand to 0
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.360 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [2s 29ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) read demand reset to 0
05:07:44.360 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 29ms] SocketTube(1) write: registering startSubscription event
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) calling onSubscribe
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) got some demand for reading
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) resuming read event
05:07:44.360 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 29ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.360 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) onSubscribe called
05:07:44.360 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 29ms] SocketTube(1) pending subscriber subscribed
05:07:44.360 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-2] [2s 29ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.360 DEBUG [JdkHttpClient.execute0] - Ending request (POST) /session/2945f8180331255e70d350e8d06dbbf1/element in 21ms
05:07:44.360 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 29ms] HttpClientImpl(1) next timeout: 0
05:07:44.360 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-2] [2s 29ms] Http1Response(id=42, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.360 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=517f0381e05366cf, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=03ab85a5331d5191, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664338000000, endEpochNanos=1735189664359733054, attributes=AttributesMap{data={http.method=POST, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.360 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 30ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.360 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 30ms] HttpClientImpl(1) next expired: 1199640
05:07:44.360 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-2] [2s 30ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.360 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 30ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.360 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 30ms] SocketTube(1) write: starting subscription
05:07:44.361 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 30ms] SocketTube(1) write: offloading requestMore
05:07:44.360 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=d79ae1c3e46fd7b0, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=03ab85a5331d5191, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664338000000, endEpochNanos=1735189664359945160, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.361 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-2] [2s 30ms] SocketTube(1) write: requesting more...
05:07:44.361 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 30ms] HttpClientImpl(1) next timeout: 0
05:07:44.361 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=c0e68877ae4d7a36, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=03ab85a5331d5191, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664338000000, endEpochNanos=1735189664360727278, attributes=AttributesMap{data={http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.361 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 30ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.361 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=55853e29a2fff585c9d3efe22f0c9126, spanId=03ab85a5331d5191, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664338000000, endEpochNanos=1735189664361192165, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=POST, http.target=/session/2945f8180331255e70d350e8d06dbbf1/element, http.status_code=404}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=ERROR, description=Kind: NOT_FOUND Description:}, hasEnded=true}
05:07:44.361 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 30ms] HttpClientImpl(1) next expired: 1199639
05:07:44.361 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 30ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.362 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
DELETE /wd/hub/session/2945f8180331255e70d350e8d06dbbf1 HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:44.362 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1)
DELETE /wd/hub/session/2945f8180331255e70d350e8d06dbbf1 HTTP/1.1
Host: localhost:4444
Content-Type: application/json;charset=UTF-8
Accept: application/json
Content-Length: 0
05:07:44.362 DEBUG [RequestConverter.channelRead0] - Incoming message: EmptyLastHttpContent
05:07:44.362 DEBUG [RequestConverter.channelRead0] - End of http request: EmptyLastHttpContent
05:07:44.363 DEBUG [HttpTracing.inject] - Injecting (DELETE) /session/2945f8180331255e70d350e8d06dbbf1 into OpenTelemetrySpan{traceId=7a717cca8065df12b0f6463cedd559d7,spanId=91f92b5bc561c8aa} at org.openqa.selenium.grid.router.HandleSession:178
05:07:44.363 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=29dc697230912806, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=91f92b5bc561c8aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=reverse_proxy, kind=INTERNAL, attributes=AttributesMap{data={http.method=DELETE, http.target=/session/2945f8180331255e70d350e8d06dbbf1}, capacity=128, totalAddedValues=2}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664363000000, endEpochNanos=0}}, span id=29dc697230912806, trace id=7a717cca8065df12b0f6463cedd559d7} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@7f416310, context={opentelemetry-trace-span-key=SdkSpan{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=479a309096ecd96d, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=91f92b5bc561c8aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=node.forward_command, kind=INTERNAL, attributes=AttributesMap{data={random.key=c8de09ed-c225-46c0-b45f-403dbef8f248}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1735189664363000000, endEpochNanos=0}}, span id=479a309096ecd96d, trace id=7a717cca8065df12b0f6463cedd559d7}
05:07:44.363 DEBUG [HttpTracing.inject] - Injecting (DELETE) /session/2945f8180331255e70d350e8d06dbbf1 into OpenTelemetrySpan{traceId=7a717cca8065df12b0f6463cedd559d7,spanId=479a309096ecd96d} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:85
05:07:44.364 DEBUG [JdkHttpClient.execute0] - Executing request: (DELETE) /session/2945f8180331255e70d350e8d06dbbf1
05:07:44.364 DEBUG [HttpClientImpl.sendAsync] - [pool-1-thread-1] [2s 33ms] HttpClientImpl(1) ClientImpl (async) send http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1 DELETE
05:07:44.364 DEBUG [Exchange.establishExchange] - [pool-2-thread-2] [2s 33ms] Exchange establishing exchange for http://localhost:22314/session/2945f8180331255e70d350e8d06dbbf1 DELETE,
	 proxy=null
05:07:44.364 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 33ms] HttpClientImpl(1) next timeout: 300000
05:07:44.364 DEBUG [Http2ClientImpl.getConnectionFor] - [pool-2-thread-2] [2s 34ms] Http2ClientImpl not found in connection pool
05:07:44.364 DEBUG [ExchangeImpl.get] - [pool-2-thread-2] [2s 34ms] ExchangeImpl get: Trying to get HTTP/2 connection
05:07:44.364 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 34ms] HttpClientImpl(1) next expired: 1199636
05:07:44.364 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 34ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.364 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [2s 34ms] ExchangeImpl handling HTTP/2 connection creation result
05:07:44.364 DEBUG [ExchangeImpl.createExchangeImpl] - [pool-2-thread-2] [2s 34ms] ExchangeImpl new Http1Exchange, try to upgrade
05:07:44.365 DEBUG [HttpConnection.getConnection] - [pool-2-thread-2] [2s 34ms] HttpConnection(SocketTube(?)) SocketTube(1): plain connection retrieved from HTTP/1.1 pool
05:07:44.365 DEBUG [Exchange.checkFor407] - [pool-2-thread-2] [2s 34ms] Exchange checkFor407: all clear
05:07:44.365 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [2s 34ms] Http1Exchange Sending headers only
05:07:44.365 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$HeadersReader@429aa44a queue.isEmpty: true
05:07:44.365 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$HeadersReader@429aa44a, demand=1, canRequestMore=true, queue.isEmpty=true
05:07:44.365 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.365 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.365 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.365 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-2] [2s 34ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.365 DEBUG [Http1Exchange.sendHeadersAsync] - [pool-2-thread-2] [2s 34ms] Http1Exchange response created in advance
05:07:44.365 DEBUG [Http1Exchange.connectFlows] - [pool-2-thread-2] [2s 34ms] Http1Exchange SocketTube(1) connecting flows
05:07:44.365 DEBUG [SocketTube.connectFlows] - [pool-2-thread-2] [2s 34ms] SocketTube(1) connecting flows
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-2] [2s 34ms] SocketTube(1) read publisher got subscriber
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-2] [2s 34ms] SocketTube(1) registering subscribe event
05:07:44.365 DEBUG [SocketTube.debugState] - [pool-2-thread-2] [2s 34ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [2s 34ms] SocketTube(1) subscribe event raised
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 34ms] SocketTube(1) handling pending subscription for jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber@76093688
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) read demand reset to 0
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) calling onSubscribe
05:07:44.365 DEBUG [Http1Exchange$Http1Publisher.subscribe] - [pool-2-thread-2] [2s 34ms] Http1Publisher(SocketTube(1)) got subscriber: SocketTube(1)
05:07:44.365 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 35ms] SocketTube(1) subscribed for writing
05:07:44.365 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-2] [2s 35ms] SocketTube(1) write: resetting demand to 0
05:07:44.365 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-2] [2s 35ms] SocketTube(1) write: registering startSubscription event
05:07:44.365 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe] - [HttpClient-1-SelectorManager] [2s 35ms] Http1AsyncReceiver(SocketTube(1)) Received onSubscribed from upstream
05:07:44.365 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [2s 35ms] Http1Exchange requestAction.headers
05:07:44.365 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [2s 35ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.365 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) onSubscribe called
05:07:44.366 DEBUG [Http1Exchange.lambda$sendHeadersAsync$4] - [pool-2-thread-2] [2s 35ms] Http1Exchange setting outgoing with headers
05:07:44.366 DEBUG [Http1AsyncReceiver.checkRequestMore] - [pool-2-thread-3] [2s 35ms] Http1AsyncReceiver(SocketTube(1)) checkRequestMore: canRequestMore=true, hasDemand=true
05:07:44.366 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.requestMore] - [pool-2-thread-3] [2s 35ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: requesting one more from upstream
05:07:44.366 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [pool-2-thread-3] [2s 35ms] SocketTube(1) got some demand for reading
05:07:44.366 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [pool-2-thread-3] [2s 35ms] SocketTube(1) resuming read event
05:07:44.366 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-2] [2s 35ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=428 cap=428]], throwable=null]
05:07:44.366 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 35ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.366 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-2] [2s 35ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.366 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) pending subscriber subscribed
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 35ms] HttpClientImpl(1) next timeout: 299998
05:07:44.366 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 35ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 35ms] HttpClientImpl(1) next expired: 0
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 35ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.366 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 35ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.366 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) write: starting subscription
05:07:44.366 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 35ms] SocketTube(1) write: offloading requestMore
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 36ms] HttpClientImpl(1) next timeout: 299998
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 36ms] HttpClientImpl(1) next expired: 0
05:07:44.366 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [2s 36ms] SocketTube(1) write: requesting more...
05:07:44.366 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 36ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.366 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.366 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) WriteTask
05:07:44.366 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) hasOutgoing = true
05:07:44.366 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [2s 36ms] Http1Exchange initiating completion of headersSentCF
05:07:44.366 DEBUG [Exchange.checkFor407] - [pool-2-thread-3] [2s 36ms] Exchange checkFor407: all clear
05:07:44.366 DEBUG [Exchange.sendRequestBody] - [pool-2-thread-3] [2s 36ms] Exchange sendRequestBody
05:07:44.366 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [2s 36ms] Http1Exchange sendBodyAsync
05:07:44.366 DEBUG [Http1Exchange.sendBodyAsync] - [pool-2-thread-3] [2s 36ms] Http1Exchange bodySubscriber is null
05:07:44.367 DEBUG [Http1Exchange.appendToOutgoing] - [pool-2-thread-3] [2s 36ms] Http1Exchange appending to outgoing DataPair [data=[java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]], throwable=null]
05:07:44.367 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) onNext with 428 bytes
05:07:44.367 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [2s 36ms] SocketTube(1) trying to write: 428
05:07:44.367 DEBUG [SocketTube$InternalWriteSubscriber.tryFlushCurrent] - [pool-2-thread-3] [2s 36ms] SocketTube(1) wrote: 428
05:07:44.367 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [2s 36ms] SocketTube(1) write: requesting more...
05:07:44.367 DEBUG [Http1Exchange$Http1Publisher$Http1WriteSubscription.request] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) subscription request(1), demand=1
05:07:44.367 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 36ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.367 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 36ms] SocketTube(1) leaving w.onNext Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.367 DEBUG [Http1Exchange.getOutgoing] - [pool-2-thread-3] [2s 36ms] Http1Exchange initiating completion of bodySentCF
05:07:44.367 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [2s 36ms] Http1Exchange sendBodyAsync completed successfully
05:07:44.367 DEBUG [Http1Exchange.getResponseAsync] - [pool-2-thread-3] [2s 36ms] Http1Exchange reading headers
05:07:44.367 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [2s 36ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Reading Headers: (remaining: 0) READING_HEADERS
05:07:44.367 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [2s 36ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) First time around
05:07:44.367 DEBUG [Http1Response.readHeadersAsync] - [pool-2-thread-3] [2s 36ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) headersReader is not yet completed
05:07:44.367 DEBUG [Http1Exchange$Http1Publisher$WriteTask.run] - [pool-2-thread-3] [2s 36ms] Http1Publisher(SocketTube(1)) completed, stopping jdk.internal.net.http.common.SequentialScheduler@6ea8525d
05:07:44.367 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 36ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.418 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 87ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.418 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 87ms] SocketTube(1) read bytes: 122
05:07:44.418 DEBUG [Http1AsyncReceiver.asyncReceive] - [HttpClient-1-SelectorManager] [2s 87ms] Http1AsyncReceiver(SocketTube(1)) Putting 122 bytes into the queue
05:07:44.418 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s 87ms] SocketTube(1) resuming read event
05:07:44.418 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 87ms] Http1AsyncReceiver(SocketTube(1)) Got 122 bytes for delegate jdk.internal.net.http.Http1Response$HeadersReader@429aa44a
05:07:44.418 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 1
05:07:44.418 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 87ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.418 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 88ms] SocketTube(1) leaving read() loop after onNext:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.418 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 122 bytes to delegate jdk.internal.net.http.Http1Response$HeadersReader@429aa44a
05:07:44.418 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 88ms] HttpClientImpl(1) next timeout: 299946
05:07:44.418 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 88ms] HttpClientImpl(1) next expired: 0
05:07:44.418 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [2s 88ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Sending 122/122 bytes to header parser
05:07:44.418 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 88ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.419 DEBUG [Http1Response$HeadersReader.handle] - [pool-2-thread-3] [2s 88ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Parsing headers completed. bytes=108
05:07:44.419 DEBUG [Http1AsyncReceiver.unsubscribe] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) Unsubscribed jdk.internal.net.http.Http1Response$HeadersReader@429aa44a
05:07:44.419 DEBUG [Http1Response.lambda$readHeadersAsync$0] - [pool-2-thread-3] [2s 88ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Reading Headers: creating Response object; state is now READING_BODY
05:07:44.419 DEBUG [Utils.lambda$wrapForDebug$9] - [pool-2-thread-3] [2s 88ms] Http1Exchange getResponseAsync completed successfully
05:07:44.419 DEBUG [Http1Response.readBody] - [pool-2-thread-3] [2s 88ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) readBody: return2Cache: true
05:07:44.419 DEBUG [Http1Response$ClientRefCountTracker.acquire] - [pool-2-thread-3] [2s 88ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Operation started: incrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.419 DEBUG [Http1AsyncReceiver.subscribe] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) Subscribed pending jdk.internal.net.http.Http1Response$BodyReader@3940d0dd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5621d79 queue.isEmpty: false
05:07:44.419 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 14
05:07:44.419 DEBUG [ResponseContent$FixedLengthBodyParser.onSubscribe] - [pool-2-thread-3] [2s 88ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser length=14, onSubscribe: jdk.internal.net.http.Http1Response$Http1BodySubscriber
05:07:44.419 DEBUG [Http1AsyncReceiver.handlePendingDelegate] - [pool-2-thread-3] [2s 88ms] Http1AsyncReceiver(SocketTube(1)) delegate is now jdk.internal.net.http.Http1Response$BodyReader@3940d0dd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5621d79, demand=9223372036854775807, canRequestMore=false, queue.isEmpty=false
05:07:44.419 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 89ms] Http1AsyncReceiver(SocketTube(1)) Got 14 bytes for delegate jdk.internal.net.http.Http1Response$BodyReader@3940d0dd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5621d79
05:07:44.419 DEBUG [Http1AsyncReceiver.hasDemand] - [pool-2-thread-3] [2s 89ms] Http1AsyncReceiver(SocketTube(1)) downstream subscription demand is 9223372036854775807
05:07:44.419 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 89ms] Http1AsyncReceiver(SocketTube(1)) Forwarding 14 bytes to delegate jdk.internal.net.http.Http1Response$BodyReader@3940d0dd/parser=jdk.internal.net.http.ResponseContent$FixedLengthBodyParser@5621d79
05:07:44.419 DEBUG [Http1Response$BodyReader.handle] - [pool-2-thread-3] [2s 89ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Sending 14/122 bytes to body parser
05:07:44.419 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [2s 89ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got 14 bytes (14 remaining / 14)
05:07:44.419 DEBUG [ResponseContent$FixedLengthBodyParser.accept] - [pool-2-thread-3] [2s 89ms] PlainHttpConnection(SocketTube(1))/ResponseContent/FixedLengthBodyParser Parser got all expected bytes: completing
05:07:44.419 DEBUG [Http1AsyncReceiver.clear] - [pool-2-thread-3] [2s 89ms] Http1AsyncReceiver(SocketTube(1)) cleared
05:07:44.419 DEBUG [Http1Response.onFinished] - [pool-2-thread-3] [2s 89ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) SocketTube(1): return to HTTP/1.1 pool
05:07:44.419 DEBUG [ConnectionPool.registerCleanupTrigger] - [pool-2-thread-3] [2s 89ms] ConnectionPool(1) registering CleanupTrigger(SocketTube(1))
05:07:44.419 DEBUG [SocketTube.connectFlows] - [pool-2-thread-3] [2s 89ms] SocketTube(1) connecting flows
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher.subscribe] - [pool-2-thread-3] [2s 89ms] SocketTube(1) read publisher got subscriber
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe] - [pool-2-thread-3] [2s 89ms] SocketTube(1) registering subscribe event
05:07:44.420 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 89ms] SocketTube(1) leaving read.subscribe:  Reading: [ops=1, demand=0, stopped=false], Writing: [ops=0, demand=1]
05:07:44.420 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [2s 89ms] SocketTube(1) subscribed for writing
05:07:44.420 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription] - [pool-2-thread-3] [2s 89ms] SocketTube(1) write: resetting demand to 0
05:07:44.420 DEBUG [SocketTube$InternalWriteSubscriber.onSubscribe] - [pool-2-thread-3] [2s 89ms] SocketTube(1) write: registering startSubscription event
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) subscribe event raised
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) handling pending subscription for CleanupTrigger(SocketTube(1))
05:07:44.420 DEBUG [Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription] - [HttpClient-1-SelectorManager] [2s 89ms] Http1AsyncReceiver(SocketTube(1)) Http1TubeSubscriber: dropSubscription
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) read demand reset to 0
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) calling onSubscribe
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.request] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) got some demand for reading
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) resuming read event
05:07:44.420 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 89ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 1 (false)
05:07:44.420 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) leaving request(1):  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=0]
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) onSubscribe called
05:07:44.420 DEBUG [JdkHttpClient.execute0] - Ending request (DELETE) /session/2945f8180331255e70d350e8d06dbbf1 in 56ms
05:07:44.420 DEBUG [Http1Response.lambda$readBody$2] - [pool-2-thread-3] [2s 89ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Finished reading body: READING_BODY
05:07:44.420 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 89ms] SocketTube(1) pending subscriber subscribed
05:07:44.420 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) next timeout: 0
05:07:44.420 DEBUG [Http1Response$ClientRefCountTracker.tryRelease] - [pool-2-thread-3] [2s 90ms] Http1Response(id=43, PlainHttpConnection(SocketTube(1))) Operation finished: decrementing ref count for jdk.internal.net.http.HttpClientImpl@268adc48(1)
05:07:44.420 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=c35cc01aed20cd0e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=479a309096ecd96d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1735189664364000000, endEpochNanos=1735189664420520093, attributes=AttributesMap{data={http.method=DELETE, span.kind=client, http.target=/session/2945f8180331255e70d350e8d06dbbf1, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.420 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 90ms] Http1AsyncReceiver(SocketTube(1)) Delegate done: 0
05:07:44.420 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=fde7a34a73509ec0, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=479a309096ecd96d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664364000000, endEpochNanos=1735189664420900111, attributes=AttributesMap{data={http.method=DELETE, http.target=/session/2945f8180331255e70d350e8d06dbbf1, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.420 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) next expired: 1199580
05:07:44.421 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.420 DEBUG [Http1AsyncReceiver.flush] - [pool-2-thread-3] [2s 90ms] Http1AsyncReceiver(SocketTube(1)) Got 0 bytes for delegate null
05:07:44.421 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 90ms] SocketTube(1) write: starting subscription
05:07:44.421 DEBUG [SocketTube$InternalWriteSubscriber.startSubscription] - [HttpClient-1-SelectorManager] [2s 90ms] SocketTube(1) write: offloading requestMore
05:07:44.421 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) next timeout: 0
05:07:44.421 DEBUG [SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore] - [pool-2-thread-3] [2s 90ms] SocketTube(1) write: requesting more...
05:07:44.421 DEBUG [SocketTube.debugState] - [pool-2-thread-3] [2s 90ms] SocketTube(1) leaving requestMore:  Reading: [ops=1, demand=1, stopped=false], Writing: [ops=0, demand=1]
05:07:44.421 DEBUG [UrlChecker.waitUntilUnavailable] - Waiting for http://localhost:22314/shutdown
05:07:44.421 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) next expired: 1199579
05:07:44.421 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 90ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.422 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:22314/shutdown
05:07:44.422 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@7a4315e05 pairs: {GET /shutdown HTTP/1.1: null}{User-Agent: Java/17.0.13}{Host: localhost:22314}{Accept: */*}{Connection: keep-alive}
05:07:44.423 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@77ffc7b73 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 40}{Content-Type: application/json; charset=utf-8}
05:07:44.423 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 92ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.423 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 92ms] SocketTube(1) got read EOF
05:07:44.423 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.pauseReadEvent] - [HttpClient-1-SelectorManager] [2s 92ms] SocketTube(1) pausing read event
05:07:44.423 DEBUG [HttpClientImpl$SelectorAttachment.register] - [HttpClient-1-SelectorManager] [2s 93ms] SelectorAttachment Registering jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent@25408e7b for 0 (false)
05:07:44.423 DEBUG [SocketTube$InternalReadPublisher$ReadSubscription.signalCompletion] - [HttpClient-1-SelectorManager] [2s 93ms] SocketTube(1) completing subscriber
05:07:44.423 DEBUG [ConnectionPool.cleanup] - [HttpClient-1-SelectorManager] [2s 93ms] ConnectionPool(1) SocketTube(1) : ConnectionPool.cleanup(null)
05:07:44.424 DEBUG [PlainHttpConnection.close] - [HttpClient-1-SelectorManager] [2s 93ms] PlainHttpConnection(SocketTube(1)) Closing channel: channel registered with selector, key.interestOps=1, sa.interestOps=1
05:07:44.424 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalError] - [HttpClient-1-SelectorManager] [2s 93ms] SocketTube(1) signal read error: java.io.IOException: connection closed locally
05:07:44.424 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalError] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) got read error: java.io.IOException: connection closed locally
05:07:44.424 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) Stopping read scheduler
05:07:44.424 DEBUG [SocketTube.debugState] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) leaving read() loop after EOF:  Reading: [ops=0, demand=0, stopped=true], Writing: [ops=0, demand=1]
05:07:44.424 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.read] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) Read scheduler stopped
05:07:44.424 DEBUG [HttpClientImpl$SelectorAttachment.resetInterestOps] - [HttpClient-1-SelectorManager] [2s 94ms] SelectorAttachment key cancelled for java.nio.channels.SocketChannel[closed]
05:07:44.425 DEBUG [SocketTube$SocketFlowEvent.abort] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) ReadEvent abort: java.io.IOException: java.nio.channels.CancelledKeyException
05:07:44.425 DEBUG [ExternalProcess$Builder.lambda$start$0] - completed to copy the output of process 42698
05:07:44.425 DEBUG [SocketTube$InternalReadPublisher$ReadEvent.signalError] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) signalError to jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription@1ddd98ba (java.io.IOException: java.nio.channels.CancelledKeyException)
05:07:44.425 DEBUG [SocketTube$InternalReadPublisher$InternalReadSubscription.signalError] - [HttpClient-1-SelectorManager] [2s 94ms] SocketTube(1) signal read error: java.io.IOException: java.nio.channels.CancelledKeyException
05:07:44.425 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 95ms] HttpClientImpl(1) next timeout: 0
05:07:44.425 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 95ms] HttpClientImpl(1) next expired: 0
05:07:44.425 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [2s 95ms] HttpClientImpl(1) Next deadline is 3000
05:07:44.433 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:22314/shutdown
05:07:44.437 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local Session Map, Id: 2945f8180331255e70d350e8d06dbbf1
05:07:44.437 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=989ed0cc9a97d878, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=479a309096ecd96d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=local_sessionmap.remove, kind=INTERNAL, startEpochNanos=1735189664436399966, endEpochNanos=1735189664436628201, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[ImmutableEventData{name=Deleted session from local Session Map, attributes={logger="org.openqa.selenium.grid.sessionmap.local.LocalSessionMap", session.id="2945f8180331255e70d350e8d06dbbf1"}, epochNanos=1735189664436463173, totalAttributeCount=2}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true}
05:07:44.437 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "7a717cca8065df12b0f6463cedd559d7","eventTime": 1735189664436463173,"eventName": "Deleted session from local Session Map","attributes": {"logger": "org.openqa.selenium.grid.sessionmap.local.LocalSessionMap","session.id": "2945f8180331255e70d350e8d06dbbf1"}}

05:07:44.438 INFO [GridModel.release] - Releasing slot for session id 2945f8180331255e70d350e8d06dbbf1
05:07:44.438 INFO [SessionSlot.stop] - Stopping session 2945f8180331255e70d350e8d06dbbf1
05:07:44.439 DEBUG [LocalNode.lambda$new$5] - Removing Downloads folder associated with 2945f8180331255e70d350e8d06dbbf1
05:07:44.439 DEBUG [LocalNode.lambda$new$6] - Removing Uploads folder associated with 2945f8180331255e70d350e8d06dbbf1
05:07:44.439 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=479a309096ecd96d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=91f92b5bc561c8aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=node.forward_command, kind=INTERNAL, startEpochNanos=1735189664363000000, endEpochNanos=1735189664438758603, attributes=AttributesMap{data={http.method=DELETE, random.key=c8de09ed-c225-46c0-b45f-403dbef8f248, span.kind=server, http.target=/session/2945f8180331255e70d350e8d06dbbf1, http.status_code=200}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class="org.openqa.selenium.remote.http.Route$PredicatedRoute", http.host="localhost:4444", http.method="DELETE", http.request_content_length="0", http.scheme="HTTP", http.status_code=200, http.target="/session/2945f8180331255e70d350e8d06dbbf1"}, epochNanos=1735189664438751259, totalAttributeCount=8}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.439 DEBUG [SeleniumSpanExporter$1.lambda$export$3] - {"traceId": "7a717cca8065df12b0f6463cedd559d7","eventTime": 1735189664438751259,"eventName": "HTTP request execution complete","attributes": {"http.flavor": 1,"http.handler_class": "org.openqa.selenium.remote.http.Route$PredicatedRoute","http.host": "localhost:4444","http.method": "DELETE","http.request_content_length": "0","http.scheme": "HTTP","http.status_code": 200,"http.target": "\u002fsession\u002f2945f8180331255e70d350e8d06dbbf1"}}

05:07:44.439 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=29dc697230912806, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=91f92b5bc561c8aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=reverse_proxy, kind=INTERNAL, startEpochNanos=1735189664363000000, endEpochNanos=1735189664439431276, attributes=AttributesMap{data={http.method=DELETE, http.target=/session/2945f8180331255e70d350e8d06dbbf1, http.status_code=200}, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.439 DEBUG [SeleniumSpanExporter$1.lambda$export$4] - SpanData{spanContext=ImmutableSpanContext{traceId=7a717cca8065df12b0f6463cedd559d7, spanId=91f92b5bc561c8aa, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=00000000000000000000000000000000, spanId=0000000000000000, traceFlags=00, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=false}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.20.0, attributes={service.name="unknown_service:java", telemetry.sdk.language="java", telemetry.sdk.name="opentelemetry", telemetry.sdk.version="1.28.0"}}, instrumentationScopeInfo=InstrumentationScopeInfo{name=default, version=null, schemaUrl=null, attributes={}}, name=router.handle_session, kind=INTERNAL, startEpochNanos=1735189664363000000, endEpochNanos=1735189664439880073, attributes=AttributesMap{data={session.id=2945f8180331255e70d350e8d06dbbf1, http.method=DELETE, http.target=/session/2945f8180331255e70d350e8d06dbbf1, http.status_code=200}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true}
05:07:44.441 DEBUG [RequestConverter.channelInactive] - Channel became inactive.
05:07:47.441 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [5s 110ms] HttpClientImpl(1) next timeout: 0
05:07:47.441 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [5s 110ms] HttpClientImpl(1) next expired: 0
05:07:47.441 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [5s 110ms] HttpClientImpl(1) Next deadline is 3000
05:07:50.457 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [8s 126ms] HttpClientImpl(1) next timeout: 0
05:07:50.457 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [8s 127ms] HttpClientImpl(1) next expired: 0
05:07:50.457 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [8s 127ms] HttpClientImpl(1) Next deadline is 3000
05:07:53.468 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [11s 137ms] HttpClientImpl(1) next timeout: 0
05:07:53.468 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [11s 138ms] HttpClientImpl(1) next expired: 0
05:07:53.468 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [11s 138ms] HttpClientImpl(1) Next deadline is 3000
05:07:56.474 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [14s 144ms] HttpClientImpl(1) next timeout: 0
05:07:56.475 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [14s 144ms] HttpClientImpl(1) next expired: 0
05:07:56.475 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [14s 144ms] HttpClientImpl(1) Next deadline is 3000
05:07:59.485 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [17s 154ms] HttpClientImpl(1) next timeout: 0
05:07:59.485 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [17s 155ms] HttpClientImpl(1) next expired: 0
05:07:59.485 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [17s 155ms] HttpClientImpl(1) Next deadline is 3000
05:08:02.497 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [20s 167ms] HttpClientImpl(1) next timeout: 0
05:08:02.497 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [20s 167ms] HttpClientImpl(1) next expired: 0
05:08:02.497 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [20s 167ms] HttpClientImpl(1) Next deadline is 3000
05:08:05.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [23s 176ms] HttpClientImpl(1) next timeout: 0
05:08:05.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [23s 177ms] HttpClientImpl(1) next expired: 0
05:08:05.507 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [23s 177ms] HttpClientImpl(1) Next deadline is 3000
05:08:08.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [26s 190ms] HttpClientImpl(1) next timeout: 0
05:08:08.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [26s 190ms] HttpClientImpl(1) next expired: 0
05:08:08.521 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [26s 190ms] HttpClientImpl(1) Next deadline is 3000
05:08:11.534 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [29s 203ms] HttpClientImpl(1) next timeout: 0
05:08:11.534 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [29s 203ms] HttpClientImpl(1) next expired: 0
05:08:11.534 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [29s 203ms] HttpClientImpl(1) Next deadline is 3000
05:08:14.549 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [32s 218ms] HttpClientImpl(1) next timeout: 0
05:08:14.549 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [32s 219ms] HttpClientImpl(1) next expired: 0
05:08:14.549 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [32s 219ms] HttpClientImpl(1) Next deadline is 3000
05:08:17.565 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [35s 234ms] HttpClientImpl(1) next timeout: 0
05:08:17.565 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [35s 234ms] HttpClientImpl(1) next expired: 0
05:08:17.565 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [35s 234ms] HttpClientImpl(1) Next deadline is 3000
05:08:20.580 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [38s 250ms] HttpClientImpl(1) next timeout: 0
05:08:20.581 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [38s 250ms] HttpClientImpl(1) next expired: 0
05:08:20.581 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [38s 250ms] HttpClientImpl(1) Next deadline is 3000
05:08:23.596 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [41s 266ms] HttpClientImpl(1) next timeout: 0
05:08:23.597 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [41s 266ms] HttpClientImpl(1) next expired: 0
05:08:23.597 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [41s 266ms] HttpClientImpl(1) Next deadline is 3000
05:08:26.612 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [44s 281ms] HttpClientImpl(1) next timeout: 0
05:08:26.612 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [44s 282ms] HttpClientImpl(1) next expired: 0
05:08:26.612 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [44s 282ms] HttpClientImpl(1) Next deadline is 3000
05:08:29.628 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [47s 297ms] HttpClientImpl(1) next timeout: 0
05:08:29.628 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [47s 297ms] HttpClientImpl(1) next expired: 0
05:08:29.628 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [47s 297ms] HttpClientImpl(1) Next deadline is 3000
05:08:32.643 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [50s 312ms] HttpClientImpl(1) next timeout: 0
05:08:32.643 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [50s 312ms] HttpClientImpl(1) next expired: 0
05:08:32.643 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [50s 312ms] HttpClientImpl(1) Next deadline is 3000
05:08:35.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [53s 316ms] HttpClientImpl(1) next timeout: 0
05:08:35.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [53s 316ms] HttpClientImpl(1) next expired: 0
05:08:35.647 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [53s 317ms] HttpClientImpl(1) Next deadline is 3000
05:08:38.661 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [56s 330ms] HttpClientImpl(1) next timeout: 0
05:08:38.661 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [56s 330ms] HttpClientImpl(1) next expired: 0
05:08:38.661 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [56s 330ms] HttpClientImpl(1) Next deadline is 3000
05:08:41.669 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [59s 339ms] HttpClientImpl(1) next timeout: 0
05:08:41.669 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [59s 339ms] HttpClientImpl(1) next expired: 0
05:08:41.669 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [59s 339ms] HttpClientImpl(1) Next deadline is 3000
05:08:44.676 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [62s 345ms] HttpClientImpl(1) next timeout: 0
05:08:44.676 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [62s 346ms] HttpClientImpl(1) next expired: 0
05:08:44.676 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [62s 346ms] HttpClientImpl(1) Next deadline is 3000
05:08:47.678 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [65s 347ms] HttpClientImpl(1) next timeout: 0
05:08:47.678 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [65s 347ms] HttpClientImpl(1) next expired: 0
05:08:47.678 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [65s 347ms] HttpClientImpl(1) Next deadline is 3000
05:08:50.689 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [68s 359ms] HttpClientImpl(1) next timeout: 0
05:08:50.689 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [68s 359ms] HttpClientImpl(1) next expired: 0
05:08:50.690 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [68s 359ms] HttpClientImpl(1) Next deadline is 3000
05:08:53.701 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [71s 370ms] HttpClientImpl(1) next timeout: 0
05:08:53.701 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [71s 370ms] HttpClientImpl(1) next expired: 0
05:08:53.701 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [71s 370ms] HttpClientImpl(1) Next deadline is 3000
05:08:56.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [74s 383ms] HttpClientImpl(1) next timeout: 0
05:08:56.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [74s 383ms] HttpClientImpl(1) next expired: 0
05:08:56.713 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [74s 383ms] HttpClientImpl(1) Next deadline is 3000
05:08:59.729 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [77s 399ms] HttpClientImpl(1) next timeout: 0
05:08:59.730 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [77s 399ms] HttpClientImpl(1) next expired: 0
05:08:59.730 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [77s 400ms] HttpClientImpl(1) Next deadline is 3000
05:09:02.738 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [80s 407ms] HttpClientImpl(1) next timeout: 0
05:09:02.738 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [80s 407ms] HttpClientImpl(1) next expired: 0
05:09:02.738 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [80s 407ms] HttpClientImpl(1) Next deadline is 3000
05:09:05.746 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [83s 415ms] HttpClientImpl(1) next timeout: 0
05:09:05.746 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [83s 415ms] HttpClientImpl(1) next expired: 0
05:09:05.746 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [83s 415ms] HttpClientImpl(1) Next deadline is 3000
05:09:08.761 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [86s 431ms] HttpClientImpl(1) next timeout: 0
05:09:08.761 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [86s 431ms] HttpClientImpl(1) next expired: 0
05:09:08.761 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [86s 431ms] HttpClientImpl(1) Next deadline is 3000
05:09:11.768 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [89s 437ms] HttpClientImpl(1) next timeout: 0
05:09:11.768 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [89s 437ms] HttpClientImpl(1) next expired: 0
05:09:11.768 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [89s 437ms] HttpClientImpl(1) Next deadline is 3000
05:09:14.783 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [92s 452ms] HttpClientImpl(1) next timeout: 0
05:09:14.783 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [92s 453ms] HttpClientImpl(1) next expired: 0
05:09:14.783 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [92s 453ms] HttpClientImpl(1) Next deadline is 3000
05:09:17.799 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [95s 468ms] HttpClientImpl(1) next timeout: 0
05:09:17.799 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [95s 468ms] HttpClientImpl(1) next expired: 0
05:09:17.799 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [95s 468ms] HttpClientImpl(1) Next deadline is 3000
05:09:20.801 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [98s 471ms] HttpClientImpl(1) next timeout: 0
05:09:20.801 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [98s 471ms] HttpClientImpl(1) next expired: 0
05:09:20.802 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [98s 471ms] HttpClientImpl(1) Next deadline is 3000
05:09:23.817 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [101s 486ms] HttpClientImpl(1) next timeout: 0
05:09:23.817 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [101s 486ms] HttpClientImpl(1) next expired: 0
05:09:23.817 DEBUG [HttpClientImpl$SelectorManager.run] - [HttpClient-1-SelectorManager] [101s 486ms] HttpClientImpl(1) Next deadline is 3000
05:09:26.832 DEBUG [HttpClientImpl$SelectorManager.shutdown] - [HttpClient-1-SelectorManager] [104s 501ms] HttpClientImpl(1) SelectorManager shutting down
05:09:26.833 DEBUG [Http2ClientImpl.stop] - [HttpClient-1-SelectorManager] [104s 503ms] Http2ClientImpl stopping
05:09:32.558 DEBUG [LocalDistributor.lambda$asRunnableHealthCheck$9] - Running healthcheck for Node http://172.16.4.2:4444
05:09:32.559 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://172.16.4.2:4444 was UP
05:11:32.558 DEBUG [LocalDistributor.lambda$asRunnableHealthCheck$9] - Running healthcheck for Node http://172.16.4.2:4444
05:11:32.559 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://172.16.4.2:4444 was UP
05:13:32.558 DEBUG [LocalDistributor.lambda$asRunnableHealthCheck$9] - Running healthcheck for Node http://172.16.4.2:4444
05:13:32.559 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://172.16.4.2:4444 was UP
05:15:32.558 DEBUG [LocalDistributor.lambda$asRunnableHealthCheck$9] - Running healthcheck for Node http://172.16.4.2:4444
05:15:32.558 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://172.16.4.2:4444 was UP
